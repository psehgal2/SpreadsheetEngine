beginning of profiler log written on 2024-03-13 13:59:39.255435 ran on the computer of testing now deepcopy sheets

##################Running pro_load_workbook... #######################
for test <function pro_load_workbook at 0x7fa3a3574cc0> total time: 8.645267649000003
Total Logs
         2204902 function calls (2193702 primitive calls) in 0.757 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     2100    0.128    0.000    0.471    0.000 earley.py:78(predict_and_complete)
   103200    0.070    0.000    0.114    0.000 earley_common.py:9(__init__)
      200    0.049    0.000    0.172    0.001 earley_forest.py:283(visit)
267800/259000    0.043    0.000    0.056    0.000 {built-in method builtins.hash}
    89700    0.034    0.000    0.051    0.000 utils.py:345(add)
    76800    0.034    0.000    0.066    0.000 grammar.py:18(__eq__)
   146700    0.029    0.000    0.039    0.000 grammar.py:25(__hash__)
     1900    0.024    0.000    0.071    0.000 xearley.py:41(scan)
    72500    0.022    0.000    0.028    0.000 lexer.py:265(__eq__)
   201100    0.017    0.000    0.017    0.000 {built-in method builtins.isinstance}
    38400    0.015    0.000    0.024    0.000 utils.py:342(__contains__)
    81700    0.014    0.000    0.014    0.000 earley_common.py:28(__eq__)
     4600    0.014    0.000    0.064    0.000 earley.py:135(<listcomp>)
     7200    0.013    0.000    0.015    0.000 earley_forest.py:145(sort_key)
     8200    0.013    0.000    0.026    0.000 earley_forest.py:50(__init__)
   137100    0.012    0.000    0.012    0.000 earley_common.py:31(__hash__)
   113200    0.011    0.000    0.011    0.000 grammar.py:121(__hash__)
     7200    0.010    0.000    0.043    0.000 earley_forest.py:437(_visit_node_out_helper)
   132500    0.010    0.000    0.010    0.000 {built-in method builtins.len}
     3600    0.010    0.000    0.018    0.000 earley_forest.py:603(transform_packed_node)
   121800    0.009    0.000    0.009    0.000 {method 'append' of 'list' objects}
    22500    0.008    0.000    0.010    0.000 {built-in method fromkeys}
    61200    0.008    0.000    0.008    0.000 {built-in method builtins.next}
     8400    0.007    0.000    0.021    0.000 earley_forest.py:64(add_family)
    22500    0.007    0.000    0.017    0.000 utils.py:339(__init__)
     7200    0.007    0.000    0.026    0.000 {built-in method builtins.sorted}
    80000    0.006    0.000    0.006    0.000 {built-in method builtins.id}
    19300    0.006    0.000    0.010    0.000 parser_frontends.py:184(match)
    22700    0.005    0.000    0.008    0.000 utils.py:348(__iter__)
     8400    0.005    0.000    0.010    0.000 earley_forest.py:131(__init__)
    20100    0.005    0.000    0.005    0.000 {method 'match' of 're.Pattern' objects}
     8400    0.005    0.000    0.020    0.000 earley_common.py:25(advance)
      200    0.004    0.000    0.547    0.003 xearley.py:39(_parse)
     7200    0.004    0.000    0.033    0.000 earley_forest.py:85(children)
     2800    0.004    0.000    0.011    0.000 earley_forest.py:581(transform_symbol_node)
     3600    0.004    0.000    0.011    0.000 earley_forest.py:631(visit_packed_node_in)
    11800    0.004    0.000    0.005    0.000 {method 'setdefault' of 'dict' objects}
     3600    0.004    0.000    0.028    0.000 earley_forest.py:422(visit_symbol_node_in)
     3600    0.003    0.000    0.030    0.000 earley_forest.py:638(visit_packed_node_out)
     3600    0.003    0.000    0.007    0.000 earley_forest.py:427(visit_packed_node_in)
     3600    0.003    0.000    0.040    0.000 earley_forest.py:625(visit_symbol_node_in)
    29900    0.003    0.000    0.003    0.000 {built-in method builtins.iter}
    33300    0.002    0.000    0.002    0.000 {method 'pop' of 'collections.deque' objects}
    18300    0.002    0.000    0.002    0.000 {method 'add' of 'set' objects}
     2800    0.002    0.000    0.004    0.000 earley_forest.py:556(_collapse_ambig)
     2800    0.002    0.000    0.004    0.000 earley_forest.py:565(_call_rule_func)
    31700    0.002    0.000    0.002    0.000 {method 'append' of 'collections.deque' objects}
     3600    0.002    0.000    0.003    0.000 earley_forest.py:155(children)
      300    0.002    0.000    0.744    0.002 Workbook.py:639(recompute_cell_and_parents)
      200    0.002    0.000    0.725    0.004 earley.py:262(parse)
     7200    0.002    0.000    0.002    0.000 utils.py:357(__len__)
     3600    0.002    0.000    0.002    0.000 earley_forest.py:499(__init__)
    10800    0.002    0.000    0.002    0.000 {method 'remove' of 'set' objects}
     3600    0.002    0.000    0.003    0.000 earley_forest.py:70(load_paths)
     3600    0.001    0.000    0.026    0.000 earley_forest.py:450(visit_packed_node_out)
      200    0.001    0.000    0.727    0.004 parser_frontends.py:100(parse)
      300    0.001    0.000    0.752    0.003 Workbook.py:728(set_cell_contents)
     7200    0.001    0.000    0.001    0.000 earley_forest.py:141(is_empty)
     3200    0.001    0.000    0.001    0.000 {built-in method builtins.getattr}
     1300    0.001    0.000    0.002    0.000 Sheet.py:93(get_cell_value)
     2800    0.001    0.000    0.016    0.000 earley_forest.py:444(visit_symbol_node_out)
     8300    0.001    0.000    0.001    0.000 earley_forest.py:101(__hash__)
      800    0.001    0.000    0.001    0.000 earley_forest.py:591(transform_intermediate_node)
     1300    0.001    0.000    0.001    0.000 lexer.py:213(_future_new)
     7200    0.001    0.000    0.001    0.000 earley_forest.py:548(_check_cycle)
     3600    0.001    0.000    0.001    0.000 earley_forest.py:158(<listcomp>)
     8400    0.001    0.000    0.001    0.000 earley_forest.py:169(__hash__)
     2800    0.001    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
      100    0.001    0.000    0.757    0.008 Workbook.py:75(load_workbook)
     1300    0.001    0.000    0.002    0.000 lexer.py:202(__new__)
     1000    0.001    0.000    0.001    0.000 earley_forest.py:432(visit_token_node)
     7200    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
     2300    0.001    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
      600    0.001    0.000    0.004    0.000 xearley.py:88(<listcomp>)
      300    0.001    0.000    0.004    0.000 Sheet.py:60(set_cell_contents)
      300    0.001    0.000    0.004    0.000 Parser.py:253(cell)
      200    0.001    0.000    0.738    0.004 Workbook.py:545(get_formula_value)
      300    0.001    0.000    0.001    0.000 utils.py:179(convert_location_to_idx)
      500    0.001    0.000    0.002    0.000 Cell.py:81(set_cell_value)
     1300    0.001    0.000    0.001    0.000 earley_forest.py:193(__init__)
  800/200    0.001    0.000    0.009    0.000 visitors.py:421(_visit_tree)
  800/200    0.001    0.000    0.008    0.000 visitors.py:430(<listcomp>)
  800/200    0.001    0.000    0.009    0.000 visitors.py:444(inner)
      100    0.001    0.000    0.001    0.000 {method 'read' of '_io.TextIOWrapper' objects}
     5500    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
      800    0.001    0.000    0.006    0.000 Parser.py:40(fix_formula)
      900    0.001    0.000    0.001    0.000 __init__.py:272(_compile)
      300    0.001    0.000    0.001    0.000 Workbook.py:688(_get_sheet_name_location)
      600    0.001    0.000    0.001    0.000 xearley.py:85(<listcomp>)
     2200    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
      200    0.000    0.000    0.173    0.001 earley_forest.py:535(visit)
      400    0.000    0.000    0.753    0.002 Workbook.py:36(run_func)
      300    0.000    0.000    0.002    0.000 Workbook.py:807(get_cell_value)
  800/200    0.000    0.000    0.008    0.000 visitors.py:429(visit_children)
     1300    0.000    0.000    0.001    0.000 utils.py:78(get_hidden_name)
      200    0.000    0.000    0.002    0.000 earley.py:284(<listcomp>)
      100    0.000    0.000    0.001    0.000 {method 'seek' of '_io.TextIOWrapper' objects}
      800    0.000    0.000    0.001    0.000 utils.py:295(get_highest_precedence_error)
      600    0.000    0.000    0.001    0.000 __init__.py:163(match)
      200    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
      800    0.000    0.000    0.003    0.000 earley_forest.py:447(visit_intermediate_node_out)
      100    0.000    0.000    0.001    0.000 Workbook.py:869(new_sheet)
     2300    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      200    0.000    0.000    0.002    0.000 Workbook.py:701(add_children_cells)
     1300    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
     2800    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      100    0.000    0.000    0.000    0.000 decoder.py:343(raw_decode)
      600    0.000    0.000    0.002    0.000 utils.py:131(check_valid_cell_location)
      800    0.000    0.000    0.000    0.000 tree.py:61(__init__)
      200    0.000    0.000    0.173    0.001 earley_forest.py:397(transform)
      300    0.000    0.000    0.001    0.000 Cell.py:65(set_contents)
      300    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
      300    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      300    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
      200    0.000    0.000    0.001    0.000 earley_forest.py:523(__init__)
      100    0.000    0.000    0.000    0.000 utils.py:307(error_matcher)
      900    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
     2700    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
      200    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
      200    0.000    0.000    0.000    0.000 Parser.py:169(add_expr)
      200    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
      100    0.000    0.000    0.000    0.000 Parser.py:211(mul_expr)
      300    0.000    0.000    0.001    0.000 __init__.py:178(sub)
      300    0.000    0.000    0.000    0.000 Workbook.py:541(get_sheet_name_from_hidden)
     1300    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      200    0.000    0.000    0.001    0.000 Sheet.py:104(set_cell_value)
      300    0.000    0.000    0.002    0.000 Cell.py:46(__init__)
      200    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
      100    0.000    0.000    0.001    0.000 decoder.py:332(decode)
      200    0.000    0.000    0.000    0.000 Parser.py:243(number)
      100    0.000    0.000    0.000    0.000 utils.py:96(check_new_name)
     1300    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
      600    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
     1200    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
      100    0.000    0.000    0.001    0.000 __init__.py:299(loads)
      300    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
      100    0.000    0.000    0.000    0.000 Workbook.py:57(__init__)
      200    0.000    0.000    0.728    0.004 lark.py:640(parse)
      300    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
      300    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
      300    0.000    0.000    0.000    0.000 Workbook.py:715(clean_children_cells)
     1000    0.000    0.000    0.000    0.000 Cell.py:123(get_value)
      200    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
      300    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
      600    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
      100    0.000    0.000    0.000    0.000 <frozen codecs>:319(decode)
     1200    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
     1000    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      200    0.000    0.000    0.010    0.000 visitors.py:415(visit)
      100    0.000    0.000    0.000    0.000 <frozen codecs>:327(reset)
      300    0.000    0.000    0.000    0.000 <frozen abc>:117(__instancecheck__)
      300    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
      200    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      300    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
      300    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      100    0.000    0.000    0.000    0.000 Graph.py:121(has_sheet)
      200    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      300    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      100    0.000    0.000    0.000    0.000 {built-in method _codecs.utf_8_decode}
      100    0.000    0.000    0.000    0.000 Graph.py:128(get_sheet_parents)
      200    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
      600    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
      100    0.000    0.000    0.000    0.000 Workbook.py:506(num_sheets)
      100    0.000    0.000    0.000    0.000 Workbook.py:858(recompute_sheet_parents)
      600    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      100    0.000    0.000    0.000    0.000 Sheet.py:25(__init__)
      300    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      200    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
      100    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
      400    0.000    0.000    0.000    0.000 Cell.py:126(get_contents)
      300    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      300    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
      200    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
      300    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      200    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
      200    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
      100    0.000    0.000    0.000    0.000 Graph.py:124(add_sheet)
      200    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
      100    0.000    0.000    0.000    0.000 Graph.py:15(__init__)
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
      100    0.000    0.000    0.000    0.000 <frozen codecs>:276(reset)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_copy_sheet... #######################
for test <function pro_copy_sheet at 0x7fa3a3574e00> total time: 4.045620369999998
Total Logs
         1020208 function calls (1009008 primitive calls) in 0.377 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      800    0.061    0.000    0.223    0.000 earley.py:78(predict_and_complete)
    47800    0.034    0.000    0.056    0.000 earley_common.py:9(__init__)
      100    0.021    0.000    0.071    0.001 earley_forest.py:283(visit)
120300/116800    0.020    0.000    0.026    0.000 {built-in method builtins.hash}
    39400    0.016    0.000    0.024    0.000 utils.py:345(add)
    32300    0.015    0.000    0.029    0.000 grammar.py:18(__eq__)
    65500    0.014    0.000    0.019    0.000 grammar.py:25(__hash__)
      100    0.012    0.000    0.377    0.004 Workbook.py:1039(copy_sheet)
      700    0.010    0.000    0.031    0.000 xearley.py:41(scan)
    30300    0.010    0.000    0.012    0.000 lexer.py:265(__eq__)
    18100    0.008    0.000    0.012    0.000 utils.py:342(__contains__)
    84100    0.008    0.000    0.008    0.000 {built-in method builtins.isinstance}
 5700/100    0.007    0.000    0.018    0.000 copy.py:128(deepcopy)
    39000    0.007    0.000    0.007    0.000 earley_common.py:28(__eq__)
     8700    0.006    0.000    0.007    0.000 {built-in method fromkeys}
     1800    0.006    0.000    0.028    0.000 earley.py:135(<listcomp>)
     3200    0.006    0.000    0.013    0.000 earley_forest.py:50(__init__)
    60600    0.006    0.000    0.006    0.000 earley_common.py:31(__hash__)
    51700    0.005    0.000    0.005    0.000 grammar.py:121(__hash__)
    60400    0.005    0.000    0.005    0.000 {built-in method builtins.len}
    58500    0.005    0.000    0.005    0.000 {method 'append' of 'list' objects}
     3000    0.005    0.000    0.019    0.000 earley_forest.py:437(_visit_node_out_helper)
     1500    0.004    0.000    0.008    0.000 earley_forest.py:603(transform_packed_node)
    42800    0.004    0.000    0.004    0.000 {built-in method builtins.id}
    25400    0.003    0.000    0.003    0.000 {built-in method builtins.next}
     8700    0.003    0.000    0.010    0.000 utils.py:339(__init__)
     3300    0.003    0.000    0.009    0.000 earley_forest.py:64(add_family)
     3000    0.003    0.000    0.007    0.000 {built-in method builtins.sorted}
     9000    0.002    0.000    0.003    0.000 utils.py:348(__iter__)
     3300    0.002    0.000    0.004    0.000 earley_forest.py:131(__init__)
     7100    0.002    0.000    0.004    0.000 parser_frontends.py:184(match)
     7400    0.002    0.000    0.002    0.000 {method 'match' of 're.Pattern' objects}
     3300    0.002    0.000    0.009    0.000 earley_common.py:25(advance)
      100    0.002    0.000    0.256    0.003 xearley.py:39(_parse)
     1200    0.002    0.000    0.005    0.000 earley_forest.py:581(transform_symbol_node)
     3000    0.002    0.000    0.010    0.000 earley_forest.py:85(children)
     1500    0.002    0.000    0.005    0.000 earley_forest.py:631(visit_packed_node_in)
     1500    0.002    0.000    0.008    0.000 earley_forest.py:422(visit_symbol_node_in)
     4700    0.002    0.000    0.002    0.000 {method 'setdefault' of 'dict' objects}
  500/100    0.002    0.000    0.016    0.000 copy.py:227(_deepcopy_dict)
     1500    0.001    0.000    0.013    0.000 earley_forest.py:638(visit_packed_node_out)
     1500    0.001    0.000    0.003    0.000 earley_forest.py:427(visit_packed_node_in)
    12000    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
     3000    0.001    0.000    0.002    0.000 earley_forest.py:145(sort_key)
    13100    0.001    0.000    0.001    0.000 {method 'get' of 'dict' objects}
     1500    0.001    0.000    0.013    0.000 earley_forest.py:625(visit_symbol_node_in)
  400/100    0.001    0.000    0.017    0.000 copy.py:259(_reconstruct)
      200    0.001    0.000    0.339    0.002 Workbook.py:639(recompute_cell_and_parents)
     7600    0.001    0.000    0.001    0.000 {method 'add' of 'set' objects}
    13900    0.001    0.000    0.001    0.000 {method 'pop' of 'collections.deque' objects}
     1200    0.001    0.000    0.002    0.000 earley_forest.py:565(_call_rule_func)
     2100    0.001    0.000    0.001    0.000 copy.py:243(_keep_alive)
     1200    0.001    0.000    0.002    0.000 earley_forest.py:556(_collapse_ambig)
      200    0.001    0.000    0.345    0.002 Workbook.py:728(set_cell_contents)
      100    0.001    0.000    0.330    0.003 earley.py:262(parse)
    13300    0.001    0.000    0.001    0.000 {method 'append' of 'collections.deque' objects}
     1500    0.001    0.000    0.001    0.000 earley_forest.py:155(children)
     9250    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
     3000    0.001    0.000    0.001    0.000 {built-in method builtins.getattr}
  600/400    0.001    0.000    0.005    0.000 copy.py:201(_deepcopy_list)
      800    0.001    0.000    0.001    0.000 lexer.py:213(_future_new)
     3000    0.001    0.000    0.001    0.000 utils.py:357(__len__)
     4500    0.001    0.000    0.001    0.000 {method 'remove' of 'set' objects}
     1500    0.001    0.000    0.001    0.000 earley_forest.py:499(__init__)
      100    0.001    0.000    0.331    0.003 parser_frontends.py:100(parse)
      700    0.001    0.000    0.001    0.000 Sheet.py:93(get_cell_value)
     1500    0.001    0.000    0.001    0.000 earley_forest.py:70(load_paths)
     1500    0.001    0.000    0.012    0.000 earley_forest.py:450(visit_packed_node_out)
      800    0.001    0.000    0.002    0.000 lexer.py:202(__new__)
     3000    0.001    0.000    0.001    0.000 earley_forest.py:141(is_empty)
      300    0.001    0.000    0.001    0.000 Cell.py:81(set_cell_value)
      200    0.001    0.000    0.001    0.000 utils.py:179(convert_location_to_idx)
     1200    0.000    0.000    0.007    0.000 earley_forest.py:444(visit_symbol_node_out)
      100    0.000    0.000    0.336    0.003 Workbook.py:545(get_formula_value)
      200    0.000    0.000    0.003    0.000 Sheet.py:60(set_cell_contents)
     3200    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
  300/100    0.000    0.000    0.004    0.000 tree.py:206(__deepcopy__)
      400    0.000    0.000    0.001    0.000 {method '__reduce_ex__' of 'object' objects}
     1500    0.000    0.000    0.000    0.000 earley_forest.py:158(<listcomp>)
     3000    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
     1200    0.000    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
      300    0.000    0.000    0.001    0.000 earley_forest.py:591(transform_intermediate_node)
     1000    0.000    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
     3300    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
     5250    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
      200    0.000    0.000    0.001    0.000 Workbook.py:688(_get_sheet_name_location)
     3000    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
      400    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
  300/100    0.000    0.000    0.377    0.004 Workbook.py:36(run_func)
     1000    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
      100    0.000    0.000    0.001    0.000 Parser.py:253(cell)
      200    0.000    0.000    0.001    0.000 Workbook.py:715(clean_children_cells)
      200    0.000    0.000    0.001    0.000 xearley.py:88(<listcomp>)
      100    0.000    0.000    0.000    0.000 Sheet.py:134(set_sheet_name)
      500    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
      400    0.000    0.000    0.000    0.000 __init__.py:272(_compile)
     1100    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
  300/100    0.000    0.000    0.004    0.000 visitors.py:421(_visit_tree)
     3300    0.000    0.000    0.000    0.000 copy.py:182(_deepcopy_atomic)
      100    0.000    0.000    0.000    0.000 utils.py:307(error_matcher)
      300    0.000    0.000    0.002    0.000 Parser.py:40(fix_formula)
     1602    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
  300/100    0.000    0.000    0.003    0.000 visitors.py:444(inner)
      300    0.000    0.000    0.001    0.000 lexer.py:262(__deepcopy__)
  300/100    0.000    0.000    0.003    0.000 visitors.py:430(<listcomp>)
      100    0.000    0.000    0.071    0.001 earley_forest.py:535(visit)
      300    0.000    0.000    0.000    0.000 Workbook.py:541(get_sheet_name_from_hidden)
      200    0.000    0.000    0.001    0.000 Cell.py:65(set_contents)
      102    0.000    0.000    0.000    0.000 copyreg.py:113(_slotnames)
      800    0.000    0.000    0.001    0.000 copy.py:264(<genexpr>)
      100    0.000    0.000    0.001    0.000 earley.py:284(<listcomp>)
      100    0.000    0.000    0.001    0.000 copy.py:210(_deepcopy_tuple)
      600    0.000    0.000    0.000    0.000 tree.py:61(__init__)
      200    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
      100    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
      300    0.000    0.000    0.001    0.000 __init__.py:163(match)
      200    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
  300/100    0.000    0.000    0.003    0.000 visitors.py:429(visit_children)
      800    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
      100    0.000    0.000    0.001    0.000 Workbook.py:807(get_cell_value)
      300    0.000    0.000    0.001    0.000 utils.py:131(check_valid_cell_location)
      200    0.000    0.000    0.000    0.000 xearley.py:85(<listcomp>)
      600    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
      100    0.000    0.000    0.071    0.001 earley_forest.py:397(transform)
      300    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
      100    0.000    0.000    0.000    0.000 Parser.py:169(add_expr)
      100    0.000    0.000    0.001    0.000 Workbook.py:701(add_children_cells)
      100    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      100    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
      100    0.000    0.000    0.000    0.000 earley_forest.py:523(__init__)
      300    0.000    0.000    0.001    0.000 earley_forest.py:447(visit_intermediate_node_out)
     1200    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
      300    0.000    0.000    0.000    0.000 copyreg.py:104(__newobj__)
      400    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
      500    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
      100    0.000    0.000    0.001    0.000 Sheet.py:104(set_cell_value)
      100    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
      700    0.000    0.000    0.000    0.000 Cell.py:123(get_value)
      100    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
      100    0.000    0.000    0.000    0.000 Parser.py:243(number)
      100    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
     1200    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
      200    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
      900    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
      200    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
      500    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      400    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      100    0.000    0.000    0.331    0.003 lark.py:640(parse)
      100    0.000    0.000    0.000    0.000 __init__.py:178(sub)
      100    0.000    0.000    0.000    0.000 {method 'update' of 'collections.OrderedDict' objects}
      200    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
      200    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
      100    0.000    0.000    0.000    0.000 Workbook.py:506(num_sheets)
      100    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
      200    0.000    0.000    0.000    0.000 <frozen abc>:117(__instancecheck__)
      500    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
      100    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
      100    0.000    0.000    0.000    0.000 copy.py:211(<listcomp>)
      600    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
      200    0.000    0.000    0.000    0.000 Cell.py:151(set_location)
      100    0.000    0.000    0.000    0.000 Graph.py:96(update_child)
      200    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
      400    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
      300    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      100    0.000    0.000    0.004    0.000 visitors.py:415(visit)
      400    0.000    0.000    0.000    0.000 Cell.py:126(get_contents)
      100    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      400    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      400    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      100    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      200    0.000    0.000    0.000    0.000 Cell.py:147(get_location)
      100    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
      200    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      102    0.000    0.000    0.000    0.000 {method 'get' of 'mappingproxy' objects}
      200    0.000    0.000    0.000    0.000 Cell.py:133(get_children)
      200    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
      200    0.000    0.000    0.000    0.000 {method '__deepcopy__' of 'decimal.Decimal' objects}
      200    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      200    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      100    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
      100    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
      100    0.000    0.000    0.000    0.000 Sheet.py:57(get_sheet_cells)
      100    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
      100    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_rename_sheet... #######################
for test <function pro_rename_sheet at 0x7fa3a3574f40> total time: 8.555535501000003
Total Logs
         2470992 function calls (2350192 primitive calls) in 0.897 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
100800/100400    0.081    0.000    0.312    0.000 visitors.py:111(_call_userfunc)
    12000    0.071    0.000    0.133    0.000 tree.py:137(iter_subtrees)
     4000    0.065    0.000    0.156    0.000 visitors.py:293(transform)
164200/150400    0.056    0.000    0.325    0.000 visitors.py:143(_transform_children)
197300/153200    0.051    0.000    0.079    0.000 {built-in method builtins.getattr}
     6500    0.043    0.000    0.454    0.000 visitors.py:278(transform)
   517800    0.041    0.000    0.042    0.000 {built-in method builtins.isinstance}
    85500    0.040    0.000    0.055    0.000 tree.py:147(<listcomp>)
    72500    0.024    0.000    0.036    0.000 visitors.py:171(__default__)
      100    0.020    0.000    0.830    0.008 load_grammar.py:690(compile)
    20100    0.019    0.000    0.023    0.000 tree.py:179(expand_kids_by_data)
     4100    0.016    0.000    0.031    0.000 ast.py:54(literal_eval)
    59100    0.016    0.000    0.251    0.000 visitors.py:275(_transform_tree)
94900/53400    0.015    0.000    0.024    0.000 {built-in method builtins.hash}
     6300    0.015    0.000    0.024    0.000 functools.py:35(update_wrapper)
    82300    0.014    0.000    0.014    0.000 tree.py:61(__init__)
    67200    0.013    0.000    0.018    0.000 grammar.py:25(__hash__)
     4100    0.013    0.000    0.068    0.000 load_grammar.py:566(_literal_to_pattern)
   159000    0.012    0.000    0.012    0.000 {built-in method builtins.id}
    78800    0.011    0.000    0.011    0.000 tree.py:66(meta)
10500/4500    0.011    0.000    0.067    0.000 load_grammar.py:389(expansion)
    26900    0.010    0.000    0.019    0.000 grammar.py:18(__eq__)
     4100    0.009    0.000    0.009    0.000 {built-in method builtins.compile}
     2800    0.009    0.000    0.050    0.000 tree_matcher.py:106(_build_recons_rules)
     4100    0.009    0.000    0.042    0.000 load_grammar.py:540(eval_escaping)
14600/8400    0.009    0.000    0.097    0.000 visitors.py:342(_call_userfunc)
   105100    0.008    0.000    0.008    0.000 {method 'append' of 'list' objects}
    83400    0.007    0.000    0.007    0.000 {built-in method builtins.len}
    15500    0.006    0.000    0.030    0.000 load_grammar.py:384(_flatten)
     9300    0.006    0.000    0.011    0.000 visitors.py:130(_call_userfunc_token)
     8400    0.006    0.000    0.018    0.000 grammar.py:103(__init__)
4000/1100    0.006    0.000    0.114    0.000 visitors.py:362(visit)
5800/1200    0.006    0.000    0.024    0.000 visitors.py:155(_transform_tree)
    16100    0.005    0.000    0.007    0.000 lexer.py:265(__eq__)
     3500    0.005    0.000    0.024    0.000 load_grammar.py:420(expansions)
     6300    0.005    0.000    0.034    0.000 visitors.py:481(__get__)
13900/12900    0.005    0.000    0.015    0.000 tree.py:134(__hash__)
     3500    0.005    0.000    0.010    0.000 tree_matcher.py:121(<listcomp>)
     1100    0.004    0.000    0.008    0.000 load_grammar.py:450(pattern)
    48300    0.004    0.000    0.004    0.000 {method 'pop' of 'list' objects}
     6300    0.004    0.000    0.029    0.000 visitors.py:470(__init__)
     4900    0.004    0.000    0.015    0.000 tree_matcher.py:57(make_recons_rule)
     2500    0.004    0.000    0.463    0.000 visitors.py:258(transform)
1500/1300    0.004    0.000    0.046    0.000 load_grammar.py:405(<listcomp>)
     6300    0.003    0.000    0.093    0.000 visitors.py:500(_vargs_inline)
      100    0.003    0.000    0.888    0.009 tree_matcher.py:89(__init__)
     4100    0.003    0.000    0.073    0.000 load_grammar.py:601(literal)
     6300    0.003    0.000    0.090    0.000 visitors.py:478(__call__)
    12300    0.003    0.000    0.005    0.000 load_grammar.py:537(<genexpr>)
    31500    0.003    0.000    0.003    0.000 {built-in method builtins.setattr}
     4300    0.003    0.000    0.008    0.000 {built-in method builtins.max}
      100    0.003    0.000    0.008    0.000 load_grammar.py:793(<setcomp>)
     4100    0.003    0.000    0.013    0.000 ast.py:33(parse)
    10500    0.003    0.000    0.005    0.000 load_grammar.py:759(<genexpr>)
     4100    0.002    0.000    0.009    0.000 load_grammar.py:536(_rfind)
      100    0.002    0.000    0.003    0.000 Graph.py:28(rename_sheet)
      100    0.002    0.000    0.004    0.000 tree_matcher.py:28(_best_from_group)
     2500    0.002    0.000    0.101    0.000 load_grammar.py:674(nr_deepcopy_tree)
     4700    0.002    0.000    0.002    0.000 lexer.py:41(__init__)
     1500    0.002    0.000    0.008    0.000 utils.py:190(<listcomp>)
     5400    0.002    0.000    0.003    0.000 lexer.py:50(__hash__)
     2000    0.002    0.000    0.011    0.000 load_grammar.py:631(expansions)
  300/200    0.002    0.000    0.898    0.004 Workbook.py:36(run_func)
     4600    0.002    0.000    0.002    0.000 load_grammar.py:668(value)
      100    0.002    0.000    0.206    0.002 load_grammar.py:710(<listcomp>)
     3500    0.001    0.000    0.005    0.000 load_grammar.py:798(<lambda>)
     2000    0.001    0.000    0.003    0.000 load_grammar.py:637(<lambda>)
    11300    0.001    0.000    0.001    0.000 {method 'replace' of 'str' objects}
     4100    0.001    0.000    0.002    0.000 {built-in method builtins.all}
     8200    0.001    0.000    0.001    0.000 {method 'rfind' of 'str' objects}
    12000    0.001    0.000    0.001    0.000 {method 'values' of 'collections.OrderedDict' objects}
      100    0.001    0.000    0.896    0.009 Workbook.py:937(rename_sheet)
      100    0.001    0.000    0.001    0.000 Workbook.py:1004(move_sheet)
     5100    0.001    0.000    0.001    0.000 grammar.py:69(__init__)
      100    0.001    0.000    0.002    0.000 load_grammar.py:806(<setcomp>)
     2000    0.001    0.000    0.004    0.000 lexer.py:81(to_regexp)
      200    0.001    0.000    0.007    0.000 utils.py:271(<listcomp>)
     4100    0.001    0.000    0.001    0.000 ast.py:84(_convert)
      600    0.001    0.000    0.004    0.000 {method 'sort' of 'list' objects}
     3500    0.001    0.000    0.001    0.000 load_grammar.py:621(expansion)
      100    0.001    0.000    0.004    0.000 tree_matcher.py:115(<setcomp>)
    11600    0.001    0.000    0.001    0.000 tree.py:175(<lambda>)
     4000    0.001    0.000    0.003    0.000 {method 'add' of 'set' objects}
     6400    0.001    0.000    0.001    0.000 {method 'update' of 'dict' objects}
     6900    0.001    0.000    0.001    0.000 tree_matcher.py:12(is_discarded_terminal)
     1000    0.001    0.000    0.003    0.000 load_grammar.py:346(expr)
     2000    0.001    0.000    0.002    0.000 __init__.py:253(escape)
     1400    0.001    0.000    0.005    0.000 tree_matcher.py:61(make_recons_rule_to_term)
      100    0.001    0.000    0.003    0.000 tree_matcher.py:108(<setcomp>)
     4800    0.001    0.000    0.001    0.000 grammar.py:42(__init__)
     1500    0.001    0.000    0.009    0.000 utils.py:184(dedup_list)
     3500    0.001    0.000    0.004    0.000 grammar.py:22(__ne__)
     2100    0.001    0.000    0.003    0.000 lexer.py:125(__init__)
     9300    0.001    0.000    0.001    0.000 visitors.py:178(__default_token__)
     1500    0.001    0.000    0.017    0.000 tree.py:169(find_pred)
     5400    0.001    0.000    0.001    0.000 grammar.py:15(__init__)
     5000    0.001    0.000    0.001    0.000 {method 'startswith' of 'str' objects}
     2000    0.001    0.000    0.001    0.000 {method 'translate' of 'str' objects}
     4900    0.001    0.000    0.001    0.000 tree_matcher.py:17(__init__)
     2500    0.001    0.000    0.004    0.000 load_grammar.py:639(<genexpr>)
     8900    0.001    0.000    0.001    0.000 grammar.py:121(__hash__)
      100    0.001    0.000    0.049    0.000 load_grammar.py:693(<listcomp>)
      100    0.001    0.000    0.001    0.000 tree_matcher.py:116(<setcomp>)
     4900    0.001    0.000    0.001    0.000 load_grammar.py:572(<genexpr>)
      500    0.001    0.000    0.005    0.000 {method 'join' of 'str' objects}
     2100    0.001    0.000    0.001    0.000 lexer.py:70(_get_flags)
    10300    0.001    0.000    0.001    0.000 {method 'items' of 'dict' objects}
     6500    0.001    0.000    0.001    0.000 typing.py:2256(cast)
     1500    0.001    0.000    0.018    0.000 tree.py:173(find_data)
     3000    0.001    0.000    0.001    0.000 load_grammar.py:617(pattern)
     1500    0.001    0.000    0.001    0.000 lexer.py:53(__eq__)
     2100    0.001    0.000    0.001    0.000 <frozen abc>:117(__instancecheck__)
     3500    0.001    0.000    0.001    0.000 {built-in method builtins.any}
      100    0.001    0.000    0.054    0.001 load_grammar.py:694(<listcomp>)
     4100    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
     3100    0.000    0.000    0.000    0.000 visitors.py:108(__init__)
     3500    0.000    0.000    0.000    0.000 load_grammar.py:431(expansion)
     2100    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
     4100    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      100    0.000    0.000    0.001    0.000 load_grammar.py:446(<dictcomp>)
     2000    0.000    0.000    0.001    0.000 lexer.py:88(max_width)
     1200    0.000    0.000    0.024    0.000 visitors.py:159(transform)
     2500    0.000    0.000    0.001    0.000 tree_matcher.py:44(<lambda>)
     2000    0.000    0.000    0.001    0.000 lexer.py:84(min_width)
      100    0.000    0.000    0.001    0.000 load_grammar.py:246(_add_recurse_rule)
     3000    0.000    0.000    0.000    0.000 load_grammar.py:663(value)
      100    0.000    0.000    0.889    0.009 reconstruct.py:80(__init__)
      100    0.000    0.000    0.001    0.000 copy.py:66(copy)
      600    0.000    0.000    0.000    0.000 load_grammar.py:411(alias)
      100    0.000    0.000    0.001    0.000 Workbook.py:869(new_sheet)
      200    0.000    0.000    0.000    0.000 utils.py:96(check_new_name)
      900    0.000    0.000    0.001    0.000 load_grammar.py:210(_args_as_int)
     2100    0.000    0.000    0.000    0.000 load_grammar.py:809(<lambda>)
      500    0.000    0.000    0.000    0.000 load_grammar.py:640(<setcomp>)
      400    0.000    0.000    0.001    0.000 grammar.py:124(__eq__)
      100    0.000    0.000    0.001    0.000 load_grammar.py:642(expr)
      100    0.000    0.000    0.003    0.000 load_grammar.py:375(maybe)
      500    0.000    0.000    0.000    0.000 load_grammar.py:613(_make_joined_pattern)
      800    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
      600    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
      100    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
      100    0.000    0.000    0.000    0.000 reconstruct.py:83(<dictcomp>)
      100    0.000    0.000    0.000    0.000 copy.py:259(_reconstruct)
     1100    0.000    0.000    0.000    0.000 tree.py:32(__init__)
      300    0.000    0.000    0.000    0.000 Graph.py:128(get_sheet_parents)
      100    0.000    0.000    0.005    0.000 tree_matcher.py:42(_best_rules_from_group)
     1600    0.000    0.000    0.000    0.000 {built-in method builtins.next}
      200    0.000    0.000    0.007    0.000 utils.py:269(classify_bool)
      100    0.000    0.000    0.001    0.000 load_grammar.py:443(__init__)
      100    0.000    0.000    0.000    0.000 load_grammar.py:763(<listcomp>)
      100    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
      100    0.000    0.000    0.000    0.000 load_grammar.py:235(_name_rule)
      200    0.000    0.000    0.000    0.000 visitors.py:263(__mul__)
      200    0.000    0.000    0.000    0.000 load_grammar.py:201(_will_not_get_removed)
      100    0.000    0.000    0.000    0.000 load_grammar.py:240(_add_rule)
     1490    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
     1200    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
      200    0.000    0.000    0.000    0.000 visitors.py:163(__mul__)
      200    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
     1100    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
      400    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
      100    0.000    0.000    0.000    0.000 Parser.py:348(__init__)
      100    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
      200    0.000    0.000    0.000    0.000 load_grammar.py:219(expansion)
      200    0.000    0.000    0.000    0.000 Workbook.py:858(recompute_sheet_parents)
      200    0.000    0.000    0.000    0.000 Workbook.py:506(num_sheets)
      200    0.000    0.000    0.001    0.000 load_grammar.py:222(expansions)
      100    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
      100    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
      100    0.000    0.000    0.000    0.000 Sheet.py:25(__init__)
      400    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      200    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      100    0.000    0.000    0.000    0.000 Graph.py:121(has_sheet)
      100    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
      100    0.000    0.000    0.000    0.000 copyreg.py:104(__newobj__)
      200    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.OrderedDict' objects}
      100    0.000    0.000    0.000    0.000 Sheet.py:134(set_sheet_name)
      400    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
      100    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
      100    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
      500    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
      100    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
      100    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
      100    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
      200    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 Graph.py:124(add_sheet)
      100    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
      100    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
      100    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      100    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
      100    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      100    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_copy_cells... #######################
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
for test <function pro_copy_cells at 0x7fa3a3575080> total time: 20.293613703999988
Total Logs
         6171694 function calls (6038333 primitive calls) in 2.093 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      198    0.122    0.001    0.263    0.001 grammar_analysis.py:78(calculate_sets)
     2178    0.119    0.000    0.435    0.000 earley.py:78(predict_and_complete)
   257103    0.093    0.000    0.169    0.000 grammar.py:18(__eq__)
   457677    0.082    0.000    0.113    0.000 grammar.py:25(__hash__)
101079/100683    0.081    0.000    0.318    0.000 visitors.py:111(_call_userfunc)
636570/584991    0.080    0.000    0.104    0.000 {built-in method builtins.hash}
  1000398    0.077    0.000    0.078    0.000 {built-in method builtins.isinstance}
    12177    0.070    0.000    0.131    0.000 tree.py:137(iter_subtrees)
    97515    0.067    0.000    0.109    0.000 earley_common.py:9(__init__)
     3960    0.064    0.000    0.153    0.000 visitors.py:293(transform)
165528/151470    0.056    0.000    0.333    0.000 visitors.py:143(_transform_children)
      495    0.054    0.000    0.182    0.000 earley_forest.py:283(visit)
204324/160665    0.052    0.000    0.081    0.000 {built-in method builtins.getattr}
   159283    0.049    0.000    0.062    0.000 lexer.py:265(__eq__)
     6732    0.044    0.000    0.460    0.000 visitors.py:278(transform)
    85635    0.039    0.000    0.054    0.000 tree.py:147(<listcomp>)
    19998    0.031    0.000    0.096    0.000 grammar_analysis.py:187(_expand_rule)
    80586    0.031    0.000    0.047    0.000 utils.py:345(add)
    71874    0.024    0.000    0.036    0.000 visitors.py:171(__default__)
341098/341091    0.024    0.000    0.024    0.000 {built-in method builtins.len}
     4059    0.020    0.000    0.020    0.000 {built-in method builtins.compile}
       99    0.019    0.000    0.814    0.008 load_grammar.py:690(compile)
   247005    0.018    0.000    0.018    0.000 {built-in method builtins.id}
    64251    0.018    0.000    0.018    0.000 grammar_analysis.py:70(update_set)
    19899    0.018    0.000    0.022    0.000 tree.py:179(expand_kids_by_data)
   229216    0.017    0.000    0.017    0.000 {method 'append' of 'list' objects}
    59499    0.016    0.000    0.256    0.000 visitors.py:275(_transform_tree)
    65633    0.016    0.000    0.039    0.000 {method 'add' of 'set' objects}
   170874    0.016    0.000    0.016    0.000 grammar.py:121(__hash__)
    12375    0.015    0.000    0.121    0.000 utils.py:275(bfs)
     6237    0.015    0.000    0.024    0.000 functools.py:35(update_wrapper)
    34254    0.015    0.000    0.019    0.000 grammar_analysis.py:17(__init__)
    83358    0.014    0.000    0.014    0.000 tree.py:61(__init__)
    33759    0.014    0.000    0.021    0.000 utils.py:342(__contains__)
     8613    0.013    0.000    0.026    0.000 earley_forest.py:50(__init__)
     1188    0.013    0.000    0.039    0.000 xearley.py:41(scan)
    73953    0.013    0.000    0.013    0.000 earley_common.py:28(__eq__)
     4059    0.013    0.000    0.070    0.000 load_grammar.py:566(_literal_to_pattern)
     4554    0.013    0.000    0.058    0.000 earley.py:135(<listcomp>)
    80685    0.012    0.000    0.012    0.000 tree.py:66(meta)
     7920    0.011    0.000    0.050    0.000 earley_forest.py:437(_visit_node_out_helper)
     3960    0.011    0.000    0.022    0.000 earley_forest.py:603(transform_packed_node)
10395/4455    0.010    0.000    0.064    0.000 load_grammar.py:389(expansion)
   116622    0.010    0.000    0.010    0.000 earley_common.py:31(__hash__)
      396    0.010    0.000    0.021    0.000 utils.py:23(classify)
     2772    0.009    0.000    0.049    0.000 tree_matcher.py:106(_build_recons_rules)
     4059    0.009    0.000    0.044    0.000 load_grammar.py:540(eval_escaping)
    70884    0.009    0.000    0.009    0.000 {built-in method builtins.next}
14454/8316    0.008    0.000    0.093    0.000 visitors.py:342(_call_userfunc)
     4059    0.008    0.000    0.033    0.000 ast.py:54(literal_eval)
    34254    0.008    0.000    0.020    0.000 grammar_analysis.py:45(__hash__)
     7920    0.007    0.000    0.017    0.000 {built-in method builtins.sorted}
    23265    0.007    0.000    0.015    0.000 utils.py:339(__init__)
     8811    0.007    0.000    0.021    0.000 earley_forest.py:64(add_family)
     9999    0.007    0.000    0.014    0.000 visitors.py:130(_call_userfunc_token)
      495    0.007    0.000    0.706    0.001 earley.py:262(parse)
      198    0.007    0.000    0.443    0.002 earley.py:32(__init__)
     8712    0.006    0.000    0.018    0.000 grammar.py:103(__init__)
6039/1287    0.006    0.000    0.029    0.000 visitors.py:155(_transform_tree)
    15345    0.006    0.000    0.029    0.000 load_grammar.py:384(_flatten)
      198    0.006    0.000    0.319    0.002 grammar_analysis.py:141(__init__)
    23265    0.006    0.000    0.007    0.000 {built-in method fromkeys}
3960/1089    0.006    0.000    0.109    0.000 visitors.py:362(visit)
    23265    0.006    0.000    0.008    0.000 utils.py:348(__iter__)
     8811    0.006    0.000    0.010    0.000 earley_forest.py:131(__init__)
     2475    0.006    0.000    0.127    0.000 grammar_analysis.py:180(expand_rule)
     6237    0.005    0.000    0.033    0.000 visitors.py:481(__get__)
    56913    0.005    0.000    0.005    0.000 {method 'pop' of 'list' objects}
     3465    0.005    0.000    0.023    0.000 load_grammar.py:420(expansions)
    33858    0.005    0.000    0.005    0.000 grammar_analysis.py:28(next)
     7920    0.005    0.000    0.025    0.000 earley_forest.py:85(children)
     3168    0.005    0.000    0.013    0.000 earley_forest.py:581(transform_symbol_node)
     8811    0.005    0.000    0.021    0.000 earley_common.py:25(advance)
13959/12969    0.005    0.000    0.015    0.000 tree.py:134(__hash__)
     3465    0.005    0.000    0.010    0.000 tree_matcher.py:121(<listcomp>)
      495    0.004    0.000    0.021    0.000 earley.py:188(scan)
     3960    0.004    0.000    0.012    0.000 earley_forest.py:631(visit_packed_node_in)
     1089    0.004    0.000    0.008    0.000 load_grammar.py:450(pattern)
    13064    0.004    0.000    0.004    0.000 {method 'match' of 're.Pattern' objects}
     3960    0.004    0.000    0.020    0.000 earley_forest.py:422(visit_symbol_node_in)
     6237    0.004    0.000    0.028    0.000 visitors.py:470(__init__)
     4851    0.004    0.000    0.015    0.000 tree_matcher.py:57(make_recons_rule)
    12573    0.004    0.000    0.005    0.000 {method 'setdefault' of 'dict' objects}
     2475    0.004    0.000    0.457    0.000 visitors.py:258(transform)
    36036    0.004    0.000    0.004    0.000 {built-in method builtins.iter}
     3960    0.004    0.000    0.035    0.000 earley_forest.py:638(visit_packed_node_out)
     3960    0.004    0.000    0.008    0.000 earley_forest.py:427(visit_packed_node_in)
1485/1287    0.004    0.000    0.043    0.000 load_grammar.py:405(<listcomp>)
       99    0.003    0.000    0.872    0.009 tree_matcher.py:89(__init__)
     7920    0.003    0.000    0.005    0.000 earley_forest.py:145(sort_key)
     4059    0.003    0.000    0.074    0.000 load_grammar.py:601(literal)
     6237    0.003    0.000    0.094    0.000 visitors.py:500(_vargs_inline)
     3960    0.003    0.000    0.033    0.000 earley_forest.py:625(visit_symbol_node_in)
      297    0.003    0.000    0.583    0.002 tree_matcher.py:148(match_tree)
     6237    0.003    0.000    0.091    0.000 visitors.py:478(__call__)
      198    0.003    0.000    0.437    0.002 xearley.py:39(_parse)
    12177    0.003    0.000    0.005    0.000 load_grammar.py:537(<genexpr>)
    31185    0.003    0.000    0.003    0.000 {built-in method builtins.setattr}
     9108    0.003    0.000    0.005    0.000 parser_frontends.py:184(match)
     3168    0.003    0.000    0.005    0.000 earley_forest.py:556(_collapse_ambig)
     4455    0.003    0.000    0.008    0.000 {built-in method builtins.max}
     3168    0.003    0.000    0.009    0.000 tree_matcher.py:48(_match)
      297    0.003    0.000    0.005    0.000 tree_matcher.py:28(_best_from_group)
     2079    0.003    0.000    0.003    0.000 earley.py:58(<listcomp>)
     3168    0.003    0.000    0.006    0.000 earley_forest.py:565(_call_rule_func)
    35838    0.003    0.000    0.003    0.000 {method 'pop' of 'collections.deque' objects}
    40491    0.003    0.000    0.003    0.000 {method 'append' of 'collections.deque' objects}
       99    0.003    0.000    0.007    0.000 load_grammar.py:793(<setcomp>)
     4059    0.003    0.000    0.023    0.000 ast.py:33(parse)
       99    0.003    0.000    2.097    0.021 Workbook.py:422(copy_cells)
    10395    0.002    0.000    0.005    0.000 load_grammar.py:759(<genexpr>)
      297    0.002    0.000    0.066    0.000 earley.py:171(_parse)
      990    0.002    0.000    0.004    0.000 reconstruct.py:33(__default__)
     4546    0.002    0.000    0.003    0.000 __init__.py:272(_compile)
     4059    0.002    0.000    0.009    0.000 load_grammar.py:536(_rfind)
       99    0.002    0.000    2.095    0.021 Workbook.py:283(transfer_cells)
     3956    0.002    0.000    0.007    0.000 __init__.py:163(match)
     3960    0.002    0.000    0.003    0.000 earley_forest.py:155(children)
     2475    0.002    0.000    0.099    0.000 load_grammar.py:674(nr_deepcopy_tree)
     4653    0.002    0.000    0.002    0.000 lexer.py:41(__init__)
      792    0.002    0.000    0.003    0.000 utils.py:179(convert_location_to_idx)
     3960    0.002    0.000    0.002    0.000 earley_forest.py:499(__init__)
      297    0.002    0.000    0.313    0.001 Workbook.py:639(recompute_cell_and_parents)
      297    0.002    0.000    0.002    0.000 Graph.py:330(tarjans)
     1485    0.002    0.000    0.007    0.000 utils.py:190(<listcomp>)
     7920    0.002    0.000    0.003    0.000 utils.py:357(__len__)
    11880    0.002    0.000    0.002    0.000 {method 'remove' of 'set' objects}
     5346    0.002    0.000    0.002    0.000 lexer.py:50(__hash__)
     3960    0.002    0.000    0.003    0.000 earley_forest.py:70(load_paths)
     1980    0.002    0.000    0.011    0.000 load_grammar.py:631(expansions)
     3960    0.002    0.000    0.031    0.000 earley_forest.py:450(visit_packed_node_out)
      198    0.002    0.000    0.005    0.000 grammar_analysis.py:82(<setcomp>)
     1774    0.002    0.000    0.002    0.000 Sheet.py:93(get_cell_value)
     1980    0.002    0.000    0.003    0.000 load_grammar.py:637(<lambda>)
     4554    0.002    0.000    0.002    0.000 load_grammar.py:668(value)
     2178    0.002    0.000    0.005    0.000 tree_matcher.py:65(parse_rulename)
       99    0.002    0.000    0.206    0.002 load_grammar.py:710(<listcomp>)
      297    0.002    0.000    0.322    0.001 Workbook.py:728(set_cell_contents)
     3465    0.001    0.000    0.005    0.000 load_grammar.py:798(<lambda>)
     4059    0.001    0.000    0.002    0.000 {built-in method builtins.all}
      792    0.001    0.000    0.005    0.000 {method 'sort' of 'list' objects}
     8118    0.001    0.000    0.001    0.000 {method 'rfind' of 'str' objects}
    11187    0.001    0.000    0.001    0.000 {method 'replace' of 'str' objects}
      198    0.001    0.000    0.002    0.000 earley.py:52(<setcomp>)
      590    0.001    0.000    0.006    0.000 Parser.py:253(cell)
    12177    0.001    0.000    0.001    0.000 {method 'values' of 'collections.OrderedDict' objects}
     7920    0.001    0.000    0.001    0.000 earley_forest.py:141(is_empty)
     1782    0.001    0.000    0.002    0.000 lexer.py:213(_future_new)
      198    0.001    0.000    0.002    0.000 tree_matcher.py:178(<dictcomp>)
     7821    0.001    0.000    0.001    0.000 tree_matcher.py:12(is_discarded_terminal)
     5445    0.001    0.000    0.001    0.000 grammar.py:69(__init__)
     6534    0.001    0.000    0.001    0.000 grammar.py:42(__init__)
      891    0.001    0.000    0.002    0.000 utils.py:194(convert_idx_to_location)
       99    0.001    0.000    0.002    0.000 load_grammar.py:806(<setcomp>)
     3168    0.001    0.000    0.019    0.000 earley_forest.py:444(visit_symbol_node_out)
     2572    0.001    0.000    0.006    0.000 {method 'join' of 'str' objects}
     1980    0.001    0.000    0.004    0.000 lexer.py:81(to_regexp)
     1782    0.001    0.000    0.003    0.000 lexer.py:202(__new__)
      198    0.001    0.000    0.578    0.003 parser_frontends.py:100(parse)
      198    0.001    0.000    0.002    0.000 earley.py:53(<setcomp>)
      198    0.001    0.000    0.007    0.000 utils.py:271(<listcomp>)
     1287    0.001    0.000    0.001    0.000 earley_forest.py:432(visit_token_node)
     4059    0.001    0.000    0.001    0.000 ast.py:84(_convert)
     6831    0.001    0.000    0.001    0.000 grammar.py:15(__init__)
     3465    0.001    0.000    0.001    0.000 load_grammar.py:621(expansion)
    11484    0.001    0.000    0.001    0.000 tree.py:175(<lambda>)
     3168    0.001    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
      392    0.001    0.000    0.013    0.000 Workbook.py:583(recompute_cell_value)
       99    0.001    0.000    0.004    0.000 tree_matcher.py:115(<setcomp>)
     7920    0.001    0.000    0.001    0.000 earley_forest.py:548(_check_cycle)
     8118    0.001    0.000    0.001    0.000 earley_forest.py:101(__hash__)
      792    0.001    0.000    0.001    0.000 earley_forest.py:591(transform_intermediate_node)
      792    0.001    0.000    0.002    0.000 tree_matcher.py:21(__call__)
      295    0.001    0.000    0.303    0.001 Workbook.py:545(get_formula_value)
     6338    0.001    0.000    0.001    0.000 {method 'update' of 'dict' objects}
     3960    0.001    0.000    0.001    0.000 earley_forest.py:158(<listcomp>)
     8811    0.001    0.000    0.001    0.000 earley_forest.py:169(__hash__)
       99    0.001    0.000    0.003    0.000 tree_matcher.py:108(<setcomp>)
      990    0.001    0.000    0.003    0.000 load_grammar.py:346(expr)
     8778    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
      592    0.001    0.000    0.002    0.000 Cell.py:81(set_cell_value)
     1980    0.001    0.000    0.002    0.000 __init__.py:253(escape)
     1386    0.001    0.000    0.005    0.000 tree_matcher.py:61(make_recons_rule_to_term)
     9801    0.001    0.000    0.001    0.000 visitors.py:178(__default_token__)
     1683    0.001    0.000    0.001    0.000 earley_forest.py:193(__init__)
     1778    0.001    0.000    0.004    0.000 utils.py:131(check_valid_cell_location)
      495    0.001    0.000    0.183    0.000 earley_forest.py:535(visit)
  885/295    0.001    0.000    0.013    0.000 visitors.py:421(_visit_tree)
     2079    0.001    0.000    0.003    0.000 lexer.py:125(__init__)
     1485    0.001    0.000    0.008    0.000 utils.py:184(dedup_list)
     1980    0.001    0.000    0.001    0.000 {method 'translate' of 'str' objects}
     2561    0.001    0.000    0.001    0.000 utils.py:78(get_hidden_name)
     1485    0.001    0.000    0.017    0.000 tree.py:169(find_pred)
     4950    0.001    0.000    0.001    0.000 {method 'startswith' of 'str' objects}
  885/295    0.001    0.000    0.012    0.000 visitors.py:444(inner)
     3465    0.001    0.000    0.004    0.000 grammar.py:22(__ne__)
     4851    0.001    0.000    0.001    0.000 tree_matcher.py:17(__init__)
     2475    0.001    0.000    0.005    0.000 load_grammar.py:639(<genexpr>)
      590    0.001    0.000    0.003    0.000 Workbook.py:807(get_cell_value)
  792/396    0.001    0.000    0.595    0.002 reconstruct.py:85(_reconstruct)
     1980    0.001    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
      495    0.001    0.000    0.003    0.000 earley.py:284(<listcomp>)
     9900    0.001    0.000    0.001    0.000 {method 'popleft' of 'collections.deque' objects}
     2475    0.001    0.000    0.001    0.000 typing.py:352(inner)
      495    0.001    0.000    0.184    0.000 earley_forest.py:397(transform)
  885/295    0.001    0.000    0.010    0.000 visitors.py:430(<listcomp>)
      495    0.001    0.000    0.001    0.000 earley_forest.py:523(__init__)
       99    0.001    0.000    0.048    0.000 load_grammar.py:693(<listcomp>)
     4046    0.001    0.000    0.001    0.000 {method 'get' of 'dict' objects}
      297    0.001    0.000    0.004    0.000 Sheet.py:60(set_cell_contents)
      885    0.001    0.000    0.008    0.000 Parser.py:40(fix_formula)
     4851    0.001    0.000    0.001    0.000 load_grammar.py:572(<genexpr>)
     6039    0.001    0.000    0.001    0.000 grammar_analysis.py:149(<lambda>)
       99    0.001    0.000    0.001    0.000 tree_matcher.py:116(<setcomp>)
     3366    0.001    0.000    0.001    0.000 tree_matcher.py:44(<lambda>)
      394    0.001    0.000    0.001    0.000 Workbook.py:688(_get_sheet_name_location)
      295    0.001    0.000    0.001    0.000 Parser.py:211(mul_expr)
     2277    0.001    0.000    0.001    0.000 <frozen abc>:117(__instancecheck__)
     2277    0.001    0.000    0.001    0.000 {built-in method _abc._abc_instancecheck}
     2079    0.001    0.000    0.001    0.000 lexer.py:70(_get_flags)
      297    0.001    0.000    0.001    0.000 earley.py:245(<setcomp>)
     6435    0.001    0.000    0.001    0.000 typing.py:2256(cast)
      495    0.001    0.000    0.001    0.000 earley_forest.py:390(__init__)
     6039    0.001    0.000    0.001    0.000 grammar_analysis.py:172(<lambda>)
     1485    0.001    0.000    0.017    0.000 tree.py:173(find_data)
     2970    0.001    0.000    0.001    0.000 load_grammar.py:617(pattern)
     4653    0.001    0.000    0.001    0.000 {method 'lstrip' of 'str' objects}
  885/295    0.001    0.000    0.010    0.000 visitors.py:429(visit_children)
      297    0.001    0.000    0.002    0.000 Workbook.py:715(clean_children_cells)
     1485    0.001    0.000    0.001    0.000 lexer.py:53(__eq__)
      198    0.001    0.000    0.003    0.000 Parser.py:388(CELLREF_NO_ABS)
       99    0.001    0.000    0.053    0.001 load_grammar.py:694(<listcomp>)
     3465    0.000    0.000    0.000    0.000 {built-in method builtins.any}
     1287    0.000    0.000    0.029    0.000 visitors.py:159(transform)
      885    0.000    0.000    0.001    0.000 utils.py:295(get_highest_precedence_error)
     1980    0.000    0.000    0.001    0.000 lexer.py:88(max_width)
     2970    0.000    0.000    0.000    0.000 visitors.py:108(__init__)
     1881    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
       99    0.000    0.000    0.001    0.000 load_grammar.py:446(<dictcomp>)
      198    0.000    0.000    0.001    0.000 {built-in method builtins.print}
     3465    0.000    0.000    0.000    0.000 load_grammar.py:431(expansion)
      590    0.000    0.000    0.001    0.000 __init__.py:178(sub)
     1683    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
      295    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
      198    0.000    0.000    0.001    0.000 grammar_analysis.py:145(<dictcomp>)
     1980    0.000    0.000    0.001    0.000 lexer.py:84(min_width)
     3267    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      198    0.000    0.000    0.011    0.000 grammar_analysis.py:175(<dictcomp>)
      198    0.000    0.000    0.001    0.000 parser_frontends.py:96(_make_lexer_thread)
       99    0.000    0.000    0.873    0.009 reconstruct.py:80(__init__)
     2970    0.000    0.000    0.000    0.000 load_grammar.py:663(value)
      297    0.000    0.000    0.007    0.000 tree_matcher.py:42(_best_rules_from_group)
       99    0.000    0.000    0.001    0.000 copy.py:66(copy)
      297    0.000    0.000    0.323    0.001 Workbook.py:36(run_func)
       99    0.000    0.000    0.001    0.000 load_grammar.py:246(_add_recurse_rule)
      198    0.000    0.000    0.001    0.000 Parser.py:381(cell)
     2178    0.000    0.000    0.000    0.000 tree.py:32(__init__)
      792    0.000    0.000    0.003    0.000 earley_forest.py:447(visit_intermediate_node_out)
      297    0.000    0.000    0.001    0.000 Workbook.py:779(get_cell_contents)
      594    0.000    0.000    0.000    0.000 load_grammar.py:411(alias)
      297    0.000    0.000    0.001    0.000 Cell.py:65(set_contents)
     2079    0.000    0.000    0.000    0.000 load_grammar.py:809(<lambda>)
      792    0.000    0.000    0.000    0.000 reconstruct.py:15(is_iter_empty)
      891    0.000    0.000    0.001    0.000 load_grammar.py:210(_args_as_int)
      986    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
      495    0.000    0.000    0.000    0.000 load_grammar.py:640(<setcomp>)
      394    0.000    0.000    0.001    0.000 utils.py:207(remove_exponent)
      295    0.000    0.000    0.002    0.000 Sheet.py:104(set_cell_value)
      198    0.000    0.000    0.001    0.000 grammar_analysis.py:166(<dictcomp>)
      297    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
      396    0.000    0.000    0.001    0.000 grammar.py:124(__eq__)
       99    0.000    0.000    0.001    0.000 load_grammar.py:642(expr)
      198    0.000    0.000    0.000    0.000 grammar_analysis.py:60(__init__)
       99    0.000    0.000    0.596    0.006 reconstruct.py:96(reconstruct)
      198    0.000    0.000    0.001    0.000 grammar_analysis.py:163(<dictcomp>)
     2178    0.000    0.000    0.000    0.000 {method 'groups' of 're.Match' objects}
       99    0.000    0.000    0.000    0.000 utils.py:307(error_matcher)
      590    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
      392    0.000    0.000    0.001    0.000 Workbook.py:576(get_cell_from_location)
      495    0.000    0.000    0.000    0.000 load_grammar.py:613(_make_joined_pattern)
     1881    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      689    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
     1771    0.000    0.000    0.000    0.000 Cell.py:123(get_value)
      198    0.000    0.000    0.011    0.000 grammar_analysis.py:160(<dictcomp>)
      784    0.000    0.000    0.000    0.000 Graph.py:137(get_parents_from_cell)
       99    0.000    0.000    0.003    0.000 load_grammar.py:375(maybe)
     1683    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
       99    0.000    0.000    0.001    0.000 Workbook.py:701(add_children_cells)
       99    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
     1188    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      396    0.000    0.000    0.000    0.000 <frozen codecs>:327(reset)
       99    0.000    0.000    0.000    0.000 copy.py:259(_reconstruct)
       99    0.000    0.000    0.000    0.000 reconstruct.py:83(<dictcomp>)
      792    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
      198    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
      196    0.000    0.000    0.000    0.000 Graph.py:96(update_child)
      198    0.000    0.000    0.578    0.003 lark.py:640(parse)
      297    0.000    0.000    0.000    0.000 Sheet.py:99(get_cell_contents)
       99    0.000    0.000    0.001    0.000 load_grammar.py:443(__init__)
      394    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
      295    0.000    0.000    0.013    0.000 visitors.py:415(visit)
      199    0.000    0.000    0.000    0.000 Workbook.py:541(get_sheet_name_from_hidden)
      396    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
       99    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
       99    0.000    0.000    0.000    0.000 load_grammar.py:763(<listcomp>)
     1083    0.000    0.000    0.000    0.000 Cell.py:126(get_contents)
      198    0.000    0.000    0.007    0.000 utils.py:269(classify_bool)
     1586    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       99    0.000    0.000    0.000    0.000 load_grammar.py:235(_name_rule)
      198    0.000    0.000    0.000    0.000 load_grammar.py:201(_will_not_get_removed)
      198    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      198    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
      891    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
     1482    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
       99    0.000    0.000    0.000    0.000 load_grammar.py:240(_add_rule)
     1287    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      198    0.000    0.000    0.000    0.000 visitors.py:163(__mul__)
     1188    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
      198    0.000    0.000    0.000    0.000 visitors.py:263(__mul__)
     1089    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
      198    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
      394    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      495    0.000    0.000    0.000    0.000 {method 'clear' of 'set' objects}
      394    0.000    0.000    0.000    0.000 {method 'normalize' of 'decimal.Decimal' objects}
      396    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
      198    0.000    0.000    0.000    0.000 common.py:83(__init__)
      693    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
      495    0.000    0.000    0.000    0.000 earley.py:254(<setcomp>)
      891    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
       99    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
      198    0.000    0.000    0.000    0.000 load_grammar.py:219(expansion)
       99    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
      694    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
      495    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
       99    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
       99    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
      198    0.000    0.000    0.001    0.000 load_grammar.py:222(expansions)
      490    0.000    0.000    0.000    0.000 Cell.py:133(get_children)
      295    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
       99    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
      594    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
       99    0.000    0.000    0.000    0.000 copyreg.py:104(__newobj__)
      211    0.000    0.000    0.000    0.000 {built-in method builtins.min}
      297    0.000    0.000    0.000    0.000 tree_matcher.py:74(__init__)
      491    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
      4/1    0.000    0.000    0.000    0.000 _parser.py:509(_parse)
      396    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
      196    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
       99    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
      295    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
      394    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
      297    0.000    0.000    0.000    0.000 tree_matcher.py:77(lex)
       99    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
      396    0.000    0.000    0.000    0.000 <frozen codecs>:276(reset)
      4/1    0.000    0.000    0.000    0.000 _parser.py:449(_parse_sub)
      199    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      6/1    0.000    0.000    0.000    0.000 _compiler.py:37(_compile)
       99    0.000    0.000    0.000    0.000 Parser.py:377(__init__)
        1    0.000    0.000    0.000    0.000 _compiler.py:571(_code)
       99    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
       99    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
       99    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
       99    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
      8/3    0.000    0.000    0.000    0.000 _parser.py:174(getwidth)
        1    0.000    0.000    0.000    0.000 _parser.py:972(parse)
       34    0.000    0.000    0.000    0.000 _parser.py:164(__getitem__)
        1    0.000    0.000    0.000    0.000 _compiler.py:509(_compile_info)
        1    0.000    0.000    0.000    0.000 _compiler.py:738(compile)
        4    0.000    0.000    0.000    0.000 _compiler.py:31(_combine_flags)
       17    0.000    0.000    0.000    0.000 _parser.py:233(__next)
        2    0.000    0.000    0.000    0.000 enum.py:686(__call__)
        2    0.000    0.000    0.000    0.000 enum.py:1509(__and__)
        2    0.000    0.000    0.000    0.000 _parser.py:94(closegroup)
      2/1    0.000    0.000    0.000    0.000 _compiler.py:434(_get_literal_prefix)
        1    0.000    0.000    0.000    0.000 _compiler.py:241(_optimize_charset)
       18    0.000    0.000    0.000    0.000 _parser.py:249(match)
       11    0.000    0.000    0.000    0.000 _parser.py:254(get)
        1    0.000    0.000    0.000    0.000 _parser.py:224(__init__)
       11    0.000    0.000    0.000    0.000 _parser.py:286(tell)
       13    0.000    0.000    0.000    0.000 _parser.py:160(__len__)
        2    0.000    0.000    0.000    0.000 _parser.py:82(opengroup)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        3    0.000    0.000    0.000    0.000 Cell.py:46(__init__)
        7    0.000    0.000    0.000    0.000 _parser.py:172(append)
        7    0.000    0.000    0.000    0.000 _parser.py:109(__init__)
        3    0.000    0.000    0.000    0.000 _compiler.py:396(_simple)
        1    0.000    0.000    0.000    0.000 _compiler.py:465(_get_charset_prefix)
        6    0.000    0.000    0.000    0.000 _parser.py:79(groups)
        1    0.000    0.000    0.000    0.000 _compiler.py:214(_compile_charset)
        6    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
        2    0.000    0.000    0.000    0.000 _compiler.py:568(isstring)
        2    0.000    0.000    0.000    0.000 enum.py:1091(__new__)
        1    0.000    0.000    0.000    0.000 _parser.py:369(_escape)
        1    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
        1    0.000    0.000    0.000    0.000 _parser.py:73(__init__)
        1    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
        3    0.000    0.000    0.000    0.000 _compiler.py:426(_get_iscased)
        1    0.000    0.000    0.000    0.000 _parser.py:956(fix_flags)
        3    0.000    0.000    0.000    0.000 _parser.py:168(__setitem__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 _parser.py:288(seek)
        1    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}



##################Running pro_copy_cells2... #######################
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
for test <function pro_copy_cells2 at 0x7fa3a35751c0> total time: 4.567169430999999
Total Logs
         1381613 function calls (1376045 primitive calls) in 0.446 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      990    0.080    0.000    0.292    0.000 earley.py:78(predict_and_complete)
    73557    0.046    0.000    0.076    0.000 earley_common.py:9(__init__)
180177/175401    0.027    0.000    0.035    0.000 {built-in method builtins.hash}
      297    0.026    0.000    0.087    0.000 earley_forest.py:283(visit)
    54252    0.020    0.000    0.031    0.000 utils.py:345(add)
    45782    0.019    0.000    0.036    0.000 grammar.py:18(__eq__)
    97160    0.018    0.000    0.024    0.000 grammar.py:25(__hash__)
    42261    0.012    0.000    0.015    0.000 lexer.py:265(__eq__)
    28512    0.011    0.000    0.017    0.000 utils.py:342(__contains__)
    61974    0.010    0.000    0.010    0.000 earley_common.py:28(__eq__)
   120937    0.010    0.000    0.010    0.000 {built-in method builtins.isinstance}
    10791    0.008    0.000    0.009    0.000 {built-in method fromkeys}
    79281    0.007    0.000    0.007    0.000 grammar.py:121(__hash__)
     2079    0.007    0.000    0.033    0.000 earley.py:135(<listcomp>)
    82269    0.007    0.000    0.007    0.000 earley_common.py:31(__hash__)
    91173    0.006    0.000    0.006    0.000 {built-in method builtins.len}
      594    0.006    0.000    0.018    0.000 xearley.py:41(scan)
     4059    0.006    0.000    0.017    0.000 earley_forest.py:50(__init__)
    83759    0.006    0.000    0.006    0.000 {method 'append' of 'list' objects}
     3960    0.005    0.000    0.023    0.000 earley_forest.py:437(_visit_node_out_helper)
     2079    0.005    0.000    0.010    0.000 earley_forest.py:603(transform_packed_node)
    32884    0.004    0.000    0.004    0.000 {built-in method builtins.next}
     3762    0.004    0.000    0.008    0.000 {built-in method builtins.sorted}
    45249    0.003    0.000    0.003    0.000 {built-in method builtins.id}
    10791    0.003    0.000    0.012    0.000 utils.py:339(__init__)
     4257    0.003    0.000    0.010    0.000 earley_forest.py:64(add_family)
      297    0.003    0.000    0.414    0.001 earley.py:262(parse)
     4257    0.003    0.000    0.005    0.000 earley_forest.py:131(__init__)
    10593    0.002    0.000    0.003    0.000 utils.py:348(__iter__)
     1683    0.002    0.000    0.006    0.000 earley_forest.py:581(transform_symbol_node)
     4257    0.002    0.000    0.010    0.000 earley_common.py:25(advance)
     3762    0.002    0.000    0.012    0.000 earley_forest.py:85(children)
     2079    0.002    0.000    0.006    0.000 earley_forest.py:631(visit_packed_node_in)
     2079    0.002    0.000    0.004    0.000 earley_forest.py:427(visit_packed_node_in)
     1881    0.002    0.000    0.009    0.000 earley_forest.py:422(visit_symbol_node_in)
     2079    0.002    0.000    0.017    0.000 earley_forest.py:638(visit_packed_node_out)
      198    0.002    0.000    0.306    0.002 xearley.py:39(_parse)
     5940    0.002    0.000    0.002    0.000 {method 'setdefault' of 'dict' objects}
     4158    0.002    0.000    0.002    0.000 earley_forest.py:145(sort_key)
     1881    0.002    0.000    0.016    0.000 earley_forest.py:625(visit_symbol_node_in)
     1683    0.001    0.000    0.003    0.000 earley_forest.py:556(_collapse_ambig)
    10345    0.001    0.000    0.002    0.000 {method 'add' of 'set' objects}
    14495    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
5141/4700    0.001    0.000    0.002    0.000 {built-in method builtins.getattr}
     1683    0.001    0.000    0.003    0.000 earley_forest.py:565(_call_rule_func)
    18216    0.001    0.000    0.001    0.000 {method 'pop' of 'collections.deque' objects}
     4459    0.001    0.000    0.001    0.000 {method 'match' of 're.Pattern' objects}
     3762    0.001    0.000    0.002    0.000 parser_frontends.py:184(match)
1206/1202    0.001    0.000    0.005    0.000 visitors.py:111(_call_userfunc)
      219    0.001    0.000    0.002    0.000 tree.py:137(iter_subtrees)
     2079    0.001    0.000    0.002    0.000 earley_forest.py:155(children)
    17164    0.001    0.000    0.001    0.000 {method 'append' of 'collections.deque' objects}
        1    0.001    0.001    0.446    0.446 Workbook.py:283(transfer_cells)
      198    0.001    0.000    0.203    0.001 Workbook.py:639(recompute_cell_and_parents)
      198    0.001    0.000    0.395    0.002 parser_frontends.py:100(parse)
       99    0.001    0.000    0.003    0.000 earley.py:188(scan)
2038/1900    0.001    0.000    0.005    0.000 visitors.py:143(_transform_children)
     5841    0.001    0.000    0.001    0.000 {method 'remove' of 'set' objects}
     2079    0.001    0.000    0.014    0.000 earley_forest.py:450(visit_packed_node_out)
      198    0.001    0.000    0.208    0.001 Workbook.py:728(set_cell_contents)
     3762    0.001    0.000    0.001    0.000 utils.py:357(__len__)
     1881    0.001    0.000    0.001    0.000 earley_forest.py:499(__init__)
     1881    0.001    0.000    0.001    0.000 earley_forest.py:70(load_paths)
       40    0.001    0.000    0.002    0.000 visitors.py:293(transform)
      300    0.001    0.000    0.001    0.000 utils.py:179(convert_location_to_idx)
      164    0.001    0.000    0.007    0.000 visitors.py:278(transform)
     4158    0.001    0.000    0.001    0.000 earley_forest.py:141(is_empty)
      891    0.001    0.000    0.001    0.000 lexer.py:213(_future_new)
     1683    0.001    0.000    0.010    0.000 earley_forest.py:444(visit_symbol_node_out)
        1    0.001    0.001    0.001    0.001 grammar_analysis.py:78(calculate_sets)
      297    0.001    0.000    0.002    0.000 earley.py:284(<listcomp>)
       99    0.001    0.000    0.010    0.000 earley.py:171(_parse)
      496    0.001    0.000    0.001    0.000 utils.py:194(convert_idx_to_location)
      198    0.001    0.000    0.002    0.000 Sheet.py:60(set_cell_contents)
      594    0.001    0.000    0.001    0.000 tree_matcher.py:48(_match)
      891    0.001    0.000    0.001    0.000 lexer.py:202(__new__)
      693    0.001    0.000    0.001    0.000 Sheet.py:93(get_cell_value)
     1683    0.001    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
      954    0.001    0.000    0.001    0.000 tree.py:147(<listcomp>)
     4443    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
     3960    0.001    0.000    0.001    0.000 earley_forest.py:548(_check_cycle)
     2079    0.000    0.000    0.000    0.000 earley_forest.py:158(<listcomp>)
     3762    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
      796    0.000    0.000    0.001    0.000 __init__.py:272(_compile)
      297    0.000    0.000    0.087    0.000 earley_forest.py:535(visit)
     4257    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
      495    0.000    0.000    0.001    0.000 earley_forest.py:432(visit_token_node)
     1386    0.000    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
       99    0.000    0.000    0.023    0.000 tree_matcher.py:148(match_tree)
      297    0.000    0.000    0.088    0.000 earley_forest.py:397(transform)
      697    0.000    0.000    0.001    0.000 __init__.py:163(match)
      297    0.000    0.000    0.001    0.000 Cell.py:81(set_cell_value)
      297    0.000    0.000    0.001    0.000 earley_forest.py:523(__init__)
      693    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
       99    0.000    0.000    0.200    0.002 Workbook.py:545(get_formula_value)
      198    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
       99    0.000    0.000    0.001    0.000 reconstruct.py:33(__default__)
      725    0.000    0.000    0.000    0.000 visitors.py:171(__default__)
     1219    0.000    0.000    0.000    0.000 tree.py:61(__init__)
      297    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
      598    0.000    0.000    0.001    0.000 utils.py:131(check_valid_cell_location)
      198    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
      198    0.000    0.000    0.000    0.000 {built-in method builtins.print}
       99    0.000    0.000    0.001    0.000 Parser.py:253(cell)
     1685    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      803    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.009    0.009 load_grammar.py:690(compile)
      291    0.000    0.000    0.002    0.000 visitors.py:130(_call_userfunc_token)
      792    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
     2282    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
       99    0.000    0.000    0.001    0.000 Parser.py:388(CELLREF_NO_ABS)
     1085    0.000    0.000    0.000    0.000 tree.py:66(meta)
  157/111    0.000    0.000    0.003    0.000 visitors.py:155(_transform_tree)
      198    0.000    0.000    0.208    0.001 Workbook.py:36(run_func)
      690    0.000    0.000    0.004    0.000 visitors.py:275(_transform_tree)
      198    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
      892    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
       99    0.000    0.000    0.001    0.000 Parser.py:381(cell)
     1684    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      198    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
      201    0.000    0.000    0.000    0.000 tree.py:179(expand_kids_by_data)
      198    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
      396    0.000    0.000    0.000    0.000 <frozen codecs>:327(reset)
       99    0.000    0.000    0.025    0.000 reconstruct.py:96(reconstruct)
       99    0.000    0.000    0.000    0.000 earley.py:245(<setcomp>)
      198    0.000    0.000    0.001    0.000 Workbook.py:779(get_cell_contents)
       99    0.000    0.000    0.000    0.000 Workbook.py:688(_get_sheet_name_location)
       63    0.000    0.000    0.000    0.000 functools.py:35(update_wrapper)
      693    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
      198    0.000    0.000    0.395    0.002 lark.py:640(parse)
       41    0.000    0.000    0.001    0.000 load_grammar.py:566(_literal_to_pattern)
       99    0.000    0.000    0.001    0.000 Workbook.py:807(get_cell_value)
       99    0.000    0.000    0.000    0.000 tree_matcher.py:21(__call__)
      198    0.000    0.000    0.025    0.000 reconstruct.py:85(_reconstruct)
      101    0.000    0.000    0.000    0.000 grammar_analysis.py:187(_expand_rule)
      198    0.000    0.000    0.000    0.000 Workbook.py:541(get_sheet_name_from_hidden)
      742    0.000    0.000    0.000    0.000 grammar.py:42(__init__)
       41    0.000    0.000    0.000    0.000 ast.py:54(literal_eval)
       99    0.000    0.000    0.000    0.000 Workbook.py:701(add_children_cells)
      198    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
       99    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
      198    0.000    0.000    0.001    0.000 Cell.py:46(__init__)
       99    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
      396    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
       41    0.000    0.000    0.000    0.000 {built-in method builtins.compile}
      895    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      396    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
       99    0.000    0.000    0.001    0.000 Sheet.py:104(set_cell_value)
      594    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      198    0.000    0.000    0.000    0.000 Workbook.py:715(clean_children_cells)
       99    0.000    0.000    0.002    0.000 visitors.py:444(inner)
       41    0.000    0.000    0.000    0.000 load_grammar.py:540(eval_escaping)
      198    0.000    0.000    0.001    0.000 earley_forest.py:447(visit_intermediate_node_out)
      693    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
       99    0.000    0.000    0.000    0.000 tree_matcher.py:65(parse_rulename)
   105/45    0.000    0.000    0.001    0.000 load_grammar.py:389(expansion)
       99    0.000    0.000    0.002    0.000 visitors.py:421(_visit_tree)
      382    0.000    0.000    0.000    0.000 grammar_analysis.py:70(update_set)
       28    0.000    0.000    0.000    0.000 tree_matcher.py:106(_build_recons_rules)
      355    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      198    0.000    0.000    0.000    0.000 Sheet.py:99(get_cell_contents)
       99    0.000    0.000    0.001    0.000 Parser.py:40(fix_formula)
       99    0.000    0.000    0.000    0.000 __init__.py:178(sub)
   146/84    0.000    0.000    0.001    0.000 visitors.py:342(_call_userfunc)
      198    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
      200    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
       99    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      198    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
       63    0.000    0.000    0.001    0.000 utils.py:275(bfs)
       99    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
       86    0.000    0.000    0.000    0.000 grammar.py:103(__init__)
      172    0.000    0.000    0.000    0.000 grammar_analysis.py:17(__init__)
      496    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
      594    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
      495    0.000    0.000    0.000    0.000 Cell.py:123(get_value)
      155    0.000    0.000    0.000    0.000 load_grammar.py:384(_flatten)
      396    0.000    0.000    0.000    0.000 Cell.py:126(get_contents)
       99    0.000    0.000    0.000    0.000 reconstruct.py:15(is_iter_empty)
       99    0.000    0.000    0.002    0.000 visitors.py:415(visit)
      600    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       63    0.000    0.000    0.000    0.000 visitors.py:481(__get__)
    40/11    0.000    0.000    0.001    0.000 visitors.py:362(visit)
       99    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
      120    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
      437    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      495    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
        2    0.000    0.000    0.000    0.000 utils.py:23(classify)
       35    0.000    0.000    0.000    0.000 load_grammar.py:420(expansions)
      111    0.000    0.000    0.003    0.000 visitors.py:159(transform)
      297    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
  139/129    0.000    0.000    0.000    0.000 tree.py:134(__hash__)
       41    0.000    0.000    0.000    0.000 load_grammar.py:536(_rfind)
      496    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
        1    0.000    0.000    0.446    0.446 Workbook.py:422(copy_cells)
       11    0.000    0.000    0.000    0.000 load_grammar.py:450(pattern)
      396    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
       99    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
       63    0.000    0.000    0.000    0.000 visitors.py:470(__init__)
       99    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
       35    0.000    0.000    0.000    0.000 tree_matcher.py:121(<listcomp>)
      396    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      315    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
      198    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      120    0.000    0.000    0.000    0.000 <frozen abc>:117(__instancecheck__)
       25    0.000    0.000    0.005    0.000 visitors.py:258(transform)
       63    0.000    0.000    0.001    0.000 visitors.py:500(_vargs_inline)
      396    0.000    0.000    0.000    0.000 <frozen codecs>:276(reset)
       41    0.000    0.000    0.001    0.000 load_grammar.py:601(literal)
       49    0.000    0.000    0.000    0.000 tree_matcher.py:57(make_recons_rule)
      123    0.000    0.000    0.000    0.000 load_grammar.py:537(<genexpr>)
      172    0.000    0.000    0.000    0.000 grammar_analysis.py:45(__hash__)
       63    0.000    0.000    0.001    0.000 visitors.py:478(__call__)
    15/13    0.000    0.000    0.000    0.000 load_grammar.py:405(<listcomp>)
        1    0.000    0.000    0.002    0.002 earley.py:32(__init__)
        1    0.000    0.000    0.002    0.002 grammar_analysis.py:141(__init__)
      168    0.000    0.000    0.000    0.000 tree_matcher.py:12(is_discarded_terminal)
        1    0.000    0.000    0.010    0.010 tree_matcher.py:89(__init__)
       99    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
       99    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
       45    0.000    0.000    0.000    0.000 {built-in method builtins.max}
      219    0.000    0.000    0.000    0.000 {method 'values' of 'collections.OrderedDict' objects}
       41    0.000    0.000    0.000    0.000 ast.py:33(parse)
       99    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
       99    0.000    0.000    0.000    0.000 {method 'clear' of 'set' objects}
       13    0.000    0.000    0.001    0.000 grammar_analysis.py:180(expand_rule)
        1    0.000    0.000    0.001    0.001 load_grammar.py:693(<listcomp>)
       99    0.000    0.000    0.000    0.000 {method 'groups' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 load_grammar.py:793(<setcomp>)
      116    0.000    0.000    0.000    0.000 tree.py:175(<lambda>)
      105    0.000    0.000    0.000    0.000 load_grammar.py:759(<genexpr>)
        2    0.000    0.000    0.000    0.000 tree_matcher.py:28(_best_from_group)
       99    0.000    0.000    0.000    0.000 Parser.py:377(__init__)
       47    0.000    0.000    0.000    0.000 lexer.py:41(__init__)
       99    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
       20    0.000    0.000    0.000    0.000 load_grammar.py:631(expansions)
      170    0.000    0.000    0.000    0.000 grammar_analysis.py:28(next)
      192    0.000    0.000    0.000    0.000 visitors.py:178(__default_token__)
       25    0.000    0.000    0.001    0.000 load_grammar.py:674(nr_deepcopy_tree)
       99    0.000    0.000    0.000    0.000 earley.py:254(<setcomp>)
      110    0.000    0.000    0.000    0.000 tree.py:32(__init__)
       15    0.000    0.000    0.000    0.000 tree.py:169(find_pred)
       99    0.000    0.000    0.000    0.000 tree_matcher.py:74(__init__)
       54    0.000    0.000    0.000    0.000 lexer.py:50(__hash__)
       20    0.000    0.000    0.000    0.000 load_grammar.py:637(<lambda>)
       15    0.000    0.000    0.000    0.000 utils.py:190(<listcomp>)
        1    0.000    0.000    0.002    0.002 load_grammar.py:710(<listcomp>)
      113    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
       99    0.000    0.000    0.000    0.000 tree_matcher.py:77(lex)
       82    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
       99    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
       46    0.000    0.000    0.000    0.000 load_grammar.py:668(value)
       35    0.000    0.000    0.000    0.000 load_grammar.py:798(<lambda>)
       41    0.000    0.000    0.000    0.000 {built-in method builtins.all}
       99    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        7    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
       20    0.000    0.000    0.000    0.000 lexer.py:81(to_regexp)
       11    0.000    0.000    0.000    0.000 earley.py:58(<listcomp>)
       41    0.000    0.000    0.000    0.000 ast.py:84(_convert)
       99    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
       15    0.000    0.000    0.000    0.000 tree.py:173(find_data)
       99    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
       35    0.000    0.000    0.000    0.000 load_grammar.py:621(expansion)
        2    0.000    0.000    0.000    0.000 utils.py:271(<listcomp>)
       20    0.000    0.000    0.000    0.000 __init__.py:253(escape)
       53    0.000    0.000    0.000    0.000 grammar.py:69(__init__)
       65    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 load_grammar.py:806(<setcomp>)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:115(<setcomp>)
       10    0.000    0.000    0.000    0.000 load_grammar.py:346(expr)
       20    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
        1    0.000    0.000    0.000    0.000 tree_matcher.py:108(<setcomp>)
       25    0.000    0.000    0.000    0.000 load_grammar.py:639(<genexpr>)
       21    0.000    0.000    0.000    0.000 lexer.py:125(__init__)
       15    0.000    0.000    0.000    0.000 utils.py:184(dedup_list)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:82(<setcomp>)
       50    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
       14    0.000    0.000    0.000    0.000 tree_matcher.py:61(make_recons_rule_to_term)
       35    0.000    0.000    0.000    0.000 grammar.py:22(__ne__)
        1    0.000    0.000    0.000    0.000 earley.py:52(<setcomp>)
       49    0.000    0.000    0.000    0.000 tree_matcher.py:17(__init__)
       49    0.000    0.000    0.000    0.000 load_grammar.py:572(<genexpr>)
        1    0.000    0.000    0.000    0.000 copy.py:66(copy)
        1    0.000    0.000    0.001    0.001 load_grammar.py:694(<listcomp>)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:178(<dictcomp>)
       21    0.000    0.000    0.000    0.000 lexer.py:70(_get_flags)
       30    0.000    0.000    0.000    0.000 load_grammar.py:617(pattern)
        1    0.000    0.000    0.000    0.000 load_grammar.py:246(_add_recurse_rule)
        1    0.000    0.000    0.000    0.000 earley.py:53(<setcomp>)
        1    0.000    0.000    0.010    0.010 reconstruct.py:80(__init__)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:116(<setcomp>)
       65    0.000    0.000    0.000    0.000 typing.py:2256(cast)
       15    0.000    0.000    0.000    0.000 lexer.py:53(__eq__)
       33    0.000    0.000    0.000    0.000 tree_matcher.py:44(<lambda>)
       20    0.000    0.000    0.000    0.000 lexer.py:88(max_width)
       20    0.000    0.000    0.000    0.000 lexer.py:84(min_width)
        9    0.000    0.000    0.000    0.000 load_grammar.py:210(_args_as_int)
       35    0.000    0.000    0.000    0.000 {built-in method builtins.any}
        1    0.000    0.000    0.000    0.000 copyreg.py:104(__newobj__)
       30    0.000    0.000    0.000    0.000 visitors.py:108(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:446(<dictcomp>)
       30    0.000    0.000    0.000    0.000 load_grammar.py:663(value)
       35    0.000    0.000    0.000    0.000 load_grammar.py:431(expansion)
        5    0.000    0.000    0.000    0.000 load_grammar.py:640(<setcomp>)
       13    0.000    0.000    0.000    0.000 typing.py:352(inner)
        1    0.000    0.000    0.000    0.000 load_grammar.py:375(maybe)
        1    0.000    0.000    0.000    0.000 load_grammar.py:642(expr)
        1    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
       21    0.000    0.000    0.000    0.000 load_grammar.py:809(<lambda>)
        6    0.000    0.000    0.000    0.000 load_grammar.py:411(alias)
       50    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
        1    0.000    0.000    0.000    0.000 copy.py:259(_reconstruct)
        2    0.000    0.000    0.000    0.000 tree_matcher.py:42(_best_rules_from_group)
       34    0.000    0.000    0.000    0.000 grammar_analysis.py:149(<lambda>)
        5    0.000    0.000    0.000    0.000 load_grammar.py:613(_make_joined_pattern)
        2    0.000    0.000    0.000    0.000 load_grammar.py:219(expansion)
        4    0.000    0.000    0.000    0.000 grammar.py:124(__eq__)
        2    0.000    0.000    0.000    0.000 load_grammar.py:201(_will_not_get_removed)
       34    0.000    0.000    0.000    0.000 grammar_analysis.py:172(<lambda>)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:145(<dictcomp>)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:175(<dictcomp>)
        2    0.000    0.000    0.000    0.000 visitors.py:163(__mul__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:240(_add_rule)
        1    0.000    0.000    0.000    0.000 load_grammar.py:443(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:235(_name_rule)
        8    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
        1    0.000    0.000    0.000    0.000 reconstruct.py:83(<dictcomp>)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:60(__init__)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        1    0.000    0.000    0.000    0.000 load_grammar.py:763(<listcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:166(<dictcomp>)
        2    0.000    0.000    0.000    0.000 utils.py:269(classify_bool)
        2    0.000    0.000    0.000    0.000 visitors.py:263(__mul__)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:163(<dictcomp>)
        2    0.000    0.000    0.000    0.000 load_grammar.py:222(expansions)
       11    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:160(<dictcomp>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
        4    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
        1    0.000    0.000    0.000    0.000 common.py:83(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        1    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
        4    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
        4    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        4    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        1    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}



##################Running pro_move_cells... #######################
=A1*B1
A1*B1
for test <function pro_move_cells at 0x7fa3a3575300> total time: 8.320367366000003
Total Logs
         2532483 function calls (2411627 primitive calls) in 0.874 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
100813/100413    0.078    0.000    0.296    0.000 visitors.py:111(_call_userfunc)
    12003    0.066    0.000    0.124    0.000 tree.py:137(iter_subtrees)
     4000    0.061    0.000    0.146    0.000 visitors.py:293(transform)
164230/150426    0.054    0.000    0.310    0.000 visitors.py:143(_transform_children)
197403/153303    0.048    0.000    0.074    0.000 {built-in method builtins.getattr}
     6503    0.041    0.000    0.431    0.000 visitors.py:278(transform)
   524063    0.039    0.000    0.040    0.000 {built-in method builtins.isinstance}
    85510    0.036    0.000    0.050    0.000 tree.py:147(<listcomp>)
    72501    0.023    0.000    0.035    0.000 visitors.py:171(__default__)
      100    0.019    0.000    0.785    0.008 load_grammar.py:690(compile)
    20100    0.018    0.000    0.022    0.000 tree.py:179(expand_kids_by_data)
     4100    0.017    0.000    0.017    0.000 {built-in method builtins.compile}
    59110    0.015    0.000    0.239    0.000 visitors.py:275(_transform_tree)
100381/58775    0.015    0.000    0.023    0.000 {built-in method builtins.hash}
     6300    0.014    0.000    0.022    0.000 functools.py:35(update_wrapper)
    82319    0.013    0.000    0.013    0.000 tree.py:61(__init__)
    71151    0.013    0.000    0.018    0.000 grammar.py:25(__hash__)
     4100    0.012    0.000    0.065    0.000 load_grammar.py:566(_literal_to_pattern)
   159905    0.011    0.000    0.011    0.000 {built-in method builtins.id}
    29228    0.011    0.000    0.019    0.000 grammar.py:18(__eq__)
    78827    0.011    0.000    0.011    0.000 tree.py:66(meta)
10500/4500    0.010    0.000    0.063    0.000 load_grammar.py:389(expansion)
     2800    0.009    0.000    0.047    0.000 tree_matcher.py:106(_build_recons_rules)
     4100    0.009    0.000    0.040    0.000 load_grammar.py:540(eval_escaping)
14600/8400    0.008    0.000    0.091    0.000 visitors.py:342(_call_userfunc)
   108748    0.008    0.000    0.008    0.000 {method 'append' of 'list' objects}
     4100    0.007    0.000    0.030    0.000 ast.py:54(literal_eval)
    89008    0.007    0.000    0.007    0.000 {built-in method builtins.len}
    15500    0.006    0.000    0.028    0.000 load_grammar.py:384(_flatten)
     9308    0.006    0.000    0.010    0.000 visitors.py:130(_call_userfunc_token)
     8404    0.006    0.000    0.017    0.000 grammar.py:103(__init__)
5803/1201    0.006    0.000    0.022    0.000 visitors.py:155(_transform_tree)
4000/1100    0.006    0.000    0.107    0.000 visitors.py:362(visit)
    17556    0.005    0.000    0.007    0.000 lexer.py:265(__eq__)
     3500    0.005    0.000    0.023    0.000 load_grammar.py:420(expansions)
     6300    0.005    0.000    0.032    0.000 visitors.py:481(__get__)
13902/12902    0.005    0.000    0.014    0.000 tree.py:134(__hash__)
     3500    0.004    0.000    0.010    0.000 tree_matcher.py:121(<listcomp>)
    49586    0.004    0.000    0.004    0.000 {method 'pop' of 'list' objects}
     1100    0.004    0.000    0.007    0.000 load_grammar.py:450(pattern)
     6300    0.004    0.000    0.027    0.000 visitors.py:470(__init__)
     4900    0.004    0.000    0.014    0.000 tree_matcher.py:57(make_recons_rule)
     2500    0.004    0.000    0.439    0.000 visitors.py:258(transform)
1500/1300    0.003    0.000    0.043    0.000 load_grammar.py:405(<listcomp>)
     6300    0.003    0.000    0.088    0.000 visitors.py:500(_vargs_inline)
     4100    0.003    0.000    0.069    0.000 load_grammar.py:601(literal)
      100    0.003    0.000    0.840    0.008 tree_matcher.py:89(__init__)
     6300    0.003    0.000    0.085    0.000 visitors.py:478(__call__)
    12300    0.003    0.000    0.004    0.000 load_grammar.py:537(<genexpr>)
    31500    0.003    0.000    0.003    0.000 {built-in method builtins.setattr}
     4500    0.003    0.000    0.007    0.000 {built-in method builtins.max}
      100    0.003    0.000    0.007    0.000 load_grammar.py:793(<setcomp>)
     4100    0.002    0.000    0.020    0.000 ast.py:33(parse)
    10500    0.002    0.000    0.005    0.000 load_grammar.py:759(<genexpr>)
     4100    0.002    0.000    0.009    0.000 load_grammar.py:536(_rfind)
      102    0.002    0.000    0.004    0.000 tree_matcher.py:28(_best_from_group)
     2500    0.002    0.000    0.094    0.000 load_grammar.py:674(nr_deepcopy_tree)
      600    0.002    0.000    0.002    0.000 Graph.py:330(tarjans)
     4700    0.002    0.000    0.002    0.000 lexer.py:41(__init__)
     1500    0.002    0.000    0.007    0.000 utils.py:190(<listcomp>)
      600    0.002    0.000    0.017    0.000 Workbook.py:728(set_cell_contents)
     5400    0.002    0.000    0.002    0.000 lexer.py:50(__hash__)
     2000    0.002    0.000    0.011    0.000 load_grammar.py:631(expansions)
      600    0.002    0.000    0.010    0.000 Workbook.py:639(recompute_cell_and_parents)
      902    0.002    0.000    0.002    0.000 utils.py:179(convert_location_to_idx)
      100    0.002    0.000    0.874    0.009 Workbook.py:283(transfer_cells)
     4600    0.002    0.000    0.002    0.000 load_grammar.py:668(value)
       22    0.001    0.000    0.005    0.000 earley.py:78(predict_and_complete)
      100    0.001    0.000    0.196    0.002 load_grammar.py:710(<listcomp>)
     2000    0.001    0.000    0.003    0.000 load_grammar.py:637(<lambda>)
     3500    0.001    0.000    0.005    0.000 load_grammar.py:798(<lambda>)
      100    0.001    0.000    0.875    0.009 Workbook.py:370(move_cells)
     8200    0.001    0.000    0.001    0.000 {method 'rfind' of 'str' objects}
     4100    0.001    0.000    0.002    0.000 {built-in method builtins.all}
        2    0.001    0.001    0.003    0.001 grammar_analysis.py:78(calculate_sets)
    11300    0.001    0.000    0.001    0.000 {method 'replace' of 'str' objects}
    12003    0.001    0.000    0.001    0.000 {method 'values' of 'collections.OrderedDict' objects}
     4627    0.001    0.000    0.004    0.000 {method 'add' of 'set' objects}
      100    0.001    0.000    0.002    0.000 load_grammar.py:806(<setcomp>)
     4100    0.001    0.000    0.001    0.000 ast.py:84(_convert)
     5104    0.001    0.000    0.001    0.000 grammar.py:69(__init__)
      200    0.001    0.000    0.006    0.000 utils.py:271(<listcomp>)
     2000    0.001    0.000    0.003    0.000 lexer.py:81(to_regexp)
      602    0.001    0.000    0.004    0.000 {method 'sort' of 'list' objects}
     3500    0.001    0.000    0.001    0.000 load_grammar.py:621(expansion)
    11600    0.001    0.000    0.001    0.000 tree.py:175(<lambda>)
      100    0.001    0.000    0.004    0.000 tree_matcher.py:115(<setcomp>)
     2311    0.001    0.000    0.005    0.000 {method 'join' of 'str' objects}
     6402    0.001    0.000    0.001    0.000 {method 'update' of 'dict' objects}
     1000    0.001    0.000    0.003    0.000 load_grammar.py:346(expr)
     2000    0.001    0.000    0.002    0.000 __init__.py:253(escape)
      702    0.001    0.000    0.001    0.000 utils.py:194(convert_idx_to_location)
     6910    0.001    0.000    0.001    0.000 tree_matcher.py:12(is_discarded_terminal)
    10537    0.001    0.000    0.001    0.000 grammar.py:121(__hash__)
      100    0.001    0.000    0.003    0.000 tree_matcher.py:108(<setcomp>)
     1400    0.001    0.000    0.005    0.000 tree_matcher.py:61(make_recons_rule_to_term)
     4818    0.001    0.000    0.001    0.000 grammar.py:42(__init__)
     1500    0.001    0.000    0.008    0.000 utils.py:184(dedup_list)
     2100    0.001    0.000    0.003    0.000 lexer.py:125(__init__)
     3500    0.001    0.000    0.004    0.000 grammar.py:22(__ne__)
     9306    0.001    0.000    0.001    0.000 visitors.py:178(__default_token__)
      985    0.001    0.000    0.001    0.000 earley_common.py:9(__init__)
     5415    0.001    0.000    0.001    0.000 grammar.py:15(__init__)
     5000    0.001    0.000    0.001    0.000 {method 'startswith' of 'str' objects}
     1500    0.001    0.000    0.016    0.000 tree.py:169(find_pred)
     4900    0.001    0.000    0.001    0.000 tree_matcher.py:17(__init__)
     2000    0.001    0.000    0.001    0.000 {method 'translate' of 'str' objects}
     1334    0.001    0.000    0.002    0.000 __init__.py:163(match)
     2500    0.001    0.000    0.004    0.000 load_grammar.py:639(<genexpr>)
      100    0.001    0.000    0.046    0.000 load_grammar.py:693(<listcomp>)
     4900    0.001    0.000    0.001    0.000 load_grammar.py:572(<genexpr>)
     1344    0.001    0.000    0.001    0.000 __init__.py:272(_compile)
     1220    0.001    0.000    0.001    0.000 Sheet.py:93(get_cell_value)
        5    0.001    0.000    0.002    0.000 earley_forest.py:283(visit)
      100    0.001    0.000    0.001    0.000 tree_matcher.py:116(<setcomp>)
      600    0.001    0.000    0.003    0.000 Sheet.py:60(set_cell_contents)
     2100    0.001    0.000    0.001    0.000 lexer.py:70(_get_flags)
     1312    0.001    0.000    0.003    0.000 utils.py:131(check_valid_cell_location)
     6500    0.001    0.000    0.001    0.000 typing.py:2256(cast)
     1426    0.001    0.000    0.001    0.000 {method 'match' of 're.Pattern' objects}
     3000    0.001    0.000    0.001    0.000 load_grammar.py:617(pattern)
     1500    0.001    0.000    0.016    0.000 tree.py:173(find_data)
     2106    0.001    0.000    0.001    0.000 <frozen abc>:117(__instancecheck__)
      600    0.001    0.000    0.018    0.000 Workbook.py:36(run_func)
     1731    0.001    0.000    0.001    0.000 utils.py:78(get_hidden_name)
     4423    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
     1500    0.000    0.000    0.000    0.000 lexer.py:53(__eq__)
     3500    0.000    0.000    0.000    0.000 {built-in method builtins.any}
     3500    0.000    0.000    0.000    0.000 load_grammar.py:431(expansion)
     1602    0.000    0.000    0.001    0.000 Sheet.py:120(get_cell)
      100    0.000    0.000    0.001    0.000 load_grammar.py:446(<dictcomp>)
     3332    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      100    0.000    0.000    0.049    0.000 load_grammar.py:694(<listcomp>)
     2106    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
     3000    0.000    0.000    0.000    0.000 visitors.py:108(__init__)
     4397    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
     4106    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
     2000    0.000    0.000    0.001    0.000 lexer.py:88(max_width)
     2509    0.000    0.000    0.001    0.000 tree_matcher.py:44(<lambda>)
      100    0.000    0.000    0.840    0.008 reconstruct.py:80(__init__)
     1201    0.000    0.000    0.023    0.000 visitors.py:159(transform)
      600    0.000    0.000    0.000    0.000 load_grammar.py:411(alias)
     3000    0.000    0.000    0.000    0.000 load_grammar.py:663(value)
     2000    0.000    0.000    0.001    0.000 lexer.py:84(min_width)
      814    0.000    0.000    0.001    0.000 utils.py:345(add)
      100    0.000    0.000    0.001    0.000 copy.py:66(copy)
      202    0.000    0.000    0.001    0.000 grammar_analysis.py:187(_expand_rule)
      300    0.000    0.000    0.001    0.000 Workbook.py:779(get_cell_contents)
      100    0.000    0.000    0.001    0.000 load_grammar.py:246(_add_recurse_rule)
      402    0.000    0.000    0.001    0.000 Workbook.py:583(recompute_cell_value)
      900    0.000    0.000    0.001    0.000 load_grammar.py:210(_args_as_int)
      500    0.000    0.000    0.000    0.000 load_grammar.py:640(<setcomp>)
     2100    0.000    0.000    0.000    0.000 load_grammar.py:809(<lambda>)
      400    0.000    0.000    0.001    0.000 grammar.py:124(__eq__)
      402    0.000    0.000    0.001    0.000 Workbook.py:576(get_cell_from_location)
      804    0.000    0.000    0.000    0.000 Graph.py:137(get_parents_from_cell)
      600    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
      600    0.000    0.000    0.001    0.000 Workbook.py:715(clean_children_cells)
      500    0.000    0.000    0.000    0.000 load_grammar.py:613(_make_joined_pattern)
     2300    0.000    0.000    0.000    0.000 {built-in method builtins.next}
      100    0.000    0.000    0.000    0.000 load_grammar.py:642(expr)
      100    0.000    0.000    0.003    0.000 load_grammar.py:375(maybe)
      800    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
     1606    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      649    0.000    0.000    0.000    0.000 grammar_analysis.py:70(update_set)
      100    0.000    0.000    0.000    0.000 reconstruct.py:83(<dictcomp>)
      125    0.000    0.000    0.001    0.000 utils.py:275(bfs)
      100    0.000    0.000    0.000    0.000 copy.py:259(_reconstruct)
     1111    0.000    0.000    0.000    0.000 tree.py:32(__init__)
      100    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
      346    0.000    0.000    0.000    0.000 grammar_analysis.py:17(__init__)
       12    0.000    0.000    0.000    0.000 xearley.py:41(scan)
      341    0.000    0.000    0.000    0.000 utils.py:342(__contains__)
     1804    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       87    0.000    0.000    0.000    0.000 earley_forest.py:50(__init__)
      747    0.000    0.000    0.000    0.000 earley_common.py:28(__eq__)
       46    0.000    0.000    0.001    0.000 earley.py:135(<listcomp>)
      100    0.000    0.000    0.001    0.000 load_grammar.py:443(__init__)
      100    0.000    0.000    0.000    0.000 load_grammar.py:763(<listcomp>)
      102    0.000    0.000    0.005    0.000 tree_matcher.py:42(_best_rules_from_group)
      200    0.000    0.000    0.000    0.000 visitors.py:263(__mul__)
      100    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
      100    0.000    0.000    0.000    0.000 load_grammar.py:235(_name_rule)
       80    0.000    0.000    0.001    0.000 earley_forest.py:437(_visit_node_out_helper)
      200    0.000    0.000    0.006    0.000 utils.py:269(classify_bool)
      200    0.000    0.000    0.000    0.000 load_grammar.py:201(_will_not_get_removed)
      100    0.000    0.000    0.000    0.000 load_grammar.py:240(_add_rule)
       40    0.000    0.000    0.000    0.000 earley_forest.py:603(transform_packed_node)
     1178    0.000    0.000    0.000    0.000 earley_common.py:31(__hash__)
      200    0.000    0.000    0.000    0.000 visitors.py:163(__mul__)
     1100    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
        4    0.000    0.000    0.000    0.000 utils.py:23(classify)
      200    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
      300    0.000    0.000    0.000    0.000 Sheet.py:99(get_cell_contents)
      400    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
      100    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
      702    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
      200    0.000    0.000    0.000    0.000 load_grammar.py:219(expansion)
      346    0.000    0.000    0.000    0.000 grammar_analysis.py:45(__hash__)
       89    0.000    0.000    0.000    0.000 earley_forest.py:64(add_family)
      235    0.000    0.000    0.000    0.000 utils.py:339(__init__)
        5    0.000    0.000    0.009    0.002 earley.py:262(parse)
       80    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
      200    0.000    0.000    0.001    0.000 load_grammar.py:222(expansions)
      100    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
      202    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
        2    0.000    0.000    0.005    0.003 earley.py:32(__init__)
      100    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
      604    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
      702    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
      235    0.000    0.000    0.000    0.000 {built-in method fromkeys}
        2    0.000    0.000    0.004    0.002 grammar_analysis.py:141(__init__)
      235    0.000    0.000    0.000    0.000 utils.py:348(__iter__)
       25    0.000    0.000    0.002    0.000 grammar_analysis.py:180(expand_rule)
       89    0.000    0.000    0.000    0.000 earley_forest.py:131(__init__)
      100    0.000    0.000    0.000    0.000 copyreg.py:104(__newobj__)
      200    0.000    0.000    0.000    0.000 {built-in method builtins.min}
       89    0.000    0.000    0.000    0.000 earley_common.py:25(advance)
       80    0.000    0.000    0.000    0.000 earley_forest.py:85(children)
      342    0.000    0.000    0.000    0.000 grammar_analysis.py:28(next)
      400    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
      100    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
       32    0.000    0.000    0.000    0.000 earley_forest.py:581(transform_symbol_node)
        5    0.000    0.000    0.000    0.000 earley.py:188(scan)
       40    0.000    0.000    0.000    0.000 earley_forest.py:631(visit_packed_node_in)
      100    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
      127    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
       40    0.000    0.000    0.000    0.000 earley_forest.py:422(visit_symbol_node_in)
       40    0.000    0.000    0.000    0.000 earley_forest.py:638(visit_packed_node_out)
       92    0.000    0.000    0.000    0.000 parser_frontends.py:184(match)
        3    0.000    0.000    0.007    0.002 tree_matcher.py:148(match_tree)
       40    0.000    0.000    0.000    0.000 earley_forest.py:427(visit_packed_node_in)
       40    0.000    0.000    0.000    0.000 earley_forest.py:625(visit_symbol_node_in)
      100    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
       80    0.000    0.000    0.000    0.000 earley_forest.py:145(sort_key)
        2    0.000    0.000    0.005    0.003 xearley.py:39(_parse)
      409    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
       32    0.000    0.000    0.000    0.000 tree_matcher.py:48(_match)
       32    0.000    0.000    0.000    0.000 earley_forest.py:556(_collapse_ambig)
       21    0.000    0.000    0.000    0.000 earley.py:58(<listcomp>)
      118    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
      362    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.deque' objects}
        3    0.000    0.000    0.001    0.000 earley.py:171(_parse)
       32    0.000    0.000    0.000    0.000 earley_forest.py:565(_call_rule_func)
       10    0.000    0.000    0.000    0.000 Parser.py:253(cell)
       10    0.000    0.000    0.000    0.000 reconstruct.py:33(__default__)
       40    0.000    0.000    0.000    0.000 earley_forest.py:155(children)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        5    0.000    0.000    0.004    0.001 Workbook.py:545(get_formula_value)
      132    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
       40    0.000    0.000    0.000    0.000 earley_forest.py:499(__init__)
       80    0.000    0.000    0.000    0.000 utils.py:357(__len__)
      120    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       40    0.000    0.000    0.000    0.000 earley_forest.py:70(load_paths)
        8    0.000    0.000    0.000    0.000 Cell.py:81(set_cell_value)
       40    0.000    0.000    0.000    0.000 earley_forest.py:450(visit_packed_node_out)
      100    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
      100    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
      100    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
       22    0.000    0.000    0.000    0.000 tree_matcher.py:65(parse_rulename)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:82(<setcomp>)
     15/5    0.000    0.000    0.000    0.000 visitors.py:421(_visit_tree)
      106    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
       18    0.000    0.000    0.000    0.000 lexer.py:213(_future_new)
      100    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
      106    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
       80    0.000    0.000    0.000    0.000 earley_forest.py:141(is_empty)
       10    0.000    0.000    0.000    0.000 Workbook.py:807(get_cell_value)
       15    0.000    0.000    0.000    0.000 Parser.py:40(fix_formula)
     15/5    0.000    0.000    0.000    0.000 visitors.py:444(inner)
        2    0.000    0.000    0.000    0.000 tree_matcher.py:178(<dictcomp>)
        2    0.000    0.000    0.000    0.000 earley.py:52(<setcomp>)
     15/5    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
        2    0.000    0.000    0.007    0.003 parser_frontends.py:100(parse)
       32    0.000    0.000    0.000    0.000 earley_forest.py:444(visit_symbol_node_out)
        5    0.000    0.000    0.000    0.000 Parser.py:211(mul_expr)
       13    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
       18    0.000    0.000    0.000    0.000 lexer.py:202(__new__)
       32    0.000    0.000    0.000    0.000 earley_forest.py:571(_call_ambig_func)
       80    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
        2    0.000    0.000    0.000    0.000 earley.py:53(<setcomp>)
        8    0.000    0.000    0.000    0.000 tree_matcher.py:21(__call__)
        6    0.000    0.000    0.000    0.000 Workbook.py:688(_get_sheet_name_location)
       82    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
        8    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
       89    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
       40    0.000    0.000    0.000    0.000 earley_forest.py:158(<listcomp>)
      8/4    0.000    0.000    0.007    0.002 reconstruct.py:85(_reconstruct)
        6    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
       17    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
     15/5    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
        5    0.000    0.000    0.002    0.000 earley_forest.py:535(visit)
       10    0.000    0.000    0.000    0.000 __init__.py:178(sub)
        6    0.000    0.000    0.000    0.000 Sheet.py:111(_shrink_sheet)
        5    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
       11    0.000    0.000    0.000    0.000 Workbook.py:541(get_sheet_name_from_hidden)
        5    0.000    0.000    0.000    0.000 earley.py:284(<listcomp>)
        5    0.000    0.000    0.002    0.000 earley_forest.py:397(transform)
       15    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
      100    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
       20    0.000    0.000    0.000    0.000 parse_tree_builder.py:20(__call__)
        9    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        5    0.000    0.000    0.000    0.000 earley_forest.py:523(__init__)
       25    0.000    0.000    0.000    0.000 typing.py:352(inner)
       61    0.000    0.000    0.000    0.000 grammar_analysis.py:149(<lambda>)
        3    0.000    0.000    0.000    0.000 earley.py:245(<setcomp>)
        5    0.000    0.000    0.000    0.000 Sheet.py:104(set_cell_value)
       10    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        5    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
       61    0.000    0.000    0.000    0.000 grammar_analysis.py:172(<lambda>)
        2    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
        2    0.000    0.000    0.000    0.000 Parser.py:388(CELLREF_NO_ABS)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:175(<dictcomp>)
       17    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
        2    0.000    0.000    0.000    0.000 Parser.py:381(cell)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:145(<dictcomp>)
        1    0.000    0.000    0.007    0.007 reconstruct.py:96(reconstruct)
        8    0.000    0.000    0.000    0.000 earley_forest.py:447(visit_intermediate_node_out)
       23    0.000    0.000    0.000    0.000 Cell.py:123(get_value)
        1    0.000    0.000    0.000    0.000 Workbook.py:701(add_children_cells)
       16    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        8    0.000    0.000    0.000    0.000 reconstruct.py:15(is_iter_empty)
        4    0.000    0.000    0.000    0.000 Graph.py:96(update_child)
        6    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:60(__init__)
        5    0.000    0.000    0.000    0.000 visitors.py:415(visit)
        4    0.000    0.000    0.000    0.000 <frozen codecs>:327(reset)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:166(<dictcomp>)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:163(<dictcomp>)
       22    0.000    0.000    0.000    0.000 {method 'groups' of 're.Match' objects}
       11    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
        1    0.000    0.000    0.000    0.000 utils.py:307(error_matcher)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:160(<dictcomp>)
       12    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
        2    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        6    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        3    0.000    0.000    0.000    0.000 Cell.py:46(__init__)
       17    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
        2    0.000    0.000    0.007    0.003 lark.py:640(parse)
        2    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
       12    0.000    0.000    0.000    0.000 {built-in method _heapq.heapify}
        4    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        2    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
       13    0.000    0.000    0.000    0.000 Cell.py:126(get_contents)
        9    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
        5    0.000    0.000    0.000    0.000 {method 'clear' of 'set' objects}
       10    0.000    0.000    0.000    0.000 Cell.py:133(get_children)
        6    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
       12    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
       12    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
       13    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
        2    0.000    0.000    0.000    0.000 common.py:83(__init__)
        5    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
        5    0.000    0.000    0.000    0.000 earley.py:254(<setcomp>)
        6    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        5    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
        1    0.000    0.000    0.000    0.000 Parser.py:377(__init__)
        5    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        3    0.000    0.000    0.000    0.000 tree_matcher.py:77(lex)
        2    0.000    0.000    0.000    0.000 {method 'normalize' of 'decimal.Decimal' objects}
        6    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        3    0.000    0.000    0.000    0.000 tree_matcher.py:74(__init__)
        4    0.000    0.000    0.000    0.000 <frozen codecs>:276(reset)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)



##################Running pro_move_cells2... #######################
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
for test <function pro_move_cells2 at 0x7fa3a3575440> total time: 4.899344293000004
Total Logs
         1401232 function calls (1395664 primitive calls) in 0.483 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      990    0.085    0.000    0.308    0.000 earley.py:78(predict_and_complete)
    73557    0.049    0.000    0.080    0.000 earley_common.py:9(__init__)
180177/175401    0.029    0.000    0.037    0.000 {built-in method builtins.hash}
      297    0.028    0.000    0.092    0.000 earley_forest.py:283(visit)
    54252    0.021    0.000    0.033    0.000 utils.py:345(add)
    45782    0.020    0.000    0.039    0.000 grammar.py:18(__eq__)
    97160    0.019    0.000    0.026    0.000 grammar.py:25(__hash__)
    42360    0.013    0.000    0.017    0.000 lexer.py:265(__eq__)
    28512    0.011    0.000    0.018    0.000 utils.py:342(__contains__)
    61974    0.011    0.000    0.011    0.000 earley_common.py:28(__eq__)
   122026    0.011    0.000    0.011    0.000 {built-in method builtins.isinstance}
     2079    0.007    0.000    0.035    0.000 earley.py:135(<listcomp>)
    79281    0.007    0.000    0.007    0.000 grammar.py:121(__hash__)
    82269    0.007    0.000    0.007    0.000 earley_common.py:31(__hash__)
    92756    0.007    0.000    0.007    0.000 {built-in method builtins.len}
    10791    0.007    0.000    0.007    0.000 {built-in method fromkeys}
     4059    0.006    0.000    0.017    0.000 earley_forest.py:50(__init__)
      594    0.006    0.000    0.019    0.000 xearley.py:41(scan)
    84259    0.006    0.000    0.006    0.000 {method 'append' of 'list' objects}
     3960    0.006    0.000    0.025    0.000 earley_forest.py:437(_visit_node_out_helper)
     2079    0.005    0.000    0.010    0.000 earley_forest.py:603(transform_packed_node)
    32884    0.004    0.000    0.004    0.000 {built-in method builtins.next}
     3762    0.004    0.000    0.009    0.000 {built-in method builtins.sorted}
    45249    0.004    0.000    0.004    0.000 {built-in method builtins.id}
     4257    0.004    0.000    0.010    0.000 earley_forest.py:64(add_family)
    10791    0.003    0.000    0.010    0.000 utils.py:339(__init__)
      297    0.003    0.000    0.438    0.001 earley.py:262(parse)
     4257    0.003    0.000    0.005    0.000 earley_forest.py:131(__init__)
    10593    0.003    0.000    0.004    0.000 utils.py:348(__iter__)
     1683    0.003    0.000    0.007    0.000 earley_forest.py:581(transform_symbol_node)
     4257    0.002    0.000    0.010    0.000 earley_common.py:25(advance)
     3762    0.002    0.000    0.012    0.000 earley_forest.py:85(children)
     2079    0.002    0.000    0.007    0.000 earley_forest.py:631(visit_packed_node_in)
     2079    0.002    0.000    0.004    0.000 earley_forest.py:427(visit_packed_node_in)
     2079    0.002    0.000    0.017    0.000 earley_forest.py:638(visit_packed_node_out)
     1881    0.002    0.000    0.010    0.000 earley_forest.py:422(visit_symbol_node_in)
     5940    0.002    0.000    0.003    0.000 {method 'setdefault' of 'dict' objects}
      198    0.002    0.000    0.323    0.002 xearley.py:39(_parse)
     4158    0.002    0.000    0.002    0.000 earley_forest.py:145(sort_key)
     1881    0.002    0.000    0.017    0.000 earley_forest.py:625(visit_symbol_node_in)
      396    0.002    0.000    0.229    0.001 Workbook.py:728(set_cell_contents)
      396    0.002    0.000    0.219    0.001 Workbook.py:639(recompute_cell_and_parents)
     1683    0.002    0.000    0.003    0.000 earley_forest.py:556(_collapse_ambig)
    10444    0.002    0.000    0.002    0.000 {method 'add' of 'set' objects}
5339/4898    0.002    0.000    0.002    0.000 {built-in method builtins.getattr}
    14495    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
     1683    0.001    0.000    0.003    0.000 earley_forest.py:565(_call_rule_func)
     4756    0.001    0.000    0.001    0.000 {method 'match' of 're.Pattern' objects}
    18216    0.001    0.000    0.001    0.000 {method 'pop' of 'collections.deque' objects}
        1    0.001    0.001    0.483    0.483 Workbook.py:283(transfer_cells)
     3762    0.001    0.000    0.002    0.000 parser_frontends.py:184(match)
1206/1202    0.001    0.000    0.005    0.000 visitors.py:111(_call_userfunc)
      498    0.001    0.000    0.002    0.000 utils.py:179(convert_location_to_idx)
      219    0.001    0.000    0.002    0.000 tree.py:137(iter_subtrees)
    17164    0.001    0.000    0.001    0.000 {method 'append' of 'collections.deque' objects}
     2079    0.001    0.000    0.002    0.000 earley_forest.py:155(children)
     1386    0.001    0.000    0.002    0.000 Sheet.py:93(get_cell_value)
      396    0.001    0.000    0.005    0.000 Sheet.py:60(set_cell_contents)
      198    0.001    0.000    0.417    0.002 parser_frontends.py:100(parse)
       99    0.001    0.000    0.004    0.000 earley.py:188(scan)
2038/1900    0.001    0.000    0.006    0.000 visitors.py:143(_transform_children)
     5841    0.001    0.000    0.001    0.000 {method 'remove' of 'set' objects}
     2079    0.001    0.000    0.015    0.000 earley_forest.py:450(visit_packed_node_out)
     3762    0.001    0.000    0.001    0.000 utils.py:357(__len__)
      396    0.001    0.000    0.001    0.000 {built-in method _heapq.heapify}
     1881    0.001    0.000    0.001    0.000 earley_forest.py:499(__init__)
     1881    0.001    0.000    0.001    0.000 earley_forest.py:70(load_paths)
       40    0.001    0.000    0.002    0.000 visitors.py:293(transform)
      496    0.001    0.000    0.001    0.000 utils.py:194(convert_idx_to_location)
     4158    0.001    0.000    0.001    0.000 earley_forest.py:141(is_empty)
      164    0.001    0.000    0.007    0.000 visitors.py:278(transform)
     1192    0.001    0.000    0.001    0.000 __init__.py:272(_compile)
     1683    0.001    0.000    0.010    0.000 earley_forest.py:444(visit_symbol_node_out)
      396    0.001    0.000    0.001    0.000 Graph.py:330(tarjans)
      891    0.001    0.000    0.001    0.000 lexer.py:213(_future_new)
        1    0.001    0.001    0.001    0.001 grammar_analysis.py:78(calculate_sets)
       99    0.001    0.000    0.011    0.000 earley.py:171(_parse)
      297    0.001    0.000    0.002    0.000 earley.py:284(<listcomp>)
      594    0.001    0.000    0.001    0.000 tree_matcher.py:48(_match)
      994    0.001    0.000    0.002    0.000 __init__.py:163(match)
      198    0.001    0.000    0.214    0.001 Workbook.py:545(get_formula_value)
      891    0.001    0.000    0.001    0.000 lexer.py:202(__new__)
     4743    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
     1683    0.001    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
     3960    0.001    0.000    0.001    0.000 earley_forest.py:548(_check_cycle)
     1685    0.001    0.000    0.001    0.000 utils.py:78(get_hidden_name)
      396    0.001    0.000    0.001    0.000 Cell.py:81(set_cell_value)
     3762    0.001    0.000    0.001    0.000 earley_forest.py:101(__hash__)
     2079    0.001    0.000    0.001    0.000 earley_forest.py:158(<listcomp>)
     4462    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
     4257    0.001    0.000    0.001    0.000 earley_forest.py:169(__hash__)
      954    0.001    0.000    0.001    0.000 tree.py:147(<listcomp>)
      297    0.000    0.000    0.093    0.000 earley_forest.py:535(visit)
      495    0.000    0.000    0.001    0.000 earley_forest.py:432(visit_token_node)
     1386    0.000    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
      198    0.000    0.000    0.002    0.000 Parser.py:253(cell)
      895    0.000    0.000    0.002    0.000 utils.py:131(check_valid_cell_location)
       99    0.000    0.000    0.025    0.000 tree_matcher.py:148(match_tree)
     2973    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      297    0.000    0.000    0.093    0.000 earley_forest.py:397(transform)
      396    0.000    0.000    0.230    0.001 Workbook.py:36(run_func)
     1298    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
      693    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
      297    0.000    0.000    0.001    0.000 earley_forest.py:523(__init__)
      396    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
      396    0.000    0.000    0.001    0.000 Workbook.py:715(clean_children_cells)
      198    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
      495    0.000    0.000    0.001    0.000 Workbook.py:541(get_sheet_name_from_hidden)
       99    0.000    0.000    0.001    0.000 reconstruct.py:33(__default__)
      100    0.000    0.000    0.003    0.000 Workbook.py:583(recompute_cell_value)
     1219    0.000    0.000    0.000    0.000 tree.py:61(__init__)
      198    0.000    0.000    0.001    0.000 Workbook.py:688(_get_sheet_name_location)
      396    0.000    0.000    0.001    0.000 Cell.py:65(set_contents)
      297    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
      198    0.000    0.000    0.001    0.000 {built-in method builtins.print}
      198    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
       99    0.000    0.000    0.001    0.000 Parser.py:388(CELLREF_NO_ABS)
      892    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
      725    0.000    0.000    0.000    0.000 visitors.py:171(__default__)
      198    0.000    0.000    0.001    0.000 Workbook.py:807(get_cell_value)
      201    0.000    0.000    0.000    0.000 tree.py:179(expand_kids_by_data)
      291    0.000    0.000    0.002    0.000 visitors.py:130(_call_userfunc_token)
      198    0.000    0.000    0.001    0.000 Workbook.py:779(get_cell_contents)
     1085    0.000    0.000    0.000    0.000 tree.py:66(meta)
      495    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
      198    0.000    0.000    0.001    0.000 Sheet.py:111(_shrink_sheet)
  157/111    0.000    0.000    0.003    0.000 visitors.py:155(_transform_tree)
       99    0.000    0.000    0.001    0.000 Parser.py:381(cell)
      690    0.000    0.000    0.004    0.000 visitors.py:275(_transform_tree)
        1    0.000    0.000    0.010    0.010 load_grammar.py:690(compile)
      892    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
     1684    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
       99    0.000    0.000    0.000    0.000 earley.py:245(<setcomp>)
      198    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
      198    0.000    0.000    0.001    0.000 Sheet.py:104(set_cell_value)
      396    0.000    0.000    0.000    0.000 <frozen codecs>:327(reset)
      693    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
      198    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
       99    0.000    0.000    0.028    0.000 reconstruct.py:96(reconstruct)
      198    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
      198    0.000    0.000    0.003    0.000 visitors.py:421(_visit_tree)
      198    0.000    0.000    0.003    0.000 visitors.py:444(inner)
      101    0.000    0.000    0.001    0.000 grammar_analysis.py:187(_expand_rule)
     1093    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
       99    0.000    0.000    0.000    0.000 tree_matcher.py:21(__call__)
       99    0.000    0.000    0.001    0.000 Workbook.py:701(add_children_cells)
      198    0.000    0.000    0.417    0.002 lark.py:640(parse)
       41    0.000    0.000    0.000    0.000 ast.py:54(literal_eval)
       63    0.000    0.000    0.000    0.000 functools.py:35(update_wrapper)
      198    0.000    0.000    0.028    0.000 reconstruct.py:85(_reconstruct)
   105/45    0.000    0.000    0.001    0.000 load_grammar.py:389(expansion)
      198    0.000    0.000    0.002    0.000 Parser.py:40(fix_formula)
       41    0.000    0.000    0.001    0.000 load_grammar.py:566(_literal_to_pattern)
      742    0.000    0.000    0.000    0.000 grammar.py:42(__init__)
      495    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
      198    0.000    0.000    0.000    0.000 Sheet.py:99(get_cell_contents)
      396    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
   146/84    0.000    0.000    0.001    0.000 visitors.py:342(_call_userfunc)
      198    0.000    0.000    0.000    0.000 __init__.py:178(sub)
      198    0.000    0.000    0.001    0.000 Cell.py:46(__init__)
      198    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
      198    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
       41    0.000    0.000    0.000    0.000 {built-in method builtins.compile}
      891    0.000    0.000    0.000    0.000 Cell.py:123(get_value)
      198    0.000    0.000    0.001    0.000 earley_forest.py:447(visit_intermediate_node_out)
       28    0.000    0.000    0.001    0.000 tree_matcher.py:106(_build_recons_rules)
      594    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
       41    0.000    0.000    0.000    0.000 load_grammar.py:540(eval_escaping)
       99    0.000    0.000    0.000    0.000 tree_matcher.py:65(parse_rulename)
      382    0.000    0.000    0.000    0.000 grammar_analysis.py:70(update_set)
      693    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
      996    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      355    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      198    0.000    0.000    0.003    0.000 visitors.py:415(visit)
      198    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
      155    0.000    0.000    0.000    0.000 load_grammar.py:384(_flatten)
      495    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
       35    0.000    0.000    0.000    0.000 load_grammar.py:420(expansions)
       99    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      219    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
      200    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      198    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
      496    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
       63    0.000    0.000    0.001    0.000 utils.py:275(bfs)
       99    0.000    0.000    0.000    0.000 Graph.py:96(update_child)
      594    0.000    0.000    0.000    0.000 Cell.py:126(get_contents)
      198    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
    40/11    0.000    0.000    0.002    0.000 visitors.py:362(visit)
      172    0.000    0.000    0.000    0.000 grammar_analysis.py:17(__init__)
       86    0.000    0.000    0.000    0.000 grammar.py:103(__init__)
  139/129    0.000    0.000    0.000    0.000 tree.py:134(__hash__)
      219    0.000    0.000    0.000    0.000 <frozen abc>:117(__instancecheck__)
      594    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
      200    0.000    0.000    0.000    0.000 Graph.py:137(get_parents_from_cell)
      496    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
      100    0.000    0.000    0.000    0.000 Workbook.py:576(get_cell_from_location)
      198    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
       63    0.000    0.000    0.000    0.000 visitors.py:481(__get__)
      198    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
      437    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      495    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
       35    0.000    0.000    0.000    0.000 tree_matcher.py:121(<listcomp>)
        2    0.000    0.000    0.000    0.000 utils.py:23(classify)
       49    0.000    0.000    0.000    0.000 tree_matcher.py:57(make_recons_rule)
      297    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
       99    0.000    0.000    0.000    0.000 reconstruct.py:15(is_iter_empty)
      396    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
      198    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
      111    0.000    0.000    0.003    0.000 visitors.py:159(transform)
        1    0.000    0.000    0.002    0.002 grammar_analysis.py:141(__init__)
       11    0.000    0.000    0.000    0.000 load_grammar.py:450(pattern)
        1    0.000    0.000    0.011    0.011 tree_matcher.py:89(__init__)
      396    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
       25    0.000    0.000    0.006    0.000 visitors.py:258(transform)
      198    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
       63    0.000    0.000    0.000    0.000 visitors.py:470(__init__)
      172    0.000    0.000    0.000    0.000 grammar_analysis.py:45(__hash__)
        1    0.000    0.000    0.003    0.003 earley.py:32(__init__)
        1    0.000    0.000    0.483    0.483 Workbook.py:370(move_cells)
    15/13    0.000    0.000    0.001    0.000 load_grammar.py:405(<listcomp>)
      396    0.000    0.000    0.000    0.000 <frozen codecs>:276(reset)
      297    0.000    0.000    0.000    0.000 Cell.py:133(get_children)
      168    0.000    0.000    0.000    0.000 tree_matcher.py:12(is_discarded_terminal)
       41    0.000    0.000    0.001    0.000 load_grammar.py:601(literal)
       63    0.000    0.000    0.001    0.000 visitors.py:500(_vargs_inline)
      123    0.000    0.000    0.000    0.000 load_grammar.py:537(<genexpr>)
       63    0.000    0.000    0.001    0.000 visitors.py:478(__call__)
       13    0.000    0.000    0.001    0.000 grammar_analysis.py:180(expand_rule)
      297    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
        1    0.000    0.000    0.000    0.000 load_grammar.py:793(<setcomp>)
       45    0.000    0.000    0.000    0.000 {built-in method builtins.max}
      198    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
      105    0.000    0.000    0.000    0.000 load_grammar.py:759(<genexpr>)
      315    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
        2    0.000    0.000    0.000    0.000 tree_matcher.py:28(_best_from_group)
       99    0.000    0.000    0.000    0.000 {method 'clear' of 'set' objects}
       82    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
      219    0.000    0.000    0.000    0.000 {method 'values' of 'collections.OrderedDict' objects}
       41    0.000    0.000    0.000    0.000 ast.py:33(parse)
       99    0.000    0.000    0.000    0.000 {method 'groups' of 're.Match' objects}
       99    0.000    0.000    0.000    0.000 Parser.py:377(__init__)
      170    0.000    0.000    0.000    0.000 grammar_analysis.py:28(next)
       99    0.000    0.000    0.000    0.000 tree_matcher.py:74(__init__)
       41    0.000    0.000    0.000    0.000 load_grammar.py:536(_rfind)
      198    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
       99    0.000    0.000    0.000    0.000 earley.py:254(<setcomp>)
       15    0.000    0.000    0.000    0.000 utils.py:190(<listcomp>)
       20    0.000    0.000    0.000    0.000 load_grammar.py:631(expansions)
       47    0.000    0.000    0.000    0.000 lexer.py:41(__init__)
       25    0.000    0.000    0.001    0.000 load_grammar.py:674(nr_deepcopy_tree)
      192    0.000    0.000    0.000    0.000 visitors.py:178(__default_token__)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.min}
      110    0.000    0.000    0.000    0.000 tree.py:32(__init__)
       54    0.000    0.000    0.000    0.000 lexer.py:50(__hash__)
        1    0.000    0.000    0.003    0.003 load_grammar.py:710(<listcomp>)
       99    0.000    0.000    0.000    0.000 tree_matcher.py:77(lex)
       20    0.000    0.000    0.000    0.000 load_grammar.py:637(<lambda>)
       99    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
       35    0.000    0.000    0.000    0.000 load_grammar.py:798(<lambda>)
       46    0.000    0.000    0.000    0.000 load_grammar.py:668(value)
       11    0.000    0.000    0.000    0.000 earley.py:58(<listcomp>)
      113    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
       41    0.000    0.000    0.000    0.000 {built-in method builtins.all}
       20    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
        7    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
       35    0.000    0.000    0.000    0.000 load_grammar.py:621(expansion)
       53    0.000    0.000    0.000    0.000 grammar.py:69(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:806(<setcomp>)
        2    0.000    0.000    0.000    0.000 utils.py:271(<listcomp>)
       20    0.000    0.000    0.000    0.000 lexer.py:81(to_regexp)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:115(<setcomp>)
       41    0.000    0.000    0.000    0.000 ast.py:84(_convert)
       15    0.000    0.000    0.000    0.000 utils.py:184(dedup_list)
       65    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
       14    0.000    0.000    0.000    0.000 tree_matcher.py:61(make_recons_rule_to_term)
       21    0.000    0.000    0.000    0.000 lexer.py:125(__init__)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:108(<setcomp>)
      116    0.000    0.000    0.000    0.000 tree.py:175(<lambda>)
       50    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
       20    0.000    0.000    0.000    0.000 __init__.py:253(escape)
       10    0.000    0.000    0.000    0.000 load_grammar.py:346(expr)
       35    0.000    0.000    0.000    0.000 grammar.py:22(__ne__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:446(<dictcomp>)
       25    0.000    0.000    0.000    0.000 load_grammar.py:639(<genexpr>)
        1    0.000    0.000    0.000    0.000 earley.py:52(<setcomp>)
       49    0.000    0.000    0.000    0.000 tree_matcher.py:17(__init__)
        1    0.000    0.000    0.001    0.001 load_grammar.py:693(<listcomp>)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:82(<setcomp>)
       15    0.000    0.000    0.000    0.000 tree.py:169(find_pred)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:116(<setcomp>)
        1    0.000    0.000    0.000    0.000 copy.py:66(copy)
        1    0.000    0.000    0.000    0.000 earley.py:53(<setcomp>)
       33    0.000    0.000    0.000    0.000 tree_matcher.py:44(<lambda>)
       65    0.000    0.000    0.000    0.000 typing.py:2256(cast)
        1    0.000    0.000    0.011    0.011 reconstruct.py:80(__init__)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:178(<dictcomp>)
       49    0.000    0.000    0.000    0.000 load_grammar.py:572(<genexpr>)
       21    0.000    0.000    0.000    0.000 lexer.py:70(_get_flags)
       30    0.000    0.000    0.000    0.000 load_grammar.py:617(pattern)
        1    0.000    0.000    0.001    0.001 load_grammar.py:694(<listcomp>)
       35    0.000    0.000    0.000    0.000 {built-in method builtins.any}
       15    0.000    0.000    0.000    0.000 lexer.py:53(__eq__)
       13    0.000    0.000    0.000    0.000 typing.py:352(inner)
       15    0.000    0.000    0.000    0.000 tree.py:173(find_data)
       35    0.000    0.000    0.000    0.000 load_grammar.py:431(expansion)
       30    0.000    0.000    0.000    0.000 load_grammar.py:663(value)
        1    0.000    0.000    0.000    0.000 copyreg.py:104(__newobj__)
       20    0.000    0.000    0.000    0.000 lexer.py:88(max_width)
        1    0.000    0.000    0.000    0.000 load_grammar.py:763(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
       50    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
       20    0.000    0.000    0.000    0.000 lexer.py:84(min_width)
       30    0.000    0.000    0.000    0.000 visitors.py:108(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:246(_add_recurse_rule)
        5    0.000    0.000    0.000    0.000 load_grammar.py:640(<setcomp>)
        2    0.000    0.000    0.000    0.000 tree_matcher.py:42(_best_rules_from_group)
       21    0.000    0.000    0.000    0.000 load_grammar.py:809(<lambda>)
        9    0.000    0.000    0.000    0.000 load_grammar.py:210(_args_as_int)
        6    0.000    0.000    0.000    0.000 load_grammar.py:411(alias)
        4    0.000    0.000    0.000    0.000 grammar.py:124(__eq__)
       34    0.000    0.000    0.000    0.000 grammar_analysis.py:149(<lambda>)
        1    0.000    0.000    0.000    0.000 copy.py:259(_reconstruct)
        1    0.000    0.000    0.000    0.000 load_grammar.py:375(maybe)
        1    0.000    0.000    0.000    0.000 load_grammar.py:642(expr)
       34    0.000    0.000    0.000    0.000 grammar_analysis.py:172(<lambda>)
        5    0.000    0.000    0.000    0.000 load_grammar.py:613(_make_joined_pattern)
        1    0.000    0.000    0.000    0.000 load_grammar.py:443(__init__)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:145(<dictcomp>)
        2    0.000    0.000    0.000    0.000 load_grammar.py:219(expansion)
        8    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        2    0.000    0.000    0.000    0.000 load_grammar.py:201(_will_not_get_removed)
        1    0.000    0.000    0.000    0.000 reconstruct.py:83(<dictcomp>)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:175(<dictcomp>)
        2    0.000    0.000    0.000    0.000 utils.py:269(classify_bool)
        2    0.000    0.000    0.000    0.000 visitors.py:163(__mul__)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:160(<dictcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:240(_add_rule)
        1    0.000    0.000    0.000    0.000 load_grammar.py:235(_name_rule)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:60(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:163(<dictcomp>)
        2    0.000    0.000    0.000    0.000 visitors.py:263(__mul__)
       11    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        1    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:166(<dictcomp>)
        4    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
        4    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
        2    0.000    0.000    0.000    0.000 load_grammar.py:222(expansions)
        1    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
        4    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
        1    0.000    0.000    0.000    0.000 common.py:83(__init__)
        4    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
        1    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        1    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}



##################Running pro_create_sheets... #######################
for test <function pro_create_sheets at 0x7fa3a3575580> total time: 0.035880218
Total Logs
         41849 function calls in 0.009 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     5000    0.002    0.000    0.006    0.000 random.py:367(choice)
     5000    0.002    0.000    0.003    0.000 random.py:235(_randbelow_with_getrandbits)
     5100    0.001    0.000    0.007    0.000 profiler.py:46(<genexpr>)
      100    0.001    0.000    0.001    0.000 utils.py:96(check_new_name)
    10100    0.001    0.000    0.001    0.000 {built-in method builtins.len}
      100    0.000    0.000    0.007    0.000 {method 'join' of 'str' objects}
     5147    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
     5000    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
     5000    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
      100    0.000    0.000    0.002    0.000 Workbook.py:869(new_sheet)
      100    0.000    0.000    0.007    0.000 profiler.py:43(generate_random_string)
      100    0.000    0.000    0.002    0.000 Workbook.py:36(run_func)
      100    0.000    0.000    0.000    0.000 Sheet.py:25(__init__)
      100    0.000    0.000    0.000    0.000 Graph.py:128(get_sheet_parents)
      100    0.000    0.000    0.000    0.000 Workbook.py:506(num_sheets)
      100    0.000    0.000    0.000    0.000 Workbook.py:858(recompute_sheet_parents)
      100    0.000    0.000    0.000    0.000 Graph.py:121(has_sheet)
      100    0.000    0.000    0.000    0.000 Graph.py:124(add_sheet)
      100    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
      100    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_set_cell_contents... #######################
for test <function pro_set_cell_contents at 0x7fa3a35756c0> total time: 28.817649766000002
Total Logs
         35967954 function calls in 6.861 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  4999500    2.225    0.000    4.942    0.000 random.py:367(choice)
  4999500    1.656    0.000    2.244    0.000 random.py:235(_randbelow_with_getrandbits)
  5009499    1.190    0.000    6.132    0.000 profiler.py:46(<genexpr>)
 10068993    0.479    0.000    0.479    0.000 {built-in method builtins.len}
    29997    0.394    0.000    6.526    0.000 {method 'join' of 'str' objects}
  5161033    0.318    0.000    0.318    0.000 {method 'getrandbits' of '_random.Random' objects}
  4999500    0.270    0.000    0.270    0.000 {method 'bit_length' of 'int' objects}
     9999    0.039    0.000    0.312    0.000 Workbook.py:728(set_cell_contents)
   189981    0.032    0.000    0.032    0.000 {method 'lower' of 'str' objects}
     9999    0.025    0.000    0.051    0.000 utils.py:307(error_matcher)
     9999    0.024    0.000    0.163    0.000 Sheet.py:60(set_cell_contents)
     9999    0.022    0.000    0.036    0.000 Workbook.py:639(recompute_cell_and_parents)
     9999    0.020    0.000    0.076    0.000 Cell.py:81(set_cell_value)
     9999    0.019    0.000    0.028    0.000 utils.py:179(convert_location_to_idx)
    19998    0.013    0.000    0.023    0.000 Sheet.py:93(get_cell_value)
     9999    0.010    0.000    6.529    0.001 profiler.py:43(generate_random_string)
     9999    0.009    0.000    0.012    0.000 profiler.py:25(convert_to_excel_coordinates)
     9999    0.009    0.000    0.087    0.000 Cell.py:65(set_contents)
     9999    0.009    0.000    0.321    0.000 Workbook.py:36(run_func)
    39996    0.008    0.000    0.008    0.000 {method 'get' of 'dict' objects}
     9999    0.008    0.000    0.010    0.000 Sheet.py:124(update_extent)
     9999    0.006    0.000    0.018    0.000 __init__.py:163(match)
    79992    0.006    0.000    0.006    0.000 {method 'strip' of 'str' objects}
     9999    0.006    0.000    0.011    0.000 Workbook.py:541(get_sheet_name_from_hidden)
     9999    0.006    0.000    0.094    0.000 Cell.py:46(__init__)
     9999    0.006    0.000    0.009    0.000 __init__.py:272(_compile)
    19998    0.006    0.000    0.006    0.000 {built-in method _heapq.heappush}
    19998    0.006    0.000    0.008    0.000 utils.py:78(get_hidden_name)
    19998    0.006    0.000    0.008    0.000 Sheet.py:120(get_cell)
     9999    0.005    0.000    0.023    0.000 utils.py:131(check_valid_cell_location)
     9999    0.004    0.000    0.008    0.000 Workbook.py:715(clean_children_cells)
     9999    0.004    0.000    0.004    0.000 {method 'match' of 're.Pattern' objects}
    19998    0.004    0.000    0.004    0.000 {built-in method builtins.isinstance}
     9999    0.004    0.000    0.004    0.000 Graph.py:330(tarjans)
     9999    0.003    0.000    0.004    0.000 utils.py:212(is_formula)
    19998    0.002    0.000    0.002    0.000 {built-in method builtins.ord}
     9999    0.002    0.000    0.002    0.000 Sheet.py:54(get_sheet_name)
     9999    0.001    0.000    0.001    0.000 Cell.py:123(get_value)
     9999    0.001    0.000    0.001    0.000 {method 'upper' of 'str' objects}
     9999    0.001    0.000    0.001    0.000 {built-in method builtins.divmod}
     9999    0.001    0.000    0.001    0.000 {method 'lstrip' of 'str' objects}
     9999    0.001    0.000    0.001    0.000 {method 'rstrip' of 'str' objects}
     9999    0.001    0.000    0.001    0.000 {built-in method builtins.chr}
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_update_formula_chain... #######################
for test <function pro_update_formula_chain at 0x7fa3a3575940> total time: 13.100822612000002
Total Logs
         860016 function calls in 2.960 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    2.619    2.619    2.635    2.635 Graph.py:330(tarjans)
    10000    0.038    0.000    0.313    0.000 Workbook.py:583(recompute_cell_value)
    69995    0.027    0.000    0.027    0.000 {built-in method builtins.isinstance}
    29999    0.020    0.000    0.031    0.000 Sheet.py:93(get_cell_value)
     9999    0.019    0.000    0.183    0.000 Workbook.py:545(get_formula_value)
     9999    0.017    0.000    0.096    0.000 Parser.py:253(cell)
    10000    0.012    0.000    0.025    0.000 Cell.py:81(set_cell_value)
    40000    0.011    0.000    0.015    0.000 utils.py:78(get_hidden_name)
    20000    0.011    0.000    0.011    0.000 Graph.py:137(get_parents_from_cell)
     9999    0.011    0.000    0.063    0.000 Workbook.py:807(get_cell_value)
     9999    0.009    0.000    0.148    0.000 visitors.py:421(_visit_tree)
    19998    0.009    0.000    0.015    0.000 {built-in method builtins.getattr}
        1    0.009    0.009    2.959    2.959 Workbook.py:639(recompute_cell_and_parents)
    90012    0.009    0.000    0.009    0.000 {method 'lower' of 'str' objects}
    50000    0.008    0.000    0.008    0.000 {method 'get' of 'dict' objects}
    19999    0.008    0.000    0.030    0.000 __init__.py:272(_compile)
     9999    0.008    0.000    0.034    0.000 Sheet.py:104(set_cell_value)
     9999    0.007    0.000    0.125    0.000 visitors.py:444(inner)
    10000    0.006    0.000    0.016    0.000 Workbook.py:576(get_cell_from_location)
    10000    0.006    0.000    0.010    0.000 utils.py:207(remove_exponent)
     9999    0.006    0.000    0.007    0.000 visitors.py:430(<listcomp>)
    10000    0.006    0.000    0.011    0.000 Workbook.py:541(get_sheet_name_from_hidden)
     9999    0.006    0.000    0.006    0.000 Parser.py:97(__init__)
     9999    0.006    0.000    0.106    0.000 Parser.py:40(fix_formula)
     9999    0.005    0.000    0.012    0.000 visitors.py:429(visit_children)
     9999    0.005    0.000    0.013    0.000 __init__.py:178(sub)
    10000    0.005    0.000    0.032    0.000 __init__.py:163(match)
     9999    0.004    0.000    0.005    0.000 lexer.py:265(__eq__)
    29999    0.004    0.000    0.004    0.000 Cell.py:123(get_value)
    10000    0.004    0.000    0.037    0.000 utils.py:131(check_valid_cell_location)
     9999    0.004    0.000    0.152    0.000 visitors.py:415(visit)
    40004    0.004    0.000    0.004    0.000 {built-in method builtins.len}
    19998    0.003    0.000    0.003    0.000 Cell.py:62(get_cached_formula)
     9999    0.003    0.000    0.004    0.000 utils.py:295(get_highest_precedence_error)
    10001    0.003    0.000    0.004    0.000 utils.py:212(is_formula)
    10002    0.003    0.000    0.006    0.000 Sheet.py:120(get_cell)
    10000    0.003    0.000    0.003    0.000 {method 'match' of 're.Pattern' objects}
    19999    0.003    0.000    0.003    0.000 Cell.py:126(get_contents)
    50000    0.003    0.000    0.003    0.000 {method 'append' of 'list' objects}
     9999    0.002    0.000    0.002    0.000 {method 'sub' of 're.Pattern' objects}
    30000    0.002    0.000    0.002    0.000 {method 'pop' of 'list' objects}
    10000    0.002    0.000    0.002    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
    10000    0.002    0.000    0.002    0.000 {method 'quantize' of 'decimal.Decimal' objects}
    10000    0.002    0.000    0.002    0.000 Cell.py:133(get_children)
     9999    0.001    0.000    0.001    0.000 Cell.py:129(set_children)
     9999    0.001    0.000    0.001    0.000 Parser.py:108(get_cell_refs)
    10000    0.001    0.000    0.001    0.000 Sheet.py:54(get_sheet_name)
     9999    0.001    0.000    0.001    0.000 {method 'add' of 'set' objects}
    10000    0.001    0.000    0.001    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.001    0.001    2.959    2.959 Workbook.py:728(set_cell_contents)
        1    0.000    0.000    2.960    2.960 Workbook.py:36(run_func)
        1    0.000    0.000    0.000    0.000 utils.py:179(convert_location_to_idx)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 utils.py:307(error_matcher)
        1    0.000    0.000    0.000    0.000 Sheet.py:60(set_cell_contents)
        1    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
        1    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        1    0.000    0.000    0.000    0.000 Workbook.py:715(clean_children_cells)
        9    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        1    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}



##################Running pro_write_formula_chain... #######################
for test <function pro_write_formula_chain at 0x7fa3a35758a0> total time: 631.8741667059999
Total Logs
         175371371 function calls (174551453 primitive calls) in 60.389 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
   158874   11.053    0.000   40.983    0.000 earley.py:78(predict_and_complete)
  9029097    6.167    0.000   10.671    0.000 earley_common.py:9(__init__)
22497750/21877812    4.259    0.000    5.339    0.000 {built-in method builtins.hash}
     9999    3.803    0.000   12.656    0.001 earley_forest.py:283(visit)
  7289271    2.906    0.000    4.387    0.000 utils.py:345(add)
  5629437    2.554    0.000    4.951    0.000 grammar.py:18(__eq__)
 12198780    2.447    0.000    3.359    0.000 grammar.py:25(__hash__)
   148875    1.658    0.000    4.764    0.000 xearley.py:41(scan)
  5269473    1.636    0.000    2.082    0.000 lexer.py:265(__eq__)
  3429657    1.414    0.000    2.195    0.000 utils.py:342(__contains__)
 14698530    1.282    0.000    1.282    0.000 {built-in method builtins.isinstance}
  7359264    1.277    0.000    1.299    0.000 earley_common.py:28(__eq__)
   299970    1.036    0.000    4.882    0.000 earley.py:135(<listcomp>)
   579942    1.006    0.000    2.246    0.000 earley_forest.py:50(__init__)
 11288871    0.986    0.000    0.986    0.000 earley_common.py:31(__hash__)
  9759024    0.932    0.000    0.932    0.000 grammar.py:121(__hash__)
 11108889    0.828    0.000    0.828    0.000 {built-in method builtins.len}
   559944    0.804    0.000    3.315    0.000 earley_forest.py:437(_visit_node_out_helper)
 10516728    0.799    0.000    0.799    0.000 {method 'append' of 'list' objects}
   279972    0.756    0.000    1.431    0.000 earley_forest.py:603(transform_packed_node)
  1626507    0.749    0.000    0.898    0.000 {built-in method fromkeys}
  4779522    0.603    0.000    0.603    0.000 {built-in method builtins.next}
  1626507    0.595    0.000    1.493    0.000 utils.py:339(__init__)
  6229377    0.521    0.000    0.521    0.000 {built-in method builtins.id}
   559944    0.519    0.000    1.232    0.000 {built-in method builtins.sorted}
   599940    0.497    0.000    1.514    0.000 earley_forest.py:64(add_family)
  1666503    0.417    0.000    0.585    0.000 utils.py:348(__iter__)
  1318758    0.396    0.000    0.700    0.000 parser_frontends.py:184(match)
   599940    0.393    0.000    0.723    0.000 earley_forest.py:131(__init__)
   599940    0.337    0.000    1.686    0.000 earley_common.py:25(advance)
     9999    0.332    0.000   46.080    0.005 xearley.py:39(_parse)
   559944    0.327    0.000    1.779    0.000 earley_forest.py:85(children)
  1338756    0.318    0.000    0.318    0.000 {method 'match' of 're.Pattern' objects}
   209979    0.313    0.000    0.776    0.000 earley_forest.py:581(transform_symbol_node)
   279972    0.306    0.000    0.904    0.000 earley_forest.py:631(visit_packed_node_in)
   279972    0.277    0.000    1.439    0.000 earley_forest.py:422(visit_symbol_node_in)
   859914    0.268    0.000    0.377    0.000 {method 'setdefault' of 'dict' objects}
   279972    0.263    0.000    0.550    0.000 earley_forest.py:427(visit_packed_node_in)
   279972    0.260    0.000    2.352    0.000 earley_forest.py:638(visit_packed_node_out)
   559944    0.256    0.000    0.350    0.000 earley_forest.py:145(sort_key)
   279972    0.230    0.000    2.355    0.000 earley_forest.py:625(visit_symbol_node_in)
  2226447    0.229    0.000    0.229    0.000 {built-in method builtins.iter}
  2579742    0.194    0.000    0.194    0.000 {method 'pop' of 'collections.deque' objects}
  1409859    0.184    0.000    0.184    0.000 {method 'add' of 'set' objects}
   209979    0.169    0.000    0.284    0.000 earley_forest.py:556(_collapse_ambig)
   209979    0.167    0.000    0.326    0.000 earley_forest.py:565(_call_rule_func)
  2489751    0.164    0.000    0.164    0.000 {method 'append' of 'collections.deque' objects}
   279972    0.144    0.000    0.216    0.000 earley_forest.py:155(children)
   559944    0.128    0.000    0.185    0.000 utils.py:357(__len__)
   279972    0.125    0.000    0.130    0.000 earley_forest.py:499(__init__)
   839916    0.123    0.000    0.123    0.000 {method 'remove' of 'set' objects}
   279972    0.118    0.000    0.219    0.000 earley_forest.py:70(load_paths)
   279972    0.112    0.000    2.043    0.000 earley_forest.py:450(visit_packed_node_out)
   559944    0.094    0.000    0.094    0.000 earley_forest.py:141(is_empty)
    69993    0.091    0.000    0.127    0.000 earley_forest.py:591(transform_intermediate_node)
     9999    0.090    0.000   59.067    0.006 earley.py:262(parse)
     9999    0.084    0.000   59.185    0.006 parser_frontends.py:100(parse)
   599940    0.082    0.000    0.082    0.000 earley_forest.py:101(__hash__)
   209979    0.081    0.000    1.212    0.000 earley_forest.py:444(visit_symbol_node_out)
     9999    0.079    0.000   60.110    0.006 Workbook.py:639(recompute_cell_and_parents)
   199980    0.075    0.000    0.091    0.000 {built-in method builtins.getattr}
   559944    0.074    0.000    0.074    0.000 earley_forest.py:548(_check_cycle)
    89991    0.074    0.000    0.100    0.000 lexer.py:213(_future_new)
   279972    0.072    0.000    0.072    0.000 earley_forest.py:158(<listcomp>)
   209979    0.070    0.000    0.091    0.000 earley_forest.py:571(_call_ambig_func)
   599940    0.070    0.000    0.070    0.000 earley_forest.py:169(__hash__)
    79992    0.067    0.000    0.084    0.000 earley_forest.py:432(visit_token_node)
   169983    0.067    0.000    0.088    0.000 parse_tree_builder.py:20(__call__)
   559944    0.064    0.000    0.064    0.000 {method 'pop' of 'list' objects}
    89991    0.063    0.000    0.164    0.000 lexer.py:202(__new__)
59994/9999    0.052    0.000    0.567    0.000 visitors.py:421(_visit_tree)
    89991    0.051    0.000    0.060    0.000 earley_forest.py:193(__init__)
59994/9999    0.049    0.000    0.471    0.000 visitors.py:430(<listcomp>)
59994/9999    0.048    0.000    0.528    0.000 visitors.py:444(inner)
    59994    0.045    0.000    0.294    0.000 Parser.py:40(fix_formula)
    49995    0.043    0.000    0.072    0.000 Sheet.py:93(get_cell_value)
     9999    0.042    0.000   60.356    0.006 Workbook.py:728(set_cell_contents)
     9999    0.041    0.000   59.831    0.006 Workbook.py:545(get_formula_value)
   178872    0.039    0.000    0.039    0.000 utils.py:354(__bool__)
59994/9999    0.035    0.000    0.479    0.000 visitors.py:429(visit_children)
     9999    0.033    0.000    0.133    0.000 Sheet.py:60(set_cell_contents)
    29997    0.033    0.000    0.098    0.000 xearley.py:88(<listcomp>)
     9999    0.032    0.000    0.143    0.000 Parser.py:253(cell)
    69993    0.031    0.000    0.284    0.000 earley_forest.py:447(visit_intermediate_node_out)
     9999    0.031    0.000    0.047    0.000 utils.py:179(convert_location_to_idx)
    59994    0.031    0.000    0.042    0.000 utils.py:295(get_highest_precedence_error)
    29997    0.029    0.000    0.029    0.000 xearley.py:85(<listcomp>)
     9999    0.028    0.000   12.684    0.001 earley_forest.py:535(visit)
    89991    0.027    0.000    0.027    0.000 {built-in method __new__ of type object at 0x860f60}
    19998    0.026    0.000    0.048    0.000 Cell.py:81(set_cell_value)
   209979    0.026    0.000    0.026    0.000 {built-in method builtins.hasattr}
    59994    0.023    0.000    0.023    0.000 tree.py:61(__init__)
     9999    0.023    0.000    0.088    0.000 earley.py:284(<listcomp>)
    19998    0.023    0.000    0.032    0.000 parse_tree_builder.py:145(__call__)
    89991    0.022    0.000    0.022    0.000 {method 'get' of 'dict' objects}
    29997    0.021    0.000    0.029    0.000 __init__.py:272(_compile)
     9999    0.020    0.000    0.032    0.000 Workbook.py:688(_get_sheet_name_location)
     9999    0.019    0.000    0.026    0.000 parser_frontends.py:96(_make_lexer_thread)
     9999    0.019    0.000    0.074    0.000 Workbook.py:807(get_cell_value)
     9999    0.019    0.000    0.024    0.000 Parser.py:211(mul_expr)
   139986    0.018    0.000    0.018    0.000 {method 'lower' of 'str' objects}
     9999    0.016    0.000   12.702    0.001 earley_forest.py:397(transform)
   149985    0.016    0.000    0.016    0.000 {method 'end' of 're.Match' objects}
    19998    0.016    0.000    0.016    0.000 Parser.py:243(number)
     9999    0.016    0.000    0.022    0.000 Parser.py:169(add_expr)
    89991    0.016    0.000    0.016    0.000 {method 'group' of 're.Match' objects}
     9999    0.015    0.000    0.066    0.000 Workbook.py:701(add_children_cells)
     9999    0.015    0.000    0.030    0.000 earley_forest.py:523(__init__)
     9999    0.015    0.000    0.019    0.000 profiler.py:25(convert_to_excel_coordinates)
    39996    0.015    0.000    0.020    0.000 utils.py:78(get_hidden_name)
     9999    0.015    0.000   60.370    0.006 Workbook.py:36(run_func)
     9999    0.015    0.000    0.019    0.000 Graph.py:68(add_connection)
    29997    0.014    0.000    0.014    0.000 {method 'join' of 'str' objects}
     9999    0.013    0.000    0.013    0.000 Parser.py:97(__init__)
    89991    0.013    0.000    0.013    0.000 earley_forest.py:207(__hash__)
    19998    0.013    0.000    0.055    0.000 utils.py:131(check_valid_cell_location)
    19998    0.013    0.000    0.042    0.000 __init__.py:163(match)
     9999    0.013    0.000    0.057    0.000 Sheet.py:104(set_cell_value)
     9999    0.012    0.000    0.014    0.000 earley_forest.py:390(__init__)
     9999    0.012    0.000    0.014    0.000 Sheet.py:124(update_extent)
     9999    0.011    0.000    0.018    0.000 utils.py:207(remove_exponent)
     9999    0.011    0.000    0.020    0.000 Cell.py:65(set_contents)
     9999    0.010    0.000    0.031    0.000 __init__.py:178(sub)
    19998    0.010    0.000    0.010    0.000 {built-in method _heapq.heappush}
    59994    0.009    0.000    0.009    0.000 {method 'extend' of 'list' objects}
     9999    0.009    0.000   59.195    0.006 lark.py:640(parse)
    79992    0.009    0.000    0.009    0.000 earley_forest.py:418(transform_token_node)
     9999    0.009    0.000    0.017    0.000 Workbook.py:541(get_sheet_name_from_hidden)
     9999    0.009    0.000    0.009    0.000 Graph.py:330(tarjans)
     9999    0.008    0.000    0.009    0.000 parser_frontends.py:86(_verify_start)
     9999    0.007    0.000    0.027    0.000 Cell.py:46(__init__)
     9999    0.007    0.000    0.007    0.000 {method 'sub' of 're.Pattern' objects}
    19998    0.006    0.000    0.009    0.000 Sheet.py:120(get_cell)
     9999    0.006    0.000    0.006    0.000 {built-in method _abc._abc_instancecheck}
     9999    0.006    0.000    0.010    0.000 Workbook.py:715(clean_children_cells)
     9999    0.006    0.000    0.573    0.000 visitors.py:415(visit)
    39996    0.006    0.000    0.006    0.000 Cell.py:123(get_value)
     9999    0.005    0.000    0.005    0.000 lark.py:220(__getattr__)
     9999    0.004    0.000    0.006    0.000 utils.py:212(is_formula)
     9999    0.004    0.000    0.004    0.000 {method 'update' of 'dict' objects}
     9999    0.004    0.000    0.004    0.000 {method 'split' of 'str' objects}
     9999    0.004    0.000    0.004    0.000 grammar.py:15(__init__)
     9999    0.004    0.000    0.010    0.000 <frozen abc>:117(__instancecheck__)
     9999    0.003    0.000    0.003    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
     9909    0.003    0.000    0.003    0.000 {method 'quantize' of 'decimal.Decimal' objects}
     9999    0.003    0.000    0.003    0.000 Sheet.py:54(get_sheet_name)
     9999    0.003    0.000    0.003    0.000 Cell.py:129(set_children)
    19998    0.003    0.000    0.003    0.000 {method 'strip' of 'str' objects}
    19998    0.002    0.000    0.002    0.000 Cell.py:126(get_contents)
    19998    0.002    0.000    0.002    0.000 {built-in method builtins.ord}
     9999    0.002    0.000    0.002    0.000 Cell.py:59(cache_formula)
     9999    0.002    0.000    0.002    0.000 {built-in method builtins.divmod}
     9999    0.002    0.000    0.002    0.000 earley_forest.py:232(__init__)
     9999    0.002    0.000    0.002    0.000 Parser.py:108(get_cell_refs)
     9999    0.002    0.000    0.002    0.000 {method 'upper' of 'str' objects}
     9999    0.002    0.000    0.002    0.000 Parser.py:111(parens)
     9999    0.001    0.000    0.001    0.000 {method 'lstrip' of 'str' objects}
     9999    0.001    0.000    0.001    0.000 {built-in method builtins.chr}
     9999    0.001    0.000    0.001    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
     9999    0.001    0.000    0.001    0.000 Cell.py:62(get_cached_formula)
     9999    0.001    0.000    0.001    0.000 {method 'rstrip' of 'str' objects}
       90    0.000    0.000    0.000    0.000 {method 'normalize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_cyle_formula_chain... #######################
for test <function pro_cyle_formula_chain at 0x7fa3a3575a80> total time: 11.565600763999994
Total Logs
         286521 function calls (286500 primitive calls) in 2.866 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    2.783    2.783    2.802    2.802 Graph.py:330(tarjans)
        1    0.018    0.018    0.061    0.061 Workbook.py:617(_set_cycle_detected)
    20005    0.018    0.000    0.019    0.000 utils.py:78(get_hidden_name)
    20000    0.010    0.000    0.010    0.000 Graph.py:137(get_parents_from_cell)
    10000    0.005    0.000    0.025    0.000 Workbook.py:576(get_cell_from_location)
    10002    0.005    0.000    0.008    0.000 Workbook.py:541(get_sheet_name_from_hidden)
    10002    0.004    0.000    0.005    0.000 Cell.py:81(set_cell_value)
    30001    0.004    0.000    0.004    0.000 {built-in method builtins.min}
    30019    0.002    0.000    0.002    0.000 {method 'pop' of 'list' objects}
    10002    0.002    0.000    0.004    0.000 Sheet.py:120(get_cell)
    30544    0.002    0.000    0.002    0.000 {built-in method builtins.isinstance}
    10005    0.002    0.000    0.002    0.000 Cell.py:123(get_value)
    40407    0.002    0.000    0.002    0.000 {method 'append' of 'list' objects}
    10009    0.002    0.000    0.002    0.000 {method 'get' of 'dict' objects}
    10000    0.001    0.000    0.001    0.000 CellError.py:11(__init__)
    20015    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
    10002    0.001    0.000    0.001    0.000 Cell.py:126(get_contents)
    10002    0.001    0.000    0.001    0.000 Sheet.py:54(get_sheet_name)
        1    0.001    0.001    2.866    2.866 Workbook.py:639(recompute_cell_and_parents)
        4    0.000    0.000    0.001    0.000 earley.py:78(predict_and_complete)
        1    0.000    0.000    2.866    2.866 Workbook.py:728(set_cell_contents)
        1    0.000    0.000    2.866    2.866 Workbook.py:36(run_func)
      362    0.000    0.000    0.000    0.000 earley_common.py:9(__init__)
  865/844    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
        1    0.000    0.000    0.000    0.000 earley_forest.py:283(visit)
      264    0.000    0.000    0.000    0.000 utils.py:345(add)
      215    0.000    0.000    0.000    0.000 grammar.py:18(__eq__)
      459    0.000    0.000    0.000    0.000 grammar.py:25(__hash__)
      203    0.000    0.000    0.000    0.000 lexer.py:265(__eq__)
      144    0.000    0.000    0.000    0.000 utils.py:342(__contains__)
      309    0.000    0.000    0.000    0.000 earley_common.py:28(__eq__)
        3    0.000    0.000    0.000    0.000 xearley.py:41(scan)
       10    0.000    0.000    0.000    0.000 earley.py:135(<listcomp>)
      403    0.000    0.000    0.000    0.000 earley_common.py:31(__hash__)
      389    0.000    0.000    0.000    0.000 grammar.py:121(__hash__)
       20    0.000    0.000    0.000    0.000 earley_forest.py:50(__init__)
      439    0.000    0.000    0.000    0.000 {built-in method builtins.len}
       19    0.000    0.000    0.000    0.000 earley_forest.py:437(_visit_node_out_helper)
       10    0.000    0.000    0.000    0.000 earley_forest.py:603(transform_packed_node)
      156    0.000    0.000    0.000    0.000 {built-in method builtins.next}
       18    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
       51    0.000    0.000    0.000    0.000 utils.py:339(__init__)
      209    0.000    0.000    0.000    0.000 {built-in method builtins.id}
       21    0.000    0.000    0.000    0.000 earley_forest.py:64(add_family)
       21    0.000    0.000    0.000    0.000 earley_forest.py:131(__init__)
       48    0.000    0.000    0.000    0.000 utils.py:348(__iter__)
       18    0.000    0.000    0.000    0.000 earley_forest.py:85(children)
       21    0.000    0.000    0.000    0.000 earley_common.py:25(advance)
        8    0.000    0.000    0.000    0.000 earley_forest.py:581(transform_symbol_node)
       51    0.000    0.000    0.000    0.000 {built-in method fromkeys}
       10    0.000    0.000    0.000    0.000 earley_forest.py:631(visit_packed_node_in)
        1    0.000    0.000    0.002    0.002 earley.py:262(parse)
        1    0.000    0.000    0.002    0.002 xearley.py:39(_parse)
        8    0.000    0.000    0.000    0.000 earley_forest.py:565(_call_rule_func)
       10    0.000    0.000    0.000    0.000 earley_forest.py:427(visit_packed_node_in)
        9    0.000    0.000    0.000    0.000 earley_forest.py:422(visit_symbol_node_in)
       29    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
       10    0.000    0.000    0.000    0.000 earley_forest.py:638(visit_packed_node_out)
       20    0.000    0.000    0.000    0.000 earley_forest.py:145(sort_key)
        8    0.000    0.000    0.000    0.000 earley_forest.py:556(_collapse_ambig)
        9    0.000    0.000    0.000    0.000 earley_forest.py:625(visit_symbol_node_in)
       49    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
       66    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 utils.py:179(convert_location_to_idx)
       86    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.deque' objects}
       19    0.000    0.000    0.000    0.000 parser_frontends.py:184(match)
        5    0.000    0.000    0.000    0.000 Sheet.py:93(get_cell_value)
        3    0.000    0.000    0.000    0.000 lexer.py:213(_future_new)
       21    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
       10    0.000    0.000    0.000    0.000 earley_forest.py:155(children)
        1    0.000    0.000    0.002    0.002 Workbook.py:545(get_formula_value)
       83    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
        1    0.000    0.000    0.002    0.002 parser_frontends.py:100(parse)
       10    0.000    0.000    0.000    0.000 earley_forest.py:450(visit_packed_node_out)
       18    0.000    0.000    0.000    0.000 utils.py:357(__len__)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        9    0.000    0.000    0.000    0.000 earley_forest.py:499(__init__)
        9    0.000    0.000    0.000    0.000 earley_forest.py:70(load_paths)
       28    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
        3    0.000    0.000    0.000    0.000 __init__.py:272(_compile)
        2    0.000    0.000    0.000    0.000 __init__.py:163(match)
        1    0.000    0.000    0.000    0.000 Parser.py:253(cell)
       20    0.000    0.000    0.000    0.000 earley_forest.py:141(is_empty)
        1    0.000    0.000    0.000    0.000 Sheet.py:60(set_cell_contents)
        1    0.000    0.000    0.000    0.000 earley.py:284(<listcomp>)
        8    0.000    0.000    0.000    0.000 earley_forest.py:444(visit_symbol_node_out)
        8    0.000    0.000    0.000    0.000 earley_forest.py:571(_call_ambig_func)
        1    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
       10    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
        1    0.000    0.000    0.000    0.000 Workbook.py:688(_get_sheet_name_location)
       10    0.000    0.000    0.000    0.000 earley_forest.py:158(<listcomp>)
        2    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
        3    0.000    0.000    0.000    0.000 lexer.py:202(__new__)
       19    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
        1    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        7    0.000    0.000    0.000    0.000 parse_tree_builder.py:20(__call__)
       21    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
       19    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
        1    0.000    0.000    0.000    0.000 earley_forest.py:523(__init__)
        2    0.000    0.000    0.000    0.000 utils.py:131(check_valid_cell_location)
        3    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
        2    0.000    0.000    0.000    0.000 <frozen abc>:117(__instancecheck__)
        1    0.000    0.000    0.000    0.000 Workbook.py:701(add_children_cells)
        1    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        1    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
        1    0.000    0.000    0.000    0.000 earley_forest.py:535(visit)
        1    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
        1    0.000    0.000    0.000    0.000 Workbook.py:715(clean_children_cells)
        1    0.000    0.000    0.000    0.000 __init__.py:178(sub)
        1    0.000    0.000    0.000    0.000 earley_forest.py:397(transform)
        1    0.000    0.000    0.000    0.000 Workbook.py:807(get_cell_value)
        1    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
        1    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
        1    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
        1    0.000    0.000    0.002    0.002 lark.py:640(parse)
        1    0.000    0.000    0.000    0.000 tree.py:61(__init__)
        1    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
        1    0.000    0.000    0.000    0.000 Sheet.py:104(set_cell_value)
        1    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
        1    0.000    0.000    0.000    0.000 visitors.py:421(_visit_tree)
        1    0.000    0.000    0.000    0.000 Parser.py:40(fix_formula)
        1    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
        8    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
        1    0.000    0.000    0.000    0.000 visitors.py:444(inner)
        3    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        3    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
        3    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
        2    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000    0.000    0.000 earley_forest.py:447(visit_intermediate_node_out)
        1    0.000    0.000    0.000    0.000 visitors.py:415(visit)
        1    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        3    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
        1    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
        1    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
        1    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
        3    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
        1    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
        3    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        3    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 Cell.py:133(get_children)
        2    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
        1    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
        1    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        1    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
        1    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}



##################Running pro_update_formula_pyramid... #######################
for test <function pro_update_formula_pyramid at 0x7fa3a3575bc0> total time: 0.0010095050000000002
Total Logs
         229 function calls (217 primitive calls) in 0.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
        2    0.000    0.000    0.000    0.000 Cell.py:81(set_cell_value)
        1    0.000    0.000    0.000    0.000 Workbook.py:728(set_cell_contents)
        2    0.000    0.000    0.000    0.000 Workbook.py:583(recompute_cell_value)
        8    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
      4/1    0.000    0.000    0.000    0.000 visitors.py:421(_visit_tree)
        1    0.000    0.000    0.000    0.000 Workbook.py:639(recompute_cell_and_parents)
        1    0.000    0.000    0.000    0.000 Parser.py:253(cell)
        5    0.000    0.000    0.000    0.000 Sheet.py:93(get_cell_value)
        1    0.000    0.000    0.000    0.000 utils.py:179(convert_location_to_idx)
      4/1    0.000    0.000    0.000    0.000 visitors.py:444(inner)
        3    0.000    0.000    0.000    0.000 __init__.py:272(_compile)
      4/1    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
        2    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        1    0.000    0.000    0.000    0.000 Workbook.py:545(get_formula_value)
        4    0.000    0.000    0.000    0.000 Parser.py:40(fix_formula)
        2    0.000    0.000    0.000    0.000 __init__.py:163(match)
        1    0.000    0.000    0.000    0.000 Parser.py:211(mul_expr)
        1    0.000    0.000    0.000    0.000 Sheet.py:60(set_cell_contents)
      4/1    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
        8    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
        1    0.000    0.000    0.000    0.000 utils.py:307(error_matcher)
       21    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
       30    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        4    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
        1    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
        1    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        3    0.000    0.000    0.000    0.000 lexer.py:265(__eq__)
        1    0.000    0.000    0.000    0.000 Workbook.py:36(run_func)
        1    0.000    0.000    0.000    0.000 __init__.py:178(sub)
        2    0.000    0.000    0.000    0.000 utils.py:131(check_valid_cell_location)
        1    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
        1    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        2    0.000    0.000    0.000    0.000 Workbook.py:541(get_sheet_name_from_hidden)
        1    0.000    0.000    0.000    0.000 Workbook.py:715(clean_children_cells)
        2    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        4    0.000    0.000    0.000    0.000 Graph.py:137(get_parents_from_cell)
       10    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 Workbook.py:807(get_cell_value)
        2    0.000    0.000    0.000    0.000 Workbook.py:576(get_cell_from_location)
        2    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        4    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
        3    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
       10    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 Sheet.py:104(set_cell_value)
        2    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        6    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
       12    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        5    0.000    0.000    0.000    0.000 Cell.py:123(get_value)
        9    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 visitors.py:415(visit)
        2    0.000    0.000    0.000    0.000 Cell.py:133(get_children)
        1    0.000    0.000    0.000    0.000 Parser.py:243(number)
        2    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        2    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
        2    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        3    0.000    0.000    0.000    0.000 Cell.py:126(get_contents)
        2    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        1    0.000    0.000    0.000    0.000 Parser.py:111(parens)
        1    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
        1    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}



##################Running pro_write_formula_pyramid... #######################
for test <function pro_write_formula_pyramid at 0x7fa3a3575d00> total time: 2.332519416
Total Logs
         792235 function calls (791977 primitive calls) in 0.237 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      401    0.067    0.000    0.213    0.001 earley.py:78(predict_and_complete)
    68211    0.042    0.000    0.069    0.000 earley_common.py:9(__init__)
149508/149262    0.022    0.000    0.028    0.000 {built-in method builtins.hash}
    45585    0.017    0.000    0.027    0.000 utils.py:345(add)
    79530    0.014    0.000    0.020    0.000 grammar.py:25(__hash__)
    26767    0.010    0.000    0.016    0.000 utils.py:342(__contains__)
    61023    0.010    0.000    0.010    0.000 earley_common.py:28(__eq__)
    75516    0.006    0.000    0.006    0.000 earley_common.py:31(__hash__)
    70326    0.006    0.000    0.006    0.000 grammar.py:121(__hash__)
      400    0.005    0.000    0.016    0.000 xearley.py:41(scan)
     9786    0.004    0.000    0.008    0.000 grammar.py:18(__eq__)
    68615    0.004    0.000    0.004    0.000 {method 'append' of 'list' objects}
    70044    0.004    0.000    0.004    0.000 {built-in method builtins.len}
     5836    0.002    0.000    0.003    0.000 lexer.py:265(__eq__)
      732    0.002    0.000    0.003    0.000 earley_forest.py:50(__init__)
    17294    0.002    0.000    0.002    0.000 {built-in method builtins.isinstance}
     2862    0.001    0.000    0.002    0.000 {built-in method fromkeys}
     3906    0.001    0.000    0.002    0.000 parser_frontends.py:184(match)
       99    0.001    0.000    0.230    0.002 xearley.py:39(_parse)
     4006    0.001    0.000    0.001    0.000 {method 'match' of 're.Pattern' objects}
     2862    0.001    0.000    0.003    0.000 utils.py:339(__init__)
      301    0.001    0.000    0.001    0.000 lexer.py:202(__new__)
      734    0.001    0.000    0.002    0.000 earley_forest.py:64(add_family)
       99    0.001    0.000    0.235    0.002 Workbook.py:639(recompute_cell_and_parents)
      122    0.001    0.000    0.002    0.000 earley.py:135(<listcomp>)
      734    0.000    0.000    0.001    0.000 earley_forest.py:131(__init__)
       99    0.000    0.000    0.232    0.002 earley.py:262(parse)
     1784    0.000    0.000    0.001    0.000 utils.py:348(__iter__)
       99    0.000    0.000    0.233    0.002 Workbook.py:545(get_formula_value)
      734    0.000    0.000    0.002    0.000 earley_common.py:25(advance)
      397    0.000    0.000    0.001    0.000 Sheet.py:93(get_cell_value)
       99    0.000    0.000    0.237    0.002 Workbook.py:728(set_cell_contents)
       98    0.000    0.000    0.000    0.000 exceptions.py:55(get_context)
       99    0.000    0.000    0.001    0.000 Sheet.py:60(set_cell_contents)
     3833    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.deque' objects}
       98    0.000    0.000    0.001    0.000 exceptions.py:179(__init__)
        1    0.000    0.000    0.001    0.001 earley_forest.py:283(visit)
      754    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
      142    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
       99    0.000    0.000    0.000    0.000 utils.py:179(convert_location_to_idx)
      301    0.000    0.000    0.000    0.000 lexer.py:213(_future_new)
     3532    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
     1828    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
       99    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
       99    0.000    0.000    0.232    0.002 parser_frontends.py:100(parse)
      301    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
       98    0.000    0.000    0.000    0.000 xearley.py:125(<setcomp>)
      198    0.000    0.000    0.000    0.000 Cell.py:81(set_cell_value)
       99    0.000    0.000    0.000    0.000 profiler.py:25(convert_to_excel_coordinates)
      298    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
      499    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
      793    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
       99    0.000    0.000    0.237    0.002 Workbook.py:36(run_func)
       99    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
       99    0.000    0.000    0.000    0.000 Sheet.py:104(set_cell_value)
       99    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
       99    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
       99    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
      700    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
      301    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
       99    0.000    0.000    0.000    0.000 Workbook.py:541(get_sheet_name_from_hidden)
      101    0.000    0.000    0.000    0.000 __init__.py:272(_compile)
      734    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
      490    0.000    0.000    0.000    0.000 xearley.py:126(<genexpr>)
      100    0.000    0.000    0.000    0.000 __init__.py:163(match)
      200    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
      392    0.000    0.000    0.000    0.000 xearley.py:124(<lambda>)
       99    0.000    0.000    0.232    0.002 lark.py:640(parse)
      100    0.000    0.000    0.000    0.000 utils.py:131(check_valid_cell_location)
       99    0.000    0.000    0.000    0.000 Cell.py:46(__init__)
       23    0.000    0.000    0.000    0.000 earley_forest.py:603(transform_packed_node)
      198    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
       45    0.000    0.000    0.000    0.000 earley_forest.py:437(_visit_node_out_helper)
      439    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
       99    0.000    0.000    0.000    0.000 Workbook.py:715(clean_children_cells)
      198    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
       99    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
      301    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      380    0.000    0.000    0.000    0.000 {built-in method builtins.next}
       99    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
      301    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
      298    0.000    0.000    0.000    0.000 Cell.py:123(get_value)
       99    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      296    0.000    0.000    0.000    0.000 Cell.py:126(get_contents)
      499    0.000    0.000    0.000    0.000 {built-in method builtins.id}
      303    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
       98    0.000    0.000    0.000    0.000 {built-in method builtins.max}
      142    0.000    0.000    0.000    0.000 utils.py:357(__len__)
       98    0.000    0.000    0.000    0.000 CellError.py:11(__init__)
       44    0.000    0.000    0.000    0.000 earley_forest.py:85(children)
       98    0.000    0.000    0.000    0.000 {method 'rsplit' of 'str' objects}
       17    0.000    0.000    0.000    0.000 earley_forest.py:581(transform_symbol_node)
       99    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      198    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
       23    0.000    0.000    0.000    0.000 earley_forest.py:631(visit_packed_node_in)
       99    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
       22    0.000    0.000    0.000    0.000 earley_forest.py:422(visit_symbol_node_in)
       99    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
       99    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
       23    0.000    0.000    0.000    0.000 earley_forest.py:427(visit_packed_node_in)
       46    0.000    0.000    0.000    0.000 earley_forest.py:145(sort_key)
       23    0.000    0.000    0.000    0.000 earley_forest.py:638(visit_packed_node_out)
      198    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       99    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
       22    0.000    0.000    0.000    0.000 earley_forest.py:625(visit_symbol_node_in)
       98    0.000    0.000    0.000    0.000 {method 'expandtabs' of 'str' objects}
       99    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
       17    0.000    0.000    0.000    0.000 earley_forest.py:565(_call_rule_func)
       17    0.000    0.000    0.000    0.000 earley_forest.py:556(_collapse_ambig)
      114    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
       99    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
       99    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
       99    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
       23    0.000    0.000    0.000    0.000 earley_forest.py:155(children)
       99    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
       67    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       22    0.000    0.000    0.000    0.000 earley_forest.py:499(__init__)
       22    0.000    0.000    0.000    0.000 earley_forest.py:70(load_paths)
       23    0.000    0.000    0.000    0.000 earley_forest.py:450(visit_packed_node_out)
       16    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
       46    0.000    0.000    0.000    0.000 earley_forest.py:141(is_empty)
        5    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
       17    0.000    0.000    0.000    0.000 earley_forest.py:444(visit_symbol_node_out)
        6    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
       17    0.000    0.000    0.000    0.000 earley_forest.py:571(_call_ambig_func)
       23    0.000    0.000    0.000    0.000 earley_forest.py:158(<listcomp>)
       45    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
       14    0.000    0.000    0.000    0.000 parse_tree_builder.py:20(__call__)
      4/1    0.000    0.000    0.000    0.000 visitors.py:444(inner)
       45    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
        4    0.000    0.000    0.000    0.000 Parser.py:40(fix_formula)
      4/1    0.000    0.000    0.000    0.000 visitors.py:421(_visit_tree)
        1    0.000    0.000    0.000    0.000 Parser.py:253(cell)
        1    0.000    0.000    0.000    0.000 Workbook.py:688(_get_sheet_name_location)
        1    0.000    0.000    0.000    0.000 Parser.py:211(mul_expr)
      4/1    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
        2    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
        1    0.000    0.000    0.001    0.001 earley_forest.py:535(visit)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
      4/1    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
        1    0.000    0.000    0.000    0.000 earley_forest.py:523(__init__)
        5    0.000    0.000    0.000    0.000 earley_forest.py:447(visit_intermediate_node_out)
        1    0.000    0.000    0.000    0.000 Workbook.py:701(add_children_cells)
        4    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
        1    0.000    0.000    0.000    0.000 Workbook.py:807(get_cell_value)
        4    0.000    0.000    0.000    0.000 tree.py:61(__init__)
        1    0.000    0.000    0.000    0.000 earley.py:284(<listcomp>)
        1    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        1    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
       17    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
        1    0.000    0.000    0.001    0.001 earley_forest.py:397(transform)
        1    0.000    0.000    0.000    0.000 __init__.py:178(sub)
        1    0.000    0.000    0.000    0.000 Parser.py:243(number)
        1    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
        1    0.000    0.000    0.000    0.000 <frozen abc>:117(__instancecheck__)
        1    0.000    0.000    0.000    0.000 xearley.py:85(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000    0.000    0.000 visitors.py:415(visit)
        1    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        6    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
        1    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        2    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        1    0.000    0.000    0.000    0.000 xearley.py:88(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
        1    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        1    0.000    0.000    0.000    0.000 Parser.py:111(parens)
        1    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}



##################Running pro_cycle_formula_pyramid... #######################
for test <function pro_cycle_formula_pyramid at 0x7fa3a3575e40> total time: 1.368583770999999
Total Logs
         357932 function calls (355494 primitive calls) in 0.143 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.021    0.021    0.024    0.024 Graph.py:330(tarjans)
      400    0.018    0.000    0.073    0.000 earley.py:78(predict_and_complete)
    12865    0.009    0.000    0.016    0.000 earley_common.py:9(__init__)
        1    0.009    0.009    0.032    0.032 earley_forest.py:283(visit)
35778/34144    0.007    0.000    0.009    0.000 {built-in method builtins.hash}
    12158    0.005    0.000    0.011    0.000 grammar.py:18(__eq__)
    12186    0.005    0.000    0.007    0.000 utils.py:345(add)
    18951    0.004    0.000    0.005    0.000 grammar.py:25(__hash__)
    11930    0.004    0.000    0.005    0.000 lexer.py:265(__eq__)
      399    0.003    0.000    0.010    0.000 xearley.py:41(scan)
    34782    0.003    0.000    0.003    0.000 {built-in method builtins.isinstance}
     1828    0.003    0.000    0.007    0.000 earley_forest.py:50(__init__)
     4855    0.003    0.000    0.003    0.000 {built-in method fromkeys}
      816    0.002    0.000    0.012    0.000 earley.py:135(<listcomp>)
    20101    0.002    0.000    0.002    0.000 {built-in method builtins.min}
     1430    0.002    0.000    0.008    0.000 earley_forest.py:437(_visit_node_out_helper)
      715    0.002    0.000    0.003    0.000 earley_forest.py:603(transform_packed_node)
     3970    0.002    0.000    0.002    0.000 utils.py:342(__contains__)
    12254    0.002    0.000    0.002    0.000 {built-in method builtins.next}
     8674    0.002    0.000    0.002    0.000 earley_common.py:28(__eq__)
     1830    0.002    0.000    0.005    0.000 earley_forest.py:64(add_family)
    15595    0.002    0.000    0.002    0.000 grammar.py:121(__hash__)
    16778    0.001    0.000    0.001    0.000 earley_common.py:31(__hash__)
     4855    0.001    0.000    0.005    0.000 utils.py:339(__init__)
    18279    0.001    0.000    0.001    0.000 {built-in method builtins.len}
     1430    0.001    0.000    0.003    0.000 {built-in method builtins.sorted}
    16929    0.001    0.000    0.001    0.000 {method 'append' of 'list' objects}
    15933    0.001    0.000    0.001    0.000 {built-in method builtins.id}
     1830    0.001    0.000    0.002    0.000 earley_forest.py:131(__init__)
     4162    0.001    0.000    0.002    0.000 utils.py:348(__iter__)
     1830    0.001    0.000    0.004    0.000 earley_common.py:25(advance)
     2851    0.001    0.000    0.002    0.000 parser_frontends.py:184(match)
     1430    0.001    0.000    0.005    0.000 earley_forest.py:85(children)
      715    0.001    0.000    0.002    0.000 earley_forest.py:631(visit_packed_node_in)
     2543    0.001    0.000    0.001    0.000 {method 'setdefault' of 'dict' objects}
        1    0.001    0.001    0.084    0.084 xearley.py:39(_parse)
      512    0.001    0.000    0.002    0.000 earley_forest.py:581(transform_symbol_node)
      715    0.001    0.000    0.004    0.000 earley_forest.py:422(visit_symbol_node_in)
     2952    0.001    0.000    0.001    0.000 {method 'match' of 're.Pattern' objects}
     1430    0.001    0.000    0.001    0.000 earley_forest.py:145(sort_key)
      715    0.001    0.000    0.001    0.000 earley_forest.py:427(visit_packed_node_in)
      715    0.001    0.000    0.006    0.000 earley_forest.py:638(visit_packed_node_out)
     5592    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
      715    0.001    0.000    0.006    0.000 earley_forest.py:625(visit_symbol_node_in)
     6244    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.deque' objects}
     3675    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      512    0.000    0.000    0.001    0.000 earley_forest.py:556(_collapse_ambig)
     5940    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      512    0.000    0.000    0.001    0.000 earley_forest.py:565(_call_rule_func)
      715    0.000    0.000    0.001    0.000 earley_forest.py:155(children)
     1430    0.000    0.000    0.000    0.000 utils.py:357(__len__)
      715    0.000    0.000    0.001    0.000 earley_forest.py:70(load_paths)
      715    0.000    0.000    0.000    0.000 earley_forest.py:499(__init__)
     2145    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
      715    0.000    0.000    0.005    0.000 earley_forest.py:450(visit_packed_node_out)
     1829    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
     1430    0.000    0.000    0.000    0.000 earley_forest.py:141(is_empty)
      203    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
      304    0.000    0.000    0.000    0.000 lexer.py:213(_future_new)
     1830    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
        1    0.000    0.000    0.001    0.001 Workbook.py:617(_set_cycle_detected)
        1    0.000    0.000    0.116    0.116 parser_frontends.py:100(parse)
      100    0.000    0.000    0.000    0.000 Workbook.py:688(_get_sheet_name_location)
      512    0.000    0.000    0.003    0.000 earley_forest.py:444(visit_symbol_node_out)
      100    0.000    0.000    0.001    0.000 Parser.py:253(cell)
    202/1    0.000    0.000    0.002    0.002 visitors.py:430(<listcomp>)
     1430    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
      410    0.000    0.000    0.000    0.000 parse_tree_builder.py:20(__call__)
     1730    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
      512    0.000    0.000    0.000    0.000 earley_forest.py:571(_call_ambig_func)
      304    0.000    0.000    0.000    0.000 lexer.py:202(__new__)
      715    0.000    0.000    0.000    0.000 earley_forest.py:158(<listcomp>)
      204    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
      412    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
      304    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
    202/1    0.000    0.000    0.002    0.002 visitors.py:429(visit_children)
    202/1    0.000    0.000    0.002    0.002 visitors.py:421(_visit_tree)
      403    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
    202/1    0.000    0.000    0.002    0.002 visitors.py:444(inner)
      100    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      202    0.000    0.000    0.001    0.000 Parser.py:40(fix_formula)
      100    0.000    0.000    0.000    0.000 Workbook.py:807(get_cell_value)
        1    0.000    0.000    0.001    0.001 Workbook.py:701(add_children_cells)
      908    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
       99    0.000    0.000    0.000    0.000 Parser.py:169(add_expr)
      400    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
      104    0.000    0.000    0.000    0.000 Sheet.py:93(get_cell_value)
      202    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
      203    0.000    0.000    0.001    0.000 earley_forest.py:447(visit_intermediate_node_out)
      201    0.000    0.000    0.000    0.000 __init__.py:272(_compile)
      200    0.000    0.000    0.000    0.000 Graph.py:137(get_parents_from_cell)
      304    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
      100    0.000    0.000    0.000    0.000 __init__.py:178(sub)
      202    0.000    0.000    0.000    0.000 tree.py:61(__init__)
      204    0.000    0.000    0.000    0.000 Cell.py:123(get_value)
      512    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      101    0.000    0.000    0.000    0.000 __init__.py:163(match)
      100    0.000    0.000    0.000    0.000 Workbook.py:576(get_cell_from_location)
      208    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      102    0.000    0.000    0.000    0.000 Cell.py:81(set_cell_value)
      102    0.000    0.000    0.000    0.000 Workbook.py:541(get_sheet_name_from_hidden)
      304    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      304    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
        1    0.000    0.000    0.032    0.032 earley_forest.py:535(visit)
      101    0.000    0.000    0.000    0.000 utils.py:131(check_valid_cell_location)
      306    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
        1    0.000    0.000    0.115    0.115 earley.py:262(parse)
      102    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
      100    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        1    0.000    0.000    0.143    0.143 Workbook.py:639(recompute_cell_and_parents)
      204    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      100    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
      100    0.000    0.000    0.000    0.000 CellError.py:11(__init__)
      103    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
      102    0.000    0.000    0.000    0.000 Cell.py:126(get_contents)
        1    0.000    0.000    0.143    0.143 Workbook.py:728(set_cell_contents)
      102    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
        1    0.000    0.000    0.118    0.118 Workbook.py:545(get_formula_value)
        1    0.000    0.000    0.000    0.000 utils.py:179(convert_location_to_idx)
        1    0.000    0.000    0.000    0.000 Sheet.py:60(set_cell_contents)
        1    0.000    0.000    0.143    0.143 Workbook.py:36(run_func)
        1    0.000    0.000    0.000    0.000 earley_forest.py:523(__init__)
        1    0.000    0.000    0.000    0.000 Parser.py:211(mul_expr)
        1    0.000    0.000    0.116    0.116 lark.py:640(parse)
        2    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
        1    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
        1    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        1    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        2    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
        1    0.000    0.000    0.000    0.000 Sheet.py:104(set_cell_value)
        1    0.000    0.000    0.032    0.032 earley_forest.py:397(transform)
        1    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        1    0.000    0.000    0.000    0.000 earley.py:284(<listcomp>)
        1    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
        2    0.000    0.000    0.000    0.000 <frozen abc>:117(__instancecheck__)
        1    0.000    0.000    0.000    0.000 Workbook.py:715(clean_children_cells)
        1    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
        1    0.000    0.000    0.000    0.000 Parser.py:243(number)
        1    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
        1    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 xearley.py:85(<listcomp>)
        1    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
        1    0.000    0.000    0.002    0.002 visitors.py:415(visit)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
        1    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 xearley.py:88(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'normalize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        3    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        1    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
        1    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
        1    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
        1    0.000    0.000    0.000    0.000 Parser.py:111(parens)
        1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
        1    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        1    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 Cell.py:133(get_children)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}



##################Running pro_cycle_break_unbreak... #######################
for test <function pro_cycle_break_unbreak at 0x7fa3a3575f80> total time: 47.93402286200005
Total Logs
         12724872 function calls (12721108 primitive calls) in 8.832 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      198    4.921    0.025    5.136    0.026 Graph.py:330(tarjans)
    99000    0.362    0.000    2.707    0.000 Workbook.py:583(recompute_cell_value)
   297792    0.186    0.000    0.281    0.000 Sheet.py:93(get_cell_value)
    99198    0.176    0.000    1.875    0.000 Workbook.py:545(get_formula_value)
       99    0.169    0.002    0.476    0.005 Workbook.py:617(_set_cycle_detected)
    99000    0.159    0.000    0.704    0.000 Parser.py:253(cell)
   198396    0.159    0.000    0.288    0.000 Cell.py:81(set_cell_value)
   594693    0.156    0.000    0.204    0.000 utils.py:78(get_hidden_name)
   198000    0.109    0.000    0.256    0.000 Workbook.py:576(get_cell_from_location)
   396000    0.106    0.000    0.106    0.000 Graph.py:137(get_parents_from_cell)
   198297    0.102    0.000    0.184    0.000 Workbook.py:541(get_sheet_name_from_hidden)
    99000    0.101    0.000    0.397    0.000 Workbook.py:807(get_cell_value)
  1086921    0.100    0.000    0.100    0.000 {built-in method builtins.isinstance}
  1091079    0.093    0.000    0.093    0.000 {method 'lower' of 'str' objects}
   199980    0.086    0.000    0.136    0.000 {built-in method builtins.getattr}
      198    0.081    0.000    8.816    0.045 Workbook.py:639(recompute_cell_and_parents)
      990    0.081    0.000    0.285    0.000 earley.py:78(predict_and_complete)
    99198    0.074    0.000    1.164    0.000 visitors.py:421(_visit_tree)
    99198    0.071    0.000    0.324    0.000 Sheet.py:104(set_cell_value)
   198198    0.071    0.000    0.098    0.000 __init__.py:272(_compile)
   595584    0.068    0.000    0.068    0.000 {method 'get' of 'dict' objects}
    99198    0.063    0.000    0.954    0.000 visitors.py:444(inner)
    99198    0.058    0.000    0.091    0.000 utils.py:207(remove_exponent)
    99198    0.055    0.000    0.055    0.000 Parser.py:97(__init__)
    99198    0.054    0.000    0.797    0.000 Parser.py:40(fix_formula)
   134442    0.051    0.000    0.064    0.000 lexer.py:265(__eq__)
   971288    0.051    0.000    0.051    0.000 {method 'append' of 'list' objects}
   198396    0.049    0.000    0.073    0.000 Sheet.py:120(get_cell)
    71082    0.047    0.000    0.076    0.000 earley_common.py:9(__init__)
    99000    0.047    0.000    0.119    0.000 __init__.py:178(sub)
   396792    0.047    0.000    0.047    0.000 Cell.py:123(get_value)
    99198    0.046    0.000    0.094    0.000 visitors.py:429(visit_children)
    99198    0.045    0.000    0.122    0.000 __init__.py:163(match)
    99198    0.038    0.000    0.048    0.000 visitors.py:430(<listcomp>)
   480843    0.037    0.000    0.037    0.000 {built-in method builtins.len}
    99198    0.037    0.000    0.159    0.000 utils.py:131(check_valid_cell_location)
    99198    0.036    0.000    1.200    0.000 visitors.py:415(visit)
   597564    0.032    0.000    0.032    0.000 {method 'pop' of 'list' objects}
   297396    0.032    0.000    0.032    0.000 Cell.py:126(get_contents)
   297099    0.032    0.000    0.032    0.000 {built-in method builtins.min}
   103158    0.031    0.000    0.031    0.000 {method 'match' of 're.Pattern' objects}
    99198    0.030    0.000    0.039    0.000 utils.py:295(get_highest_precedence_error)
    99198    0.029    0.000    0.039    0.000 utils.py:212(is_formula)
168003/164241    0.026    0.000    0.034    0.000 {built-in method builtins.hash}
      198    0.024    0.000    0.080    0.000 earley_forest.py:283(visit)
    99000    0.023    0.000    0.023    0.000 {method 'sub' of 're.Pattern' objects}
    99297    0.021    0.000    0.038    0.000 <frozen abc>:117(__instancecheck__)
   198198    0.021    0.000    0.021    0.000 Cell.py:62(get_cached_formula)
    51084    0.020    0.000    0.031    0.000 utils.py:345(add)
   198297    0.019    0.000    0.019    0.000 Sheet.py:54(get_sheet_name)
    89496    0.017    0.000    0.023    0.000 grammar.py:25(__hash__)
    38511    0.017    0.000    0.032    0.000 grammar.py:18(__eq__)
    99297    0.016    0.000    0.016    0.000 {built-in method _abc._abc_instancecheck}
    99198    0.016    0.000    0.016    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
    99198    0.016    0.000    0.016    0.000 {method 'quantize' of 'decimal.Decimal' objects}
    99000    0.015    0.000    0.015    0.000 CellError.py:11(__init__)
    99198    0.013    0.000    0.013    0.000 Cell.py:129(set_children)
    99198    0.013    0.000    0.013    0.000 Parser.py:108(get_cell_refs)
   108009    0.012    0.000    0.012    0.000 {method 'add' of 'set' objects}
    99198    0.011    0.000    0.011    0.000 Cell.py:133(get_children)
    28413    0.011    0.000    0.018    0.000 utils.py:342(__contains__)
    61182    0.010    0.000    0.010    0.000 earley_common.py:28(__eq__)
    99198    0.009    0.000    0.009    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
    75339    0.007    0.000    0.007    0.000 grammar.py:121(__hash__)
      792    0.007    0.000    0.020    0.000 xearley.py:41(scan)
    79101    0.007    0.000    0.007    0.000 earley_common.py:31(__hash__)
     1782    0.007    0.000    0.030    0.000 earley.py:135(<listcomp>)
      198    0.006    0.000    8.832    0.045 Workbook.py:36(run_func)
     3366    0.005    0.000    0.010    0.000 earley_forest.py:50(__init__)
     3564    0.005    0.000    0.021    0.000 earley_forest.py:437(_visit_node_out_helper)
      198    0.005    0.000    8.826    0.045 Workbook.py:728(set_cell_contents)
     1881    0.005    0.000    0.009    0.000 earley_forest.py:603(transform_packed_node)
    29304    0.004    0.000    0.004    0.000 {built-in method builtins.next}
     3366    0.003    0.000    0.008    0.000 {built-in method builtins.sorted}
     9504    0.003    0.000    0.006    0.000 utils.py:339(__init__)
    39204    0.003    0.000    0.003    0.000 {built-in method builtins.id}
     3564    0.003    0.000    0.009    0.000 earley_forest.py:64(add_family)
     3564    0.002    0.000    0.004    0.000 earley_forest.py:131(__init__)
     9603    0.002    0.000    0.003    0.000 utils.py:348(__iter__)
     9504    0.002    0.000    0.003    0.000 {built-in method fromkeys}
      198    0.002    0.000    0.307    0.002 xearley.py:39(_parse)
     1485    0.002    0.000    0.005    0.000 earley_forest.py:581(transform_symbol_node)
     3366    0.002    0.000    0.011    0.000 earley_forest.py:85(children)
      198    0.002    0.000    0.394    0.002 earley.py:262(parse)
     1881    0.002    0.000    0.006    0.000 earley_forest.py:631(visit_packed_node_in)
     3564    0.002    0.000    0.009    0.000 earley_common.py:25(advance)
     1881    0.002    0.000    0.015    0.000 earley_forest.py:638(visit_packed_node_out)
     1881    0.002    0.000    0.004    0.000 earley_forest.py:427(visit_packed_node_in)
     1683    0.002    0.000    0.009    0.000 earley_forest.py:422(visit_symbol_node_in)
     5049    0.002    0.000    0.002    0.000 {method 'setdefault' of 'dict' objects}
     3762    0.002    0.000    0.002    0.000 earley_forest.py:145(sort_key)
     3960    0.001    0.000    0.003    0.000 parser_frontends.py:184(match)
     1485    0.001    0.000    0.003    0.000 earley_forest.py:565(_call_rule_func)
     1683    0.001    0.000    0.014    0.000 earley_forest.py:625(visit_symbol_node_in)
    12969    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
    16236    0.001    0.000    0.001    0.000 {method 'pop' of 'collections.deque' objects}
     1485    0.001    0.000    0.002    0.000 earley_forest.py:556(_collapse_ambig)
      198    0.001    0.000    0.396    0.002 parser_frontends.py:100(parse)
    15741    0.001    0.000    0.001    0.000 {method 'append' of 'collections.deque' objects}
     1881    0.001    0.000    0.001    0.000 earley_forest.py:155(children)
     1881    0.001    0.000    0.013    0.000 earley_forest.py:450(visit_packed_node_out)
     5247    0.001    0.000    0.001    0.000 {method 'remove' of 'set' objects}
     1683    0.001    0.000    0.001    0.000 earley_forest.py:499(__init__)
     3366    0.001    0.000    0.001    0.000 utils.py:357(__len__)
     1683    0.001    0.000    0.001    0.000 earley_forest.py:70(load_paths)
      198    0.001    0.000    0.001    0.000 utils.py:179(convert_location_to_idx)
     3762    0.001    0.000    0.001    0.000 earley_forest.py:141(is_empty)
     1485    0.001    0.000    0.008    0.000 earley_forest.py:444(visit_symbol_node_out)
      198    0.001    0.000    0.002    0.000 earley.py:284(<listcomp>)
      198    0.001    0.000    0.001    0.000 parser_frontends.py:96(_make_lexer_thread)
     1881    0.001    0.000    0.001    0.000 earley_forest.py:158(<listcomp>)
      198    0.000    0.000    0.002    0.000 Sheet.py:60(set_cell_contents)
     1485    0.000    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
     3564    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
     1287    0.000    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
      495    0.000    0.000    0.001    0.000 lexer.py:213(_future_new)
      495    0.000    0.000    0.001    0.000 lexer.py:202(__new__)
     3267    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
      198    0.000    0.000    0.001    0.000 Workbook.py:688(_get_sheet_name_location)
      396    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
     3564    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
      198    0.000    0.000    0.080    0.000 earley_forest.py:535(visit)
      495    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
      198    0.000    0.000    0.001    0.000 Workbook.py:715(clean_children_cells)
      198    0.000    0.000    0.080    0.000 earley_forest.py:397(transform)
      198    0.000    0.000    0.001    0.000 earley_forest.py:523(__init__)
      594    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
      198    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
      198    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
      198    0.000    0.000    0.000    0.000 Parser.py:243(number)
      198    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
      198    0.000    0.000    0.396    0.002 lark.py:640(parse)
      198    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
      198    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
      198    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
     1485    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      792    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
       99    0.000    0.000    0.001    0.000 Workbook.py:701(add_children_cells)
      495    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
      198    0.000    0.000    0.000    0.000 tree.py:61(__init__)
       99    0.000    0.000    0.000    0.000 Graph.py:96(update_child)
      198    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      198    0.000    0.000    0.001    0.000 earley_forest.py:447(visit_intermediate_node_out)
      198    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      495    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      198    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
       99    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      198    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      495    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
      495    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
      198    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      594    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
      396    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       99    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
      198    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      396    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      198    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
      198    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      2/1    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
      2/1    0.000    0.000    0.000    0.000 <frozen abc>:121(__subclasscheck__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}



##################Running pro_copy_massive_sheet... #######################
for test <function pro_copy_massive_sheet at 0x7fa3a3b13b00> total time: 31.43933211100002
Total Logs
         18400144 function calls (16400129 primitive calls) in 5.873 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
1600015/1    1.261    0.000    3.142    3.142 copy.py:128(deepcopy)
 200002/1    0.695    0.000    3.142    3.142 copy.py:227(_deepcopy_dict)
  1800007    0.538    0.000    0.538    0.000 {method 'lower' of 'str' objects}
  3700031    0.419    0.000    0.419    0.000 {method 'get' of 'dict' objects}
   100000    0.244    0.000    2.518    0.000 Workbook.py:728(set_cell_contents)
   100000    0.226    0.000    0.650    0.000 utils.py:307(error_matcher)
 100001/1    0.200    0.000    3.142    3.142 copy.py:259(_reconstruct)
   100000    0.179    0.000    0.942    0.000 Cell.py:81(set_cell_value)
   100000    0.165    0.000    0.272    0.000 Workbook.py:639(recompute_cell_and_parents)
  2200027    0.145    0.000    0.145    0.000 {built-in method builtins.id}
   100000    0.134    0.000    0.205    0.000 utils.py:179(convert_location_to_idx)
   100000    0.134    0.000    1.453    0.000 Sheet.py:60(set_cell_contents)
   200000    0.121    0.000    0.222    0.000 Sheet.py:93(get_cell_value)
   300005    0.109    0.000    0.151    0.000 copy.py:243(_keep_alive)
  1300008    0.077    0.000    0.077    0.000 copy.py:182(_deepcopy_atomic)
        1    0.077    0.077    5.873    5.873 Workbook.py:1039(copy_sheet)
   100000    0.073    0.000    1.030    0.000 Cell.py:65(set_contents)
   100001    0.068    0.000    0.068    0.000 {method '__reduce_ex__' of 'object' objects}
   100000    0.056    0.000    0.069    0.000 Sheet.py:124(update_extent)
   900000    0.056    0.000    0.056    0.000 {method 'strip' of 'str' objects}
   100000    0.054    0.000    0.097    0.000 Workbook.py:715(clean_children_cells)
 100001/1    0.050    0.000    5.873    5.873 Workbook.py:36(run_func)
        2    0.049    0.025    0.216    0.108 copy.py:201(_deepcopy_list)
   200000    0.047    0.000    0.066    0.000 Sheet.py:120(get_cell)
   200000    0.047    0.000    0.047    0.000 {method 'join' of 'str' objects}
        1    0.045    0.045    0.075    0.075 Sheet.py:134(set_sheet_name)
   400002    0.045    0.000    0.045    0.000 {built-in method builtins.isinstance}
   100000    0.043    0.000    0.122    0.000 __init__.py:163(match)
   700001    0.042    0.000    0.042    0.000 {built-in method builtins.len}
   100000    0.038    0.000    0.054    0.000 __init__.py:272(_compile)
   200002    0.035    0.000    0.136    0.000 copy.py:264(<genexpr>)
   100000    0.035    0.000    0.157    0.000 utils.py:131(check_valid_cell_location)
   500004    0.031    0.000    0.031    0.000 {method 'append' of 'list' objects}
   100000    0.028    0.000    0.035    0.000 utils.py:212(is_formula)
   100003    0.026    0.000    0.034    0.000 utils.py:78(get_hidden_name)
   100001    0.025    0.000    0.038    0.000 copyreg.py:104(__newobj__)
   100000    0.025    0.000    0.025    0.000 {method 'match' of 're.Pattern' objects}
   200000    0.023    0.000    0.023    0.000 Cell.py:123(get_value)
   200003    0.021    0.000    0.021    0.000 {built-in method builtins.getattr}
   100000    0.020    0.000    0.020    0.000 {method 'rstrip' of 'str' objects}
   200003    0.017    0.000    0.017    0.000 {method 'items' of 'dict' objects}
   100001    0.017    0.000    0.017    0.000 {method 'update' of 'dict' objects}
   100000    0.016    0.000    0.016    0.000 Graph.py:330(tarjans)
   100000    0.015    0.000    0.015    0.000 Cell.py:151(set_location)
   200000    0.014    0.000    0.014    0.000 {built-in method builtins.ord}
   100001    0.013    0.000    0.013    0.000 {built-in method __new__ of type object at 0x860f60}
   100000    0.011    0.000    0.011    0.000 Cell.py:126(get_contents)
   100000    0.010    0.000    0.010    0.000 {method 'upper' of 'str' objects}
   100000    0.010    0.000    0.010    0.000 Cell.py:133(get_children)
   100000    0.009    0.000    0.009    0.000 {method 'lstrip' of 'str' objects}
   100001    0.009    0.000    0.009    0.000 {built-in method builtins.hasattr}
   100002    0.009    0.000    0.009    0.000 {built-in method builtins.issubclass}
   100000    0.008    0.000    0.008    0.000 {method 'split' of 'str' objects}
   100000    0.007    0.000    0.007    0.000 Cell.py:147(get_location)
        1    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        1    0.000    0.000    0.000    0.000 copy.py:210(_deepcopy_tuple)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'update' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 Workbook.py:541(get_sheet_name_from_hidden)
        3    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 Workbook.py:506(num_sheets)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 copy.py:211(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 Sheet.py:57(get_sheet_cells)
        1    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
        1    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method '__deepcopy__' of 'decimal.Decimal' objects}



##################Running pro_pascals_triangle_speed... #######################
Total Logs
         2469018 function calls in 0.880 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
    27448    0.087    0.000    0.704    0.000 Workbook.py:583(recompute_cell_value)
     1275    0.084    0.000    0.111    0.000 Graph.py:330(tarjans)
    82122    0.049    0.000    0.076    0.000 Sheet.py:93(get_cell_value)
    26524    0.045    0.000    0.395    0.000 Workbook.py:545(get_formula_value)
    26524    0.043    0.000    0.187    0.000 Parser.py:253(cell)
    27799    0.033    0.000    0.070    0.000 Cell.py:81(set_cell_value)
    26524    0.027    0.000    0.105    0.000 Workbook.py:807(get_cell_value)
   111644    0.027    0.000    0.037    0.000 utils.py:78(get_hidden_name)
   241266    0.023    0.000    0.023    0.000 {built-in method builtins.isinstance}
     1275    0.023    0.000    0.842    0.001 Workbook.py:639(recompute_cell_and_parents)
   268389    0.023    0.000    0.023    0.000 {method 'lower' of 'str' objects}
    53048    0.022    0.000    0.035    0.000 {built-in method builtins.getattr}
    54323    0.019    0.000    0.027    0.000 __init__.py:272(_compile)
    26524    0.019    0.000    0.315    0.000 visitors.py:421(_visit_tree)
    26524    0.018    0.000    0.086    0.000 Sheet.py:104(set_cell_value)
   138644    0.017    0.000    0.017    0.000 {method 'get' of 'dict' objects}
    27448    0.016    0.000    0.036    0.000 Workbook.py:576(get_cell_from_location)
    26524    0.016    0.000    0.261    0.000 visitors.py:444(inner)
    27799    0.016    0.000    0.025    0.000 utils.py:207(remove_exponent)
    27724    0.015    0.000    0.027    0.000 Workbook.py:541(get_sheet_name_from_hidden)
    26524    0.014    0.000    0.014    0.000 Parser.py:97(__init__)
    26524    0.014    0.000    0.216    0.000 Parser.py:40(fix_formula)
    54896    0.013    0.000    0.013    0.000 Graph.py:137(get_parents_from_cell)
    26524    0.013    0.000    0.017    0.000 visitors.py:430(<listcomp>)
    26524    0.012    0.000    0.031    0.000 __init__.py:178(sub)
    26524    0.012    0.000    0.030    0.000 visitors.py:429(visit_children)
    27799    0.012    0.000    0.033    0.000 __init__.py:163(match)
    26524    0.011    0.000    0.015    0.000 utils.py:295(get_highest_precedence_error)
    26524    0.011    0.000    0.013    0.000 lexer.py:265(__eq__)
    27799    0.010    0.000    0.043    0.000 utils.py:131(check_valid_cell_location)
    82122    0.009    0.000    0.009    0.000 Cell.py:123(get_value)
   115945    0.009    0.000    0.009    0.000 {built-in method builtins.len}
    26524    0.009    0.000    0.324    0.000 visitors.py:415(visit)
    28723    0.008    0.000    0.011    0.000 utils.py:212(is_formula)
    29998    0.008    0.000    0.012    0.000 Sheet.py:120(get_cell)
   137240    0.008    0.000    0.008    0.000 {method 'append' of 'list' objects}
    27799    0.008    0.000    0.008    0.000 {method 'match' of 're.Pattern' objects}
    53972    0.006    0.000    0.006    0.000 Cell.py:126(get_contents)
    26524    0.006    0.000    0.006    0.000 {method 'sub' of 're.Pattern' objects}
    82344    0.005    0.000    0.005    0.000 {method 'pop' of 'list' objects}
    53048    0.005    0.000    0.005    0.000 Cell.py:62(get_cached_formula)
     1275    0.005    0.000    0.878    0.001 Workbook.py:728(set_cell_contents)
    27799    0.005    0.000    0.005    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
    27799    0.004    0.000    0.004    0.000 {method 'quantize' of 'decimal.Decimal' objects}
    26524    0.004    0.000    0.004    0.000 Cell.py:129(set_children)
    26524    0.003    0.000    0.003    0.000 Parser.py:108(get_cell_refs)
    27799    0.003    0.000    0.003    0.000 Cell.py:133(get_children)
     1275    0.003    0.000    0.005    0.000 utils.py:307(error_matcher)
    27724    0.003    0.000    0.003    0.000 Sheet.py:54(get_sheet_name)
    26524    0.003    0.000    0.003    0.000 {method 'add' of 'set' objects}
    27799    0.003    0.000    0.003    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
     1275    0.002    0.000    0.004    0.000 utils.py:179(convert_location_to_idx)
     1275    0.002    0.000    0.017    0.000 Sheet.py:60(set_cell_contents)
     1275    0.002    0.000    0.006    0.000 Workbook.py:715(clean_children_cells)
     1225    0.002    0.000    0.003    0.000 Workbook.py:688(_get_sheet_name_location)
     1275    0.002    0.000    0.879    0.001 Workbook.py:36(run_func)
     1275    0.001    0.000    0.010    0.000 Cell.py:65(set_contents)
     1275    0.001    0.000    0.001    0.000 Sheet.py:124(update_extent)
     1225    0.001    0.000    0.001    0.000 Graph.py:96(update_child)
     3775    0.001    0.000    0.001    0.000 {method 'join' of 'str' objects}
    11475    0.001    0.000    0.001    0.000 {method 'strip' of 'str' objects}
     4725    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
     1225    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
     1225    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
     1575    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
     1275    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
     1575    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
     1275    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



beginning of profiler log written on 2024-03-13 14:28:04.292139 ran on the computer of kevin2

##################Running pro_load_workbook... #######################
for test <function pro_load_workbook at 0x000001311CEB90D0> total time: 17.889699000000014
Total Logs
         2252602 function calls (2241402 primitive calls) in 1.587 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     2100    0.286    0.000    0.993    0.000 earley.py:78(predict_and_complete)
   103200    0.151    0.000    0.228    0.000 earley_common.py:9(__init__)
      200    0.098    0.000    0.325    0.002 earley_forest.py:283(visit)
267800/259000    0.079    0.000    0.101    0.000 {built-in method builtins.hash}
    89700    0.068    0.000    0.105    0.000 utils.py:345(add)
    76800    0.065    0.000    0.122    0.000 grammar.py:18(__eq__)
     1900    0.053    0.000    0.168    0.000 xearley.py:41(scan)
   146700    0.046    0.000    0.068    0.000 grammar.py:25(__hash__)
    72500    0.039    0.000    0.051    0.000 lexer.py:265(__eq__)
     8200    0.037    0.000    0.089    0.000 earley_forest.py:50(__init__)
    81700    0.035    0.000    0.035    0.000 earley_common.py:28(__eq__)
     4600    0.035    0.000    0.127    0.000 earley.py:135(<listcomp>)
    23500    0.033    0.000    0.040    0.000 typing.py:868(__new__)
   201100    0.032    0.000    0.032    0.000 {built-in method builtins.isinstance}
    38400    0.029    0.000    0.048    0.000 utils.py:342(__contains__)
   137100    0.021    0.000    0.021    0.000 earley_common.py:31(__hash__)
     7200    0.020    0.000    0.086    0.000 earley_forest.py:437(_visit_node_out_helper)
     3600    0.018    0.000    0.039    0.000 earley_forest.py:603(transform_packed_node)
   113200    0.018    0.000    0.018    0.000 grammar.py:121(__hash__)
   121800    0.017    0.000    0.017    0.000 {method 'append' of 'list' objects}
    22500    0.017    0.000    0.021    0.000 {built-in method fromkeys}
    61200    0.016    0.000    0.016    0.000 {built-in method builtins.next}
   132500    0.016    0.000    0.016    0.000 {built-in method builtins.len}
    22500    0.014    0.000    0.035    0.000 utils.py:339(__init__)
     7200    0.014    0.000    0.030    0.000 {built-in method builtins.sorted}
    20100    0.014    0.000    0.014    0.000 {method 'match' of 're.Pattern' objects}
     8400    0.013    0.000    0.041    0.000 earley_forest.py:64(add_family)
    80000    0.013    0.000    0.013    0.000 {built-in method builtins.id}
     8400    0.012    0.000    0.020    0.000 earley_forest.py:131(__init__)
    19300    0.011    0.000    0.024    0.000 parser_frontends.py:184(match)
     8400    0.010    0.000    0.040    0.000 earley_common.py:25(advance)
    22700    0.009    0.000    0.013    0.000 utils.py:348(__iter__)
      200    0.009    0.000    1.170    0.006 xearley.py:39(_parse)
     3600    0.009    0.000    0.023    0.000 earley_forest.py:631(visit_packed_node_in)
     7200    0.008    0.000    0.043    0.000 earley_forest.py:85(children)
    24800    0.008    0.000    0.008    0.000 {built-in method __new__ of type object at 0x00007FFB2480DCB0}
     2800    0.008    0.000    0.020    0.000 earley_forest.py:581(transform_symbol_node)
    11800    0.007    0.000    0.010    0.000 {method 'setdefault' of 'dict' objects}
     3600    0.007    0.000    0.063    0.000 earley_forest.py:638(visit_packed_node_out)
    18300    0.007    0.000    0.007    0.000 {method 'add' of 'set' objects}
     3600    0.007    0.000    0.035    0.000 earley_forest.py:422(visit_symbol_node_in)
     3600    0.006    0.000    0.058    0.000 earley_forest.py:625(visit_symbol_node_in)
     3600    0.006    0.000    0.013    0.000 earley_forest.py:427(visit_packed_node_in)
    29900    0.006    0.000    0.006    0.000 {built-in method builtins.iter}
     2800    0.005    0.000    0.011    0.000 earley_forest.py:565(_call_rule_func)
     7200    0.005    0.000    0.008    0.000 earley_forest.py:145(sort_key)
      100    0.005    0.000    0.006    0.000 {method 'read' of '_io.TextIOWrapper' objects}
    33300    0.005    0.000    0.005    0.000 {method 'pop' of 'collections.deque' objects}
      300    0.005    0.000    1.556    0.005 Workbook.py:638(recompute_cell_and_parents)
     2800    0.004    0.000    0.008    0.000 earley_forest.py:556(_collapse_ambig)
    31700    0.004    0.000    0.004    0.000 {method 'append' of 'collections.deque' objects}
      200    0.004    0.000    1.511    0.008 earley.py:262(parse)
     3600    0.004    0.000    0.004    0.000 earley_forest.py:499(__init__)
     3600    0.004    0.000    0.005    0.000 earley_forest.py:155(children)
     3600    0.003    0.000    0.005    0.000 earley_forest.py:70(load_paths)
    10800    0.003    0.000    0.003    0.000 {method 'remove' of 'set' objects}
     3600    0.003    0.000    0.055    0.000 earley_forest.py:450(visit_packed_node_out)
     7200    0.003    0.000    0.004    0.000 utils.py:357(__len__)
      200    0.003    0.000    1.516    0.008 parser_frontends.py:100(parse)
      300    0.003    0.000    1.572    0.005 Workbook.py:727(set_cell_contents)
     3200    0.002    0.000    0.003    0.000 {built-in method builtins.getattr}
     1300    0.002    0.000    0.004    0.000 lexer.py:213(_future_new)
     7200    0.002    0.000    0.002    0.000 earley_forest.py:141(is_empty)
      200    0.002    0.000    1.542    0.008 Workbook.py:544(get_formula_value)
      500    0.002    0.000    0.005    0.000 Cell.py:81(set_cell_value)
     2800    0.002    0.000    0.031    0.000 earley_forest.py:444(visit_symbol_node_out)
     8300    0.002    0.000    0.002    0.000 earley_forest.py:101(__hash__)
      800    0.002    0.000    0.003    0.000 earley_forest.py:591(transform_intermediate_node)
     2300    0.002    0.000    0.003    0.000 parse_tree_builder.py:20(__call__)
      600    0.002    0.000    0.007    0.000 xearley.py:88(<listcomp>)
      300    0.002    0.000    0.010    0.000 Sheet.py:60(set_cell_contents)
     1300    0.002    0.000    0.003    0.000 Sheet.py:93(get_cell_value)
      300    0.002    0.000    0.003    0.000 utils.py:179(convert_location_to_idx)
      300    0.002    0.000    0.008    0.000 Parser.py:253(cell)
     8400    0.002    0.000    0.002    0.000 earley_forest.py:169(__hash__)
     1300    0.002    0.000    0.005    0.000 lexer.py:202(__new__)
     7200    0.002    0.000    0.002    0.000 earley_forest.py:548(_check_cycle)
     3600    0.002    0.000    0.002    0.000 earley_forest.py:158(<listcomp>)
     1300    0.002    0.000    0.002    0.000 earley_forest.py:193(__init__)
      100    0.002    0.000    1.587    0.016 Workbook.py:74(load_workbook)
      100    0.002    0.000    0.002    0.000 {method 'seek' of '_io.TextIOWrapper' objects}
     2800    0.002    0.000    0.002    0.000 earley_forest.py:571(_call_ambig_func)
     1000    0.002    0.000    0.002    0.000 earley_forest.py:432(visit_token_node)
     7200    0.002    0.000    0.002    0.000 {method 'pop' of 'list' objects}
  800/200    0.002    0.000    0.021    0.000 visitors.py:421(_visit_tree)
  800/200    0.002    0.000    0.019    0.000 visitors.py:444(inner)
  800/200    0.001    0.000    0.017    0.000 visitors.py:430(<listcomp>)
      800    0.001    0.000    0.013    0.000 Parser.py:40(fix_formula)
     2200    0.001    0.000    0.001    0.000 utils.py:354(__bool__)
     5900    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
      900    0.001    0.000    0.002    0.000 re.py:289(_compile)
      200    0.001    0.000    0.327    0.002 earley_forest.py:535(visit)
      300    0.001    0.000    0.004    0.000 Workbook.py:806(get_cell_value)
      300    0.001    0.000    0.002    0.000 Workbook.py:687(_get_sheet_name_location)
      600    0.001    0.000    0.001    0.000 xearley.py:85(<listcomp>)
      200    0.001    0.000    0.001    0.000 Parser.py:97(__init__)
      200    0.001    0.000    0.002    0.000 earley_forest.py:523(__init__)
      200    0.001    0.000    0.003    0.000 earley.py:284(<listcomp>)
      200    0.001    0.000    0.001    0.000 parser_frontends.py:96(_make_lexer_thread)
     1300    0.001    0.000    0.001    0.000 utils.py:78(get_hidden_name)
      200    0.001    0.000    0.001    0.000 Parser.py:243(number)
      400    0.001    0.000    1.575    0.004 Workbook.py:35(run_func)
  800/200    0.001    0.000    0.018    0.000 visitors.py:429(visit_children)
      300    0.001    0.000    0.001    0.000 Workbook.py:714(clean_children_cells)
      100    0.001    0.000    0.002    0.000 Workbook.py:868(new_sheet)
      100    0.001    0.000    0.001    0.000 decoder.py:343(raw_decode)
     2800    0.001    0.000    0.001    0.000 {built-in method builtins.hasattr}
      200    0.001    0.000    0.003    0.000 Workbook.py:700(add_children_cells)
      600    0.001    0.000    0.003    0.000 utils.py:131(check_valid_cell_location)
      800    0.001    0.000    0.001    0.000 utils.py:295(get_highest_precedence_error)
      300    0.001    0.000    0.001    0.000 utils.py:207(remove_exponent)
      600    0.001    0.000    0.002    0.000 re.py:188(match)
      900    0.001    0.000    0.001    0.000 {method 'join' of 'str' objects}
     1300    0.001    0.000    0.001    0.000 {method 'group' of 're.Match' objects}
      300    0.001    0.000    0.003    0.000 Cell.py:65(set_contents)
      800    0.001    0.000    0.006    0.000 earley_forest.py:447(visit_intermediate_node_out)
      600    0.001    0.000    0.001    0.000 {built-in method _heapq.heappush}
      200    0.001    0.000    0.327    0.002 earley_forest.py:397(transform)
     2300    0.001    0.000    0.001    0.000 {method 'get' of 'dict' objects}
      200    0.001    0.000    0.001    0.000 earley_forest.py:390(__init__)
      100    0.001    0.000    0.001    0.000 Parser.py:211(mul_expr)
      200    0.001    0.000    1.516    0.008 lark.py:640(parse)
      200    0.001    0.000    0.001    0.000 Parser.py:169(add_expr)
     2700    0.001    0.000    0.001    0.000 {method 'end' of 're.Match' objects}
      300    0.001    0.000    0.001    0.000 Graph.py:68(add_connection)
      800    0.001    0.000    0.001    0.000 tree.py:61(__init__)
      300    0.001    0.000    0.004    0.000 Cell.py:46(__init__)
      300    0.001    0.000    0.001    0.000 {method 'sub' of 're.Pattern' objects}
      200    0.001    0.000    0.003    0.000 Sheet.py:104(set_cell_value)
      300    0.001    0.000    0.001    0.000 Workbook.py:540(get_sheet_name_from_hidden)
      100    0.000    0.000    0.001    0.000 Workbook.py:56(__init__)
      100    0.000    0.000    0.001    0.000 utils.py:307(error_matcher)
      300    0.000    0.000    0.002    0.000 re.py:203(sub)
      300    0.000    0.000    0.001    0.000 Sheet.py:124(update_extent)
      200    0.000    0.000    0.001    0.000 parse_tree_builder.py:145(__call__)
      300    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
      100    0.000    0.000    0.001    0.000 utils.py:96(check_new_name)
      100    0.000    0.000    0.002    0.000 decoder.py:332(decode)
     1300    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
     1200    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
      100    0.000    0.000    0.002    0.000 __init__.py:299(loads)
     1000    0.000    0.000    0.000    0.000 Cell.py:125(get_value)
      600    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
      200    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
      300    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
     1600    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
      300    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      100    0.000    0.000    0.000    0.000 {built-in method _codecs.charmap_decode}
      300    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
      300    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
      200    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
      200    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      200    0.000    0.000    0.021    0.000 visitors.py:415(visit)
      300    0.000    0.000    0.001    0.000 abc.py:96(__instancecheck__)
      300    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
      100    0.000    0.000    0.000    0.000 cp1252.py:22(decode)
     1000    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      200    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 Graph.py:128(get_sheet_parents)
      100    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
      600    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
      100    0.000    0.000    0.000    0.000 Workbook.py:857(recompute_sheet_parents)
      200    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      600    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      100    0.000    0.000    0.000    0.000 Workbook.py:505(num_sheets)
      100    0.000    0.000    0.000    0.000 Sheet.py:25(__init__)
      200    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
      100    0.000    0.000    0.000    0.000 Graph.py:121(has_sheet)
      300    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      400    0.000    0.000    0.000    0.000 Cell.py:128(get_contents)
      200    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
      300    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      300    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      200    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
      300    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
      100    0.000    0.000    0.000    0.000 Graph.py:15(__init__)
      300    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      200    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
      100    0.000    0.000    0.000    0.000 Graph.py:124(add_sheet)
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 codecs.py:276(reset)
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_copy_sheet... #######################
for test <function pro_copy_sheet at 0x000001311CEB91F0> total time: 7.4386577
Total Logs
         993194 function calls (988594 primitive calls) in 0.679 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      800    0.115    0.000    0.426    0.001 earley.py:78(predict_and_complete)
    47800    0.067    0.000    0.101    0.000 earley_common.py:9(__init__)
      100    0.039    0.000    0.128    0.001 earley_forest.py:283(visit)
120300/116800    0.034    0.000    0.043    0.000 {built-in method builtins.hash}
    39400    0.028    0.000    0.045    0.000 utils.py:345(add)
    32300    0.026    0.000    0.049    0.000 grammar.py:18(__eq__)
      100    0.022    0.000    0.679    0.007 Workbook.py:1038(copy_sheet)
    65500    0.021    0.000    0.030    0.000 grammar.py:25(__hash__)
      700    0.019    0.000    0.059    0.000 xearley.py:41(scan)
     9100    0.017    0.000    0.019    0.000 typing.py:868(__new__)
    39000    0.016    0.000    0.016    0.000 earley_common.py:28(__eq__)
    30300    0.016    0.000    0.020    0.000 lexer.py:265(__eq__)
     1800    0.014    0.000    0.051    0.000 earley.py:135(<listcomp>)
     3200    0.014    0.000    0.039    0.000 earley_forest.py:50(__init__)
    18100    0.013    0.000    0.022    0.000 utils.py:342(__contains__)
    83400    0.012    0.000    0.012    0.000 {built-in method builtins.isinstance}
    60600    0.009    0.000    0.009    0.000 earley_common.py:31(__hash__)
    51700    0.008    0.000    0.008    0.000 grammar.py:121(__hash__)
     8700    0.008    0.000    0.009    0.000 {built-in method fromkeys}
    55500    0.008    0.000    0.008    0.000 {method 'append' of 'list' objects}
     3000    0.008    0.000    0.034    0.000 earley_forest.py:437(_visit_node_out_helper)
     1500    0.007    0.000    0.015    0.000 earley_forest.py:603(transform_packed_node)
    60500    0.007    0.000    0.007    0.000 {built-in method builtins.len}
     4700    0.007    0.000    0.008    0.000 {method 'setdefault' of 'dict' objects}
    25400    0.006    0.000    0.006    0.000 {built-in method builtins.next}
     3000    0.006    0.000    0.012    0.000 {built-in method builtins.sorted}
     8700    0.005    0.000    0.015    0.000 utils.py:339(__init__)
     3300    0.005    0.000    0.016    0.000 earley_forest.py:64(add_family)
     7400    0.005    0.000    0.005    0.000 {method 'match' of 're.Pattern' objects}
    33300    0.005    0.000    0.005    0.000 {built-in method builtins.id}
     3300    0.005    0.000    0.008    0.000 earley_forest.py:131(__init__)
     7100    0.004    0.000    0.008    0.000 parser_frontends.py:184(match)
     3300    0.004    0.000    0.015    0.000 earley_common.py:25(advance)
      100    0.004    0.000    0.489    0.005 xearley.py:39(_parse)
     9000    0.003    0.000    0.005    0.000 utils.py:348(__iter__)
     1500    0.003    0.000    0.009    0.000 earley_forest.py:631(visit_packed_node_in)
     3000    0.003    0.000    0.017    0.000 earley_forest.py:85(children)
     1200    0.003    0.000    0.008    0.000 earley_forest.py:581(transform_symbol_node)
     9600    0.003    0.000    0.003    0.000 {built-in method __new__ of type object at 0x00007FFB2480DCB0}
     1500    0.003    0.000    0.025    0.000 earley_forest.py:638(visit_packed_node_out)
     1500    0.003    0.000    0.014    0.000 earley_forest.py:422(visit_symbol_node_in)
     7600    0.003    0.000    0.003    0.000 {method 'add' of 'set' objects}
     1500    0.003    0.000    0.023    0.000 earley_forest.py:625(visit_symbol_node_in)
     1500    0.002    0.000    0.005    0.000 earley_forest.py:427(visit_packed_node_in)
    12000    0.002    0.000    0.002    0.000 {built-in method builtins.iter}
      200    0.002    0.000    0.642    0.003 Workbook.py:638(recompute_cell_and_parents)
     1200    0.002    0.000    0.004    0.000 earley_forest.py:565(_call_rule_func)
     3000    0.002    0.000    0.003    0.000 earley_forest.py:145(sort_key)
    13900    0.002    0.000    0.002    0.000 {method 'pop' of 'collections.deque' objects}
      100    0.002    0.000    0.624    0.006 earley.py:262(parse)
     1200    0.002    0.000    0.003    0.000 earley_forest.py:556(_collapse_ambig)
    13300    0.002    0.000    0.002    0.000 {method 'append' of 'collections.deque' objects}
      200    0.002    0.000    0.652    0.003 Workbook.py:727(set_cell_contents)
     1500    0.002    0.000    0.002    0.000 earley_forest.py:499(__init__)
     9050    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
     1500    0.001    0.000    0.002    0.000 earley_forest.py:155(children)
     4500    0.001    0.000    0.001    0.000 {method 'remove' of 'set' objects}
      300    0.001    0.000    0.003    0.000 Cell.py:81(set_cell_value)
     1500    0.001    0.000    0.002    0.000 earley_forest.py:70(load_paths)
     1500    0.001    0.000    0.021    0.000 earley_forest.py:450(visit_packed_node_out)
      100    0.001    0.000    0.626    0.006 parser_frontends.py:100(parse)
      200    0.001    0.000    0.002    0.000 utils.py:179(convert_location_to_idx)
     3000    0.001    0.000    0.002    0.000 utils.py:357(__len__)
      200    0.001    0.000    0.006    0.000 Sheet.py:60(set_cell_contents)
      100    0.001    0.000    0.636    0.006 Workbook.py:544(get_formula_value)
      700    0.001    0.000    0.001    0.000 Sheet.py:93(get_cell_value)
     3000    0.001    0.000    0.001    0.000 earley_forest.py:141(is_empty)
     1400    0.001    0.000    0.001    0.000 {built-in method builtins.getattr}
     1200    0.001    0.000    0.012    0.000 earley_forest.py:444(visit_symbol_node_out)
      500    0.001    0.000    0.001    0.000 lexer.py:213(_future_new)
     3200    0.001    0.000    0.001    0.000 earley_forest.py:101(__hash__)
      200    0.001    0.000    0.002    0.000 xearley.py:88(<listcomp>)
     1000    0.001    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
  400/100    0.001    0.000    0.679    0.007 Workbook.py:35(run_func)
      300    0.001    0.000    0.001    0.000 earley_forest.py:591(transform_intermediate_node)
      100    0.001    0.000    0.002    0.000 Workbook.py:868(new_sheet)
     3000    0.001    0.000    0.001    0.000 earley_forest.py:548(_check_cycle)
      500    0.001    0.000    0.002    0.000 lexer.py:202(__new__)
     3300    0.001    0.000    0.001    0.000 earley_forest.py:169(__hash__)
     1500    0.001    0.000    0.001    0.000 earley_forest.py:158(<listcomp>)
      100    0.001    0.000    0.003    0.000 Parser.py:253(cell)
     1000    0.001    0.000    0.001    0.000 utils.py:78(get_hidden_name)
     5350    0.001    0.000    0.001    0.000 {method 'keys' of 'collections.OrderedDict' objects}
     1200    0.001    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
      400    0.001    0.000    0.001    0.000 earley_forest.py:432(visit_token_node)
      500    0.001    0.000    0.001    0.000 earley_forest.py:193(__init__)
  300/100    0.001    0.000    0.007    0.000 visitors.py:444(inner)
  300/100    0.001    0.000    0.007    0.000 visitors.py:421(_visit_tree)
     3000    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
      400    0.001    0.000    0.001    0.000 re.py:289(_compile)
      100    0.000    0.000    0.128    0.001 earley_forest.py:535(visit)
      100    0.000    0.000    0.001    0.000 earley_forest.py:523(__init__)
      100    0.000    0.000    0.001    0.000 utils.py:96(check_new_name)
      200    0.000    0.000    0.001    0.000 utils.py:207(remove_exponent)
  300/100    0.000    0.000    0.006    0.000 visitors.py:430(<listcomp>)
      100    0.000    0.000    0.001    0.000 utils.py:307(error_matcher)
      100    0.000    0.000    0.002    0.000 earley.py:284(<listcomp>)
      300    0.000    0.000    0.004    0.000 Parser.py:40(fix_formula)
  300/100    0.000    0.000    0.006    0.000 visitors.py:429(visit_children)
      300    0.000    0.000    0.001    0.000 Workbook.py:540(get_sheet_name_from_hidden)
      100    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
      100    0.000    0.000    0.001    0.000 parser_frontends.py:96(_make_lexer_thread)
      800    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
      300    0.000    0.000    0.002    0.000 utils.py:131(check_valid_cell_location)
      100    0.000    0.000    0.001    0.000 Workbook.py:806(get_cell_value)
      500    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
      100    0.000    0.000    0.001    0.000 Workbook.py:687(_get_sheet_name_location)
      100    0.000    0.000    0.000    0.000 Parser.py:243(number)
      200    0.000    0.000    0.002    0.000 Cell.py:65(set_contents)
     1300    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      300    0.000    0.000    0.001    0.000 re.py:188(match)
      200    0.000    0.000    0.003    0.000 Cell.py:46(__init__)
      200    0.000    0.000    0.000    0.000 xearley.py:85(<listcomp>)
      100    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
      100    0.000    0.000    0.129    0.001 earley_forest.py:397(transform)
      200    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
     1200    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      100    0.000    0.000    0.000    0.000 Parser.py:169(add_expr)
      100    0.000    0.000    0.001    0.000 Workbook.py:700(add_children_cells)
      300    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
      500    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      100    0.000    0.000    0.626    0.006 lark.py:640(parse)
      300    0.000    0.000    0.002    0.000 earley_forest.py:447(visit_intermediate_node_out)
      100    0.000    0.000    0.001    0.000 Sheet.py:104(set_cell_value)
      100    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      400    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
      200    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
      300    0.000    0.000    0.000    0.000 tree.py:61(__init__)
      200    0.000    0.000    0.000    0.000 Workbook.py:505(num_sheets)
      100    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
      100    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
      900    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
      100    0.000    0.000    0.001    0.000 re.py:203(sub)
      200    0.000    0.000    0.000    0.000 Workbook.py:714(clean_children_cells)
     1200    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
      792    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
      200    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
      500    0.000    0.000    0.000    0.000 Cell.py:125(get_value)
      400    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
      100    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
      100    0.000    0.000    0.000    0.000 Graph.py:128(get_sheet_parents)
      200    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
      200    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
      500    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
      200    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
      100    0.000    0.000    0.000    0.000 Sheet.py:25(__init__)
      400    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
      200    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
      100    0.000    0.000    0.000    0.000 Workbook.py:857(recompute_sheet_parents)
      100    0.000    0.000    0.008    0.000 visitors.py:415(visit)
      100    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      100    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
      100    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      100    0.000    0.000    0.000    0.000 Graph.py:121(has_sheet)
      100    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
      400    0.000    0.000    0.000    0.000 Cell.py:128(get_contents)
      300    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      400    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      400    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      100    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      100    0.000    0.000    0.000    0.000 Graph.py:124(add_sheet)
      200    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      200    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      100    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
      100    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
      200    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
      200    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      100    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
      100    0.000    0.000    0.000    0.000 Sheet.py:57(get_sheet_cells)
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
      100    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_rename_sheet... #######################
for test <function pro_rename_sheet at 0x000001311CEB9310> total time: 19.697231299999988
Total Logs
         2642192 function calls (2521392 primitive calls) in 2.009 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
100800/100400    0.174    0.000    0.834    0.000 visitors.py:111(_call_userfunc)
    12000    0.143    0.000    0.248    0.000 tree.py:137(iter_subtrees)
     4000    0.122    0.000    0.355    0.000 visitors.py:293(transform)
    86500    0.110    0.000    0.134    0.000 typing.py:868(__new__)
     6500    0.106    0.000    1.057    0.000 visitors.py:278(transform)
197300/153200    0.102    0.000    0.159    0.000 {built-in method builtins.getattr}
164200/150400    0.096    0.000    0.778    0.000 visitors.py:143(_transform_children)
    72500    0.081    0.000    0.220    0.000 visitors.py:171(__default__)
   517800    0.075    0.000    0.078    0.000 {built-in method builtins.isinstance}
    85500    0.061    0.000    0.089    0.000 tree.py:147(<listcomp>)
     4100    0.047    0.000    0.047    0.000 {built-in method builtins.compile}
      100    0.042    0.000    1.871    0.019 load_grammar.py:690(compile)
    82300    0.038    0.000    0.038    0.000 tree.py:61(__init__)
    20100    0.038    0.000    0.045    0.000 tree.py:179(expand_kids_by_data)
    59100    0.033    0.000    0.661    0.000 visitors.py:275(_transform_tree)
94900/53400    0.028    0.000    0.044    0.000 {built-in method builtins.hash}
     4100    0.028    0.000    0.167    0.000 load_grammar.py:566(_literal_to_pattern)
     6300    0.024    0.000    0.045    0.000 functools.py:34(update_wrapper)
    86600    0.024    0.000    0.024    0.000 {built-in method __new__ of type object at 0x00007FFB2480DCB0}
     4100    0.023    0.000    0.038    0.000 load_grammar.py:536(_rfind)
   159000    0.023    0.000    0.023    0.000 {built-in method builtins.id}
    78800    0.022    0.000    0.023    0.000 tree.py:66(meta)
    67200    0.021    0.000    0.031    0.000 grammar.py:25(__hash__)
10500/4500    0.020    0.000    0.143    0.000 load_grammar.py:389(expansion)
    26900    0.019    0.000    0.035    0.000 grammar.py:18(__eq__)
     2800    0.019    0.000    0.096    0.000 tree_matcher.py:106(_build_recons_rules)
     4100    0.018    0.000    0.090    0.000 load_grammar.py:540(eval_escaping)
14600/8400    0.017    0.000    0.202    0.000 visitors.py:342(_call_userfunc)
   105100    0.015    0.000    0.015    0.000 {method 'append' of 'list' objects}
     9300    0.013    0.000    0.022    0.000 visitors.py:130(_call_userfunc_token)
4000/1100    0.013    0.000    0.236    0.000 visitors.py:362(visit)
5800/1200    0.013    0.000    0.045    0.000 visitors.py:155(_transform_tree)
     6300    0.013    0.000    0.067    0.000 visitors.py:481(__get__)
    15500    0.013    0.000    0.058    0.000 load_grammar.py:384(_flatten)
     4100    0.013    0.000    0.068    0.000 ast.py:51(literal_eval)
     8400    0.012    0.000    0.033    0.000 grammar.py:103(__init__)
13900/12900    0.012    0.000    0.031    0.000 tree.py:134(__hash__)
    83400    0.011    0.000    0.011    0.000 {built-in method builtins.len}
     3500    0.011    0.000    0.047    0.000 load_grammar.py:420(expansions)
1500/1300    0.010    0.000    0.100    0.000 load_grammar.py:405(<listcomp>)
    16100    0.010    0.000    0.012    0.000 lexer.py:265(__eq__)
      100    0.010    0.000    1.986    0.020 tree_matcher.py:89(__init__)
     1100    0.010    0.000    0.020    0.000 load_grammar.py:450(pattern)
     3500    0.009    0.000    0.019    0.000 tree_matcher.py:121(<listcomp>)
    48300    0.009    0.000    0.009    0.000 {method 'pop' of 'list' objects}
     6300    0.008    0.000    0.055    0.000 visitors.py:470(__init__)
     4100    0.008    0.000    0.186    0.000 load_grammar.py:601(literal)
     4900    0.008    0.000    0.029    0.000 tree_matcher.py:57(make_recons_rule)
     2500    0.008    0.000    1.045    0.000 visitors.py:258(transform)
     6300    0.007    0.000    0.232    0.000 visitors.py:478(__call__)
     4700    0.007    0.000    0.007    0.000 lexer.py:41(__init__)
    31500    0.007    0.000    0.007    0.000 {built-in method builtins.setattr}
     6300    0.006    0.000    0.238    0.000 visitors.py:500(_vargs_inline)
      100    0.006    0.000    0.016    0.000 load_grammar.py:793(<setcomp>)
     2500    0.006    0.000    0.259    0.000 load_grammar.py:674(nr_deepcopy_tree)
     4300    0.006    0.000    0.016    0.000 {built-in method builtins.max}
    12300    0.005    0.000    0.009    0.000 load_grammar.py:537(<genexpr>)
    10500    0.005    0.000    0.009    0.000 load_grammar.py:759(<genexpr>)
      100    0.004    0.000    0.005    0.000 Graph.py:28(rename_sheet)
     4100    0.004    0.000    0.052    0.000 ast.py:30(parse)
     5400    0.004    0.000    0.006    0.000 lexer.py:50(__hash__)
     8200    0.004    0.000    0.004    0.000 {method 'rfind' of 'str' objects}
      100    0.004    0.000    0.007    0.000 tree_matcher.py:28(_best_from_group)
  300/200    0.004    0.000    2.011    0.010 Workbook.py:35(run_func)
     3500    0.004    0.000    0.012    0.000 load_grammar.py:798(<lambda>)
     1500    0.004    0.000    0.016    0.000 utils.py:190(<listcomp>)
      100    0.003    0.000    2.004    0.020 Workbook.py:936(rename_sheet)
     2000    0.003    0.000    0.023    0.000 load_grammar.py:631(expansions)
     4000    0.003    0.000    0.008    0.000 {method 'add' of 'set' objects}
     5100    0.003    0.000    0.003    0.000 grammar.py:69(__init__)
      100    0.003    0.000    0.450    0.004 load_grammar.py:710(<listcomp>)
    12000    0.003    0.000    0.003    0.000 {method 'values' of 'collections.OrderedDict' objects}
     1000    0.003    0.000    0.012    0.000 load_grammar.py:346(expr)
     6400    0.003    0.000    0.003    0.000 {method 'update' of 'dict' objects}
    11300    0.003    0.000    0.003    0.000 {method 'replace' of 'str' objects}
      100    0.003    0.000    0.004    0.000 Workbook.py:1003(move_sheet)
      200    0.003    0.000    0.016    0.000 utils.py:271(<listcomp>)
     4100    0.003    0.000    0.004    0.000 {built-in method builtins.all}
     2000    0.003    0.000    0.005    0.000 load_grammar.py:637(<lambda>)
     2000    0.002    0.000    0.008    0.000 lexer.py:81(to_regexp)
      600    0.002    0.000    0.008    0.000 {method 'sort' of 'list' objects}
     4600    0.002    0.000    0.003    0.000 load_grammar.py:668(value)
      100    0.002    0.000    0.003    0.000 load_grammar.py:806(<setcomp>)
    11600    0.002    0.000    0.002    0.000 tree.py:175(<lambda>)
     4900    0.002    0.000    0.002    0.000 tree_matcher.py:17(__init__)
      100    0.002    0.000    0.007    0.000 tree_matcher.py:115(<setcomp>)
     2100    0.002    0.000    0.007    0.000 lexer.py:125(__init__)
     4800    0.002    0.000    0.002    0.000 grammar.py:42(__init__)
      100    0.002    0.000    0.006    0.000 tree_matcher.py:108(<setcomp>)
     2000    0.002    0.000    0.002    0.000 {method 'translate' of 'str' objects}
     5000    0.002    0.000    0.002    0.000 {method 'startswith' of 'str' objects}
     1500    0.002    0.000    0.018    0.000 utils.py:184(dedup_list)
     3500    0.002    0.000    0.002    0.000 load_grammar.py:621(expansion)
     1500    0.002    0.000    0.032    0.000 tree.py:169(find_pred)
     6900    0.002    0.000    0.002    0.000 tree_matcher.py:12(is_discarded_terminal)
     2100    0.002    0.000    0.002    0.000 {built-in method _abc._abc_instancecheck}
     3500    0.002    0.000    0.007    0.000 grammar.py:22(__ne__)
     4100    0.002    0.000    0.002    0.000 ast.py:76(_convert)
     1400    0.002    0.000    0.010    0.000 tree_matcher.py:61(make_recons_rule_to_term)
      100    0.002    0.000    0.128    0.001 load_grammar.py:693(<listcomp>)
     9300    0.002    0.000    0.002    0.000 visitors.py:178(__default_token__)
     2000    0.002    0.000    0.004    0.000 re.py:270(escape)
     5400    0.002    0.000    0.002    0.000 grammar.py:15(__init__)
     2100    0.002    0.000    0.002    0.000 lexer.py:70(_get_flags)
      200    0.001    0.000    0.002    0.000 utils.py:96(check_new_name)
      100    0.001    0.000    0.003    0.000 tree_matcher.py:116(<setcomp>)
     1500    0.001    0.000    0.001    0.000 lexer.py:53(__eq__)
     2500    0.001    0.000    0.009    0.000 load_grammar.py:639(<genexpr>)
     3100    0.001    0.000    0.001    0.000 visitors.py:108(__init__)
     8900    0.001    0.000    0.001    0.000 grammar.py:121(__hash__)
      500    0.001    0.000    0.010    0.000 {method 'join' of 'str' objects}
     6500    0.001    0.000    0.001    0.000 typing.py:1149(cast)
     2100    0.001    0.000    0.003    0.000 abc.py:96(__instancecheck__)
      100    0.001    0.000    1.989    0.020 reconstruct.py:80(__init__)
     1500    0.001    0.000    0.033    0.000 tree.py:173(find_data)
     4900    0.001    0.000    0.001    0.000 load_grammar.py:572(<genexpr>)
      100    0.001    0.000    0.003    0.000 Workbook.py:868(new_sheet)
     3500    0.001    0.000    0.001    0.000 {built-in method builtins.any}
     2100    0.001    0.000    0.001    0.000 load_grammar.py:809(<lambda>)
    10300    0.001    0.000    0.001    0.000 {method 'items' of 'dict' objects}
      100    0.001    0.000    0.005    0.000 load_grammar.py:246(_add_recurse_rule)
      600    0.001    0.000    0.002    0.000 load_grammar.py:411(alias)
      100    0.001    0.000    0.134    0.001 load_grammar.py:694(<listcomp>)
      100    0.001    0.000    0.003    0.000 copy.py:66(copy)
     4100    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
      100    0.001    0.000    0.002    0.000 load_grammar.py:446(<dictcomp>)
     1200    0.001    0.000    0.046    0.000 visitors.py:159(transform)
      100    0.001    0.000    0.007    0.000 load_grammar.py:375(maybe)
     2000    0.001    0.000    0.001    0.000 lexer.py:88(max_width)
     3500    0.001    0.000    0.001    0.000 load_grammar.py:431(expansion)
     3000    0.001    0.000    0.001    0.000 load_grammar.py:617(pattern)
     3000    0.001    0.000    0.001    0.000 load_grammar.py:663(value)
     2500    0.001    0.000    0.001    0.000 tree_matcher.py:44(<lambda>)
      500    0.001    0.000    0.001    0.000 load_grammar.py:640(<setcomp>)
     2000    0.001    0.000    0.001    0.000 lexer.py:84(min_width)
      100    0.001    0.000    0.001    0.000 load_grammar.py:642(expr)
      100    0.001    0.000    0.001    0.000 {method '__reduce_ex__' of 'object' objects}
      400    0.001    0.000    0.002    0.000 grammar.py:124(__eq__)
      900    0.001    0.000    0.001    0.000 load_grammar.py:210(_args_as_int)
      500    0.001    0.000    0.002    0.000 load_grammar.py:613(_make_joined_pattern)
      100    0.001    0.000    0.001    0.000 reconstruct.py:83(<dictcomp>)
      600    0.001    0.000    0.001    0.000 utils.py:78(get_hidden_name)
      300    0.001    0.000    0.001    0.000 Graph.py:128(get_sheet_parents)
      100    0.001    0.000    0.001    0.000 copy.py:258(_reconstruct)
     1100    0.001    0.000    0.001    0.000 tree.py:32(__init__)
      100    0.000    0.000    0.000    0.000 load_grammar.py:235(_name_rule)
      200    0.000    0.000    0.001    0.000 visitors.py:163(__mul__)
      100    0.000    0.000    0.003    0.000 load_grammar.py:443(__init__)
     1490    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
      800    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
     1600    0.000    0.000    0.000    0.000 {built-in method builtins.next}
      200    0.000    0.000    0.001    0.000 visitors.py:263(__mul__)
      100    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
      100    0.000    0.000    0.001    0.000 load_grammar.py:763(<listcomp>)
      100    0.000    0.000    0.009    0.000 tree_matcher.py:42(_best_rules_from_group)
      100    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
     2700    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
      100    0.000    0.000    0.001    0.000 load_grammar.py:516(__init__)
      100    0.000    0.000    0.002    0.000 load_grammar.py:240(_add_rule)
      200    0.000    0.000    0.016    0.000 utils.py:269(classify_bool)
      100    0.000    0.000    0.000    0.000 Parser.py:349(__init__)
     1200    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
      100    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
      200    0.000    0.000    0.000    0.000 load_grammar.py:201(_will_not_get_removed)
      200    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.OrderedDict' objects}
      200    0.000    0.000    0.001    0.000 load_grammar.py:219(expansion)
     1100    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
      200    0.000    0.000    0.000    0.000 Workbook.py:857(recompute_sheet_parents)
      200    0.000    0.000    0.001    0.000 {built-in method builtins.sum}
      200    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      200    0.000    0.000    0.000    0.000 Workbook.py:505(num_sheets)
      100    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
      100    0.000    0.000    0.000    0.000 Sheet.py:25(__init__)
      200    0.000    0.000    0.001    0.000 load_grammar.py:222(expansions)
      400    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
      400    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
      100    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
      100    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
      100    0.000    0.000    0.000    0.000 Sheet.py:134(set_sheet_name)
      100    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
      100    0.000    0.000    0.000    0.000 Graph.py:121(has_sheet)
      100    0.000    0.000    0.000    0.000 copyreg.py:90(__newobj__)
      500    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
      100    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
      100    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      100    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
      100    0.000    0.000    0.000    0.000 Graph.py:124(add_sheet)
      100    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
      200    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
      100    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_copy_cells... #######################
for test <function pro_copy_cells at 0x000001311CEB9430> total time: 48.95824390000003
Total Logs
         6400072 function calls (6266711 primitive calls) in 4.990 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      198    0.293    0.001    0.585    0.003 grammar_analysis.py:78(calculate_sets)
     2178    0.268    0.000    0.982    0.000 earley.py:78(predict_and_complete)
101079/100683    0.190    0.000    0.956    0.000 visitors.py:111(_call_userfunc)
   258291    0.189    0.000    0.341    0.000 grammar.py:18(__eq__)
639045/587466    0.168    0.000    0.214    0.000 {built-in method builtins.hash}
   111076    0.163    0.000    0.196    0.000 typing.py:868(__new__)
    12177    0.163    0.000    0.279    0.000 tree.py:137(iter_subtrees)
    97515    0.159    0.000    0.241    0.000 earley_common.py:9(__init__)
  1001583    0.153    0.000    0.157    0.000 {built-in method builtins.isinstance}
   457677    0.145    0.000    0.213    0.000 grammar.py:25(__hash__)
     3960    0.132    0.000    0.388    0.000 visitors.py:293(transform)
204324/160665    0.121    0.000    0.184    0.000 {built-in method builtins.getattr}
      495    0.118    0.000    0.401    0.001 earley_forest.py:283(visit)
     6732    0.114    0.000    1.202    0.000 visitors.py:278(transform)
165528/151470    0.105    0.000    0.897    0.000 visitors.py:143(_transform_children)
   159283    0.102    0.000    0.128    0.000 lexer.py:265(__eq__)
     4059    0.102    0.000    0.102    0.000 {built-in method builtins.compile}
    71874    0.087    0.000    0.238    0.000 visitors.py:171(__default__)
    85635    0.070    0.000    0.099    0.000 tree.py:147(<listcomp>)
    80586    0.065    0.000    0.101    0.000 utils.py:345(add)
    19998    0.063    0.000    0.192    0.000 grammar_analysis.py:187(_expand_rule)
    64251    0.049    0.000    0.049    0.000 grammar_analysis.py:70(update_set)
       99    0.048    0.000    2.055    0.021 load_grammar.py:690(compile)
     8613    0.044    0.000    0.105    0.000 earley_forest.py:50(__init__)
341098/341091    0.043    0.000    0.043    0.000 {built-in method builtins.len}
    83358    0.042    0.000    0.042    0.000 tree.py:61(__init__)
    19899    0.041    0.000    0.050    0.000 tree.py:179(expand_kids_by_data)
    65633    0.038    0.000    0.084    0.000 {method 'add' of 'set' objects}
   247005    0.038    0.000    0.038    0.000 {built-in method builtins.id}
    59499    0.038    0.000    0.760    0.000 visitors.py:275(_transform_tree)
   229216    0.035    0.000    0.035    0.000 {method 'append' of 'list' objects}
     4554    0.035    0.000    0.127    0.000 earley.py:135(<listcomp>)
     1188    0.035    0.000    0.116    0.000 xearley.py:41(scan)
   112957    0.034    0.000    0.034    0.000 {built-in method __new__ of type object at 0x00007FFB2480DCB0}
    73953    0.034    0.000    0.035    0.000 earley_common.py:28(__eq__)
    12375    0.034    0.000    0.244    0.000 utils.py:275(bfs)
   170874    0.031    0.000    0.031    0.000 grammar.py:121(__hash__)
     4059    0.031    0.000    0.215    0.000 load_grammar.py:566(_literal_to_pattern)
     6237    0.028    0.000    0.050    0.000 functools.py:34(update_wrapper)
    33759    0.027    0.000    0.045    0.000 utils.py:342(__contains__)
    34254    0.026    0.000    0.034    0.000 grammar_analysis.py:17(__init__)
    80685    0.026    0.000    0.027    0.000 tree.py:66(meta)
     7920    0.024    0.000    0.112    0.000 earley_forest.py:437(_visit_node_out_helper)
     3960    0.022    0.000    0.054    0.000 earley_forest.py:603(transform_packed_node)
     2772    0.021    0.000    0.107    0.000 tree_matcher.py:106(_build_recons_rules)
      396    0.021    0.000    0.043    0.000 utils.py:23(classify)
10395/4455    0.021    0.000    0.150    0.000 load_grammar.py:389(expansion)
     4059    0.021    0.000    0.150    0.000 load_grammar.py:540(eval_escaping)
    70884    0.020    0.000    0.020    0.000 {built-in method builtins.next}
      198    0.020    0.000    0.711    0.004 grammar_analysis.py:141(__init__)
   116622    0.019    0.000    0.019    0.000 earley_common.py:31(__hash__)
      198    0.019    0.000    0.977    0.005 earley.py:32(__init__)
14454/8316    0.019    0.000    0.213    0.000 visitors.py:342(_call_userfunc)
      495    0.018    0.000    1.635    0.003 earley.py:262(parse)
     7920    0.018    0.000    0.036    0.000 {built-in method builtins.sorted}
    23265    0.018    0.000    0.020    0.000 {built-in method fromkeys}
    23265    0.016    0.000    0.037    0.000 utils.py:339(__init__)
     9999    0.016    0.000    0.035    0.000 visitors.py:130(_call_userfunc_token)
    34254    0.016    0.000    0.039    0.000 grammar_analysis.py:45(__hash__)
     8811    0.015    0.000    0.048    0.000 earley_forest.py:64(add_family)
    13064    0.015    0.000    0.015    0.000 {method 'match' of 're.Pattern' objects}
     8712    0.015    0.000    0.039    0.000 grammar.py:103(__init__)
6039/1287    0.015    0.000    0.063    0.000 visitors.py:155(_transform_tree)
     2475    0.015    0.000    0.265    0.000 grammar_analysis.py:180(expand_rule)
     4059    0.014    0.000    0.125    0.000 ast.py:51(literal_eval)
     8811    0.014    0.000    0.023    0.000 earley_forest.py:131(__init__)
      495    0.014    0.000    0.060    0.000 earley.py:188(scan)
3960/1089    0.014    0.000    0.250    0.000 visitors.py:362(visit)
    15345    0.014    0.000    0.063    0.000 load_grammar.py:384(_flatten)
     6237    0.014    0.000    0.074    0.000 visitors.py:481(__get__)
       99    0.013    0.000    2.186    0.022 tree_matcher.py:89(__init__)
    56913    0.012    0.000    0.012    0.000 {method 'pop' of 'list' objects}
     3465    0.012    0.000    0.051    0.000 load_grammar.py:420(expansions)
13959/12969    0.011    0.000    0.031    0.000 tree.py:134(__hash__)
     8811    0.011    0.000    0.046    0.000 earley_common.py:25(advance)
    33858    0.011    0.000    0.011    0.000 grammar_analysis.py:28(next)
1485/1287    0.010    0.000    0.104    0.000 load_grammar.py:405(<listcomp>)
    23265    0.010    0.000    0.015    0.000 utils.py:348(__iter__)
     3960    0.010    0.000    0.027    0.000 earley_forest.py:631(visit_packed_node_in)
     7920    0.010    0.000    0.053    0.000 earley_forest.py:85(children)
     1089    0.010    0.000    0.020    0.000 load_grammar.py:450(pattern)
     4059    0.010    0.000    0.237    0.000 load_grammar.py:601(literal)
       99    0.010    0.000    4.999    0.050 Workbook.py:421(copy_cells)
      297    0.010    0.000    1.308    0.004 tree_matcher.py:148(match_tree)
     3168    0.010    0.000    0.026    0.000 earley_forest.py:581(transform_symbol_node)
     3465    0.010    0.000    0.021    0.000 tree_matcher.py:121(<listcomp>)
     4851    0.009    0.000    0.033    0.000 tree_matcher.py:57(make_recons_rule)
     6237    0.009    0.000    0.060    0.000 visitors.py:470(__init__)
      198    0.008    0.000    1.019    0.005 xearley.py:39(_parse)
     2475    0.008    0.000    1.164    0.000 visitors.py:258(transform)
     3960    0.008    0.000    0.083    0.000 earley_forest.py:638(visit_packed_node_out)
     3960    0.008    0.000    0.044    0.000 earley_forest.py:422(visit_symbol_node_in)
    12573    0.008    0.000    0.011    0.000 {method 'setdefault' of 'dict' objects}
     4653    0.008    0.000    0.008    0.000 lexer.py:41(__init__)
     3960    0.008    0.000    0.071    0.000 earley_forest.py:625(visit_symbol_node_in)
     9108    0.007    0.000    0.016    0.000 parser_frontends.py:184(match)
     3168    0.007    0.000    0.021    0.000 earley_forest.py:565(_call_rule_func)
     6237    0.007    0.000    0.291    0.000 visitors.py:500(_vargs_inline)
    36036    0.007    0.000    0.007    0.000 {built-in method builtins.iter}
     4455    0.007    0.000    0.018    0.000 {built-in method builtins.max}
     6237    0.007    0.000    0.284    0.000 visitors.py:478(__call__)
     3960    0.007    0.000    0.015    0.000 earley_forest.py:427(visit_packed_node_in)
       99    0.007    0.000    4.990    0.050 Workbook.py:282(transfer_cells)
     2475    0.007    0.000    0.285    0.000 load_grammar.py:674(nr_deepcopy_tree)
    31185    0.007    0.000    0.007    0.000 {built-in method builtins.setattr}
     7920    0.006    0.000    0.009    0.000 earley_forest.py:145(sort_key)
    40491    0.006    0.000    0.006    0.000 {method 'append' of 'collections.deque' objects}
      792    0.006    0.000    0.009    0.000 utils.py:179(convert_location_to_idx)
     3168    0.006    0.000    0.011    0.000 earley_forest.py:556(_collapse_ambig)
      297    0.006    0.000    0.010    0.000 tree_matcher.py:28(_best_from_group)
     3168    0.006    0.000    0.020    0.000 tree_matcher.py:48(_match)
      297    0.006    0.000    0.157    0.001 earley.py:171(_parse)
    12177    0.006    0.000    0.010    0.000 load_grammar.py:537(<genexpr>)
     2079    0.006    0.000    0.006    0.000 earley.py:58(<listcomp>)
       99    0.006    0.000    0.016    0.000 load_grammar.py:793(<setcomp>)
    35838    0.006    0.000    0.006    0.000 {method 'pop' of 'collections.deque' objects}
    10395    0.005    0.000    0.010    0.000 load_grammar.py:759(<genexpr>)
     4059    0.005    0.000    0.022    0.000 load_grammar.py:536(_rfind)
     3956    0.005    0.000    0.019    0.000 re.py:188(match)
     3960    0.005    0.000    0.005    0.000 earley_forest.py:499(__init__)
     4546    0.005    0.000    0.008    0.000 re.py:289(_compile)
     4059    0.005    0.000    0.108    0.000 ast.py:30(parse)
      297    0.005    0.000    0.726    0.002 Workbook.py:638(recompute_cell_and_parents)
      990    0.005    0.000    0.009    0.000 reconstruct.py:33(__default__)
     5445    0.005    0.000    0.005    0.000 grammar.py:69(__init__)
      297    0.005    0.000    0.751    0.003 Workbook.py:727(set_cell_contents)
     8118    0.004    0.000    0.004    0.000 {method 'rfind' of 'str' objects}
     3960    0.004    0.000    0.006    0.000 earley_forest.py:155(children)
     1782    0.004    0.000    0.006    0.000 lexer.py:213(_future_new)
     2572    0.004    0.000    0.014    0.000 {method 'join' of 'str' objects}
     3960    0.004    0.000    0.007    0.000 earley_forest.py:70(load_paths)
     1980    0.004    0.000    0.025    0.000 load_grammar.py:631(expansions)
      198    0.004    0.000    0.006    0.000 earley.py:52(<setcomp>)
    11880    0.004    0.000    0.004    0.000 {method 'remove' of 'set' objects}
     1485    0.004    0.000    0.016    0.000 utils.py:190(<listcomp>)
      198    0.004    0.000    1.333    0.007 parser_frontends.py:100(parse)
      297    0.004    0.000    0.005    0.000 Graph.py:330(tarjans)
     5346    0.004    0.000    0.005    0.000 lexer.py:50(__hash__)
     2178    0.004    0.000    0.014    0.000 tree_matcher.py:65(parse_rulename)
      590    0.004    0.000    0.015    0.000 Parser.py:253(cell)
     3465    0.004    0.000    0.011    0.000 load_grammar.py:798(<lambda>)
      295    0.004    0.000    0.700    0.002 Workbook.py:544(get_formula_value)
      891    0.004    0.000    0.005    0.000 utils.py:194(convert_idx_to_location)
     3960    0.004    0.000    0.073    0.000 earley_forest.py:450(visit_packed_node_out)
       99    0.003    0.000    0.527    0.005 load_grammar.py:710(<listcomp>)
      495    0.003    0.000    0.006    0.000 earley_forest.py:523(__init__)
    12177    0.003    0.000    0.003    0.000 {method 'values' of 'collections.OrderedDict' objects}
      990    0.003    0.000    0.012    0.000 load_grammar.py:346(expr)
      198    0.003    0.000    0.010    0.000 grammar_analysis.py:82(<setcomp>)
     6534    0.003    0.000    0.003    0.000 grammar.py:42(__init__)
     1980    0.003    0.000    0.006    0.000 load_grammar.py:637(<lambda>)
     6338    0.003    0.000    0.003    0.000 {method 'update' of 'dict' objects}
    11187    0.003    0.000    0.003    0.000 {method 'replace' of 'str' objects}
     1774    0.003    0.000    0.005    0.000 Sheet.py:93(get_cell_value)
      295    0.003    0.000    0.004    0.000 Parser.py:211(mul_expr)
     7920    0.003    0.000    0.005    0.000 utils.py:357(__len__)
      792    0.003    0.000    0.010    0.000 {method 'sort' of 'list' objects}
      792    0.003    0.000    0.008    0.000 tree_matcher.py:21(__call__)
      592    0.003    0.000    0.007    0.000 Cell.py:81(set_cell_value)
      198    0.003    0.000    0.004    0.000 tree_matcher.py:178(<dictcomp>)
     2475    0.003    0.000    0.007    0.000 typing.py:255(inner)
     7920    0.003    0.000    0.003    0.000 earley_forest.py:141(is_empty)
     4059    0.003    0.000    0.004    0.000 {built-in method builtins.all}
     1683    0.003    0.000    0.004    0.000 earley_forest.py:193(__init__)
      198    0.003    0.000    0.015    0.000 utils.py:271(<listcomp>)
     1782    0.003    0.000    0.009    0.000 lexer.py:202(__new__)
     2475    0.003    0.000    0.004    0.000 typing.py:720(__hash__)
     1287    0.003    0.000    0.003    0.000 earley_forest.py:432(visit_token_node)
     2277    0.003    0.000    0.003    0.000 {built-in method _abc._abc_instancecheck}
      198    0.003    0.000    0.004    0.000 earley.py:53(<setcomp>)
     1980    0.003    0.000    0.008    0.000 lexer.py:81(to_regexp)
       99    0.003    0.000    0.008    0.000 tree_matcher.py:115(<setcomp>)
     3168    0.003    0.000    0.040    0.000 earley_forest.py:444(visit_symbol_node_out)
    11484    0.003    0.000    0.003    0.000 tree.py:175(<lambda>)
       99    0.003    0.000    0.003    0.000 load_grammar.py:806(<setcomp>)
     1778    0.003    0.000    0.012    0.000 utils.py:131(check_valid_cell_location)
      392    0.002    0.000    0.032    0.000 Workbook.py:582(recompute_cell_value)
     4851    0.002    0.000    0.002    0.000 tree_matcher.py:17(__init__)
     4554    0.002    0.000    0.004    0.000 load_grammar.py:668(value)
       99    0.002    0.000    0.006    0.000 tree_matcher.py:108(<setcomp>)
     7821    0.002    0.000    0.002    0.000 tree_matcher.py:12(is_discarded_terminal)
     6831    0.002    0.000    0.002    0.000 grammar.py:15(__init__)
     2079    0.002    0.000    0.008    0.000 lexer.py:125(__init__)
      495    0.002    0.000    0.006    0.000 earley.py:284(<listcomp>)
     1980    0.002    0.000    0.002    0.000 {method 'translate' of 'str' objects}
     8118    0.002    0.000    0.002    0.000 earley_forest.py:101(__hash__)
      495    0.002    0.000    0.403    0.001 earley_forest.py:535(visit)
     4950    0.002    0.000    0.002    0.000 {method 'startswith' of 'str' objects}
     7920    0.002    0.000    0.002    0.000 earley_forest.py:548(_check_cycle)
      792    0.002    0.000    0.003    0.000 earley_forest.py:591(transform_intermediate_node)
     3465    0.002    0.000    0.003    0.000 load_grammar.py:621(expansion)
     1386    0.002    0.000    0.011    0.000 tree_matcher.py:61(make_recons_rule_to_term)
       99    0.002    0.000    0.136    0.001 load_grammar.py:693(<listcomp>)
     8811    0.002    0.000    0.002    0.000 earley_forest.py:169(__hash__)
  792/396    0.002    0.000    1.337    0.003 reconstruct.py:85(_reconstruct)
     1485    0.002    0.000    0.036    0.000 tree.py:169(find_pred)
     3960    0.002    0.000    0.002    0.000 earley_forest.py:158(<listcomp>)
     2561    0.002    0.000    0.003    0.000 utils.py:78(get_hidden_name)
     1485    0.002    0.000    0.018    0.000 utils.py:184(dedup_list)
  885/295    0.002    0.000    0.030    0.000 visitors.py:444(inner)
     9172    0.002    0.000    0.002    0.000 {method 'lower' of 'str' objects}
      590    0.002    0.000    0.008    0.000 Workbook.py:806(get_cell_value)
     3168    0.002    0.000    0.003    0.000 earley_forest.py:571(_call_ambig_func)
     4059    0.002    0.000    0.002    0.000 ast.py:76(_convert)
      495    0.002    0.000    0.003    0.000 earley_forest.py:390(__init__)
     1980    0.002    0.000    0.003    0.000 parse_tree_builder.py:20(__call__)
  885/295    0.002    0.000    0.032    0.000 visitors.py:421(_visit_tree)
     3465    0.002    0.000    0.008    0.000 grammar.py:22(__ne__)
      885    0.002    0.000    0.022    0.000 Parser.py:40(fix_formula)
      495    0.002    0.000    0.405    0.001 earley_forest.py:397(transform)
     9900    0.002    0.000    0.002    0.000 {method 'popleft' of 'collections.deque' objects}
     9801    0.002    0.000    0.002    0.000 visitors.py:178(__default_token__)
      297    0.002    0.000    0.010    0.000 Sheet.py:60(set_cell_contents)
     1980    0.002    0.000    0.004    0.000 re.py:270(escape)
     4046    0.002    0.000    0.002    0.000 {method 'get' of 'dict' objects}
     2277    0.002    0.000    0.004    0.000 abc.py:96(__instancecheck__)
      295    0.002    0.000    0.002    0.000 Parser.py:97(__init__)
     2079    0.002    0.000    0.002    0.000 lexer.py:70(_get_flags)
      297    0.002    0.000    0.004    0.000 Workbook.py:714(clean_children_cells)
  885/295    0.001    0.000    0.024    0.000 visitors.py:430(<listcomp>)
      394    0.001    0.000    0.003    0.000 Workbook.py:687(_get_sheet_name_location)
     6039    0.001    0.000    0.001    0.000 grammar_analysis.py:149(<lambda>)
     2475    0.001    0.000    0.010    0.000 load_grammar.py:639(<genexpr>)
     2970    0.001    0.000    0.001    0.000 visitors.py:108(__init__)
     4851    0.001    0.000    0.001    0.000 load_grammar.py:572(<genexpr>)
       99    0.001    0.000    0.003    0.000 tree_matcher.py:116(<setcomp>)
       99    0.001    0.000    2.188    0.022 reconstruct.py:80(__init__)
       99    0.001    0.000    0.153    0.002 load_grammar.py:694(<listcomp>)
     2079    0.001    0.000    0.001    0.000 load_grammar.py:809(<lambda>)
     1485    0.001    0.000    0.001    0.000 lexer.py:53(__eq__)
      297    0.001    0.000    0.014    0.000 tree_matcher.py:42(_best_rules_from_group)
     6039    0.001    0.000    0.001    0.000 grammar_analysis.py:172(<lambda>)
     1485    0.001    0.000    0.037    0.000 tree.py:173(find_data)
      394    0.001    0.000    0.002    0.000 utils.py:207(remove_exponent)
      198    0.001    0.000    0.007    0.000 Parser.py:389(CELLREF_NO_ABS)
       99    0.001    0.000    0.004    0.000 load_grammar.py:246(_add_recurse_rule)
      198    0.001    0.000    0.004    0.000 grammar_analysis.py:145(<dictcomp>)
      198    0.001    0.000    0.002    0.000 parser_frontends.py:96(_make_lexer_thread)
     3366    0.001    0.000    0.002    0.000 tree_matcher.py:44(<lambda>)
     3465    0.001    0.000    0.001    0.000 {built-in method builtins.any}
  885/295    0.001    0.000    0.024    0.000 visitors.py:429(visit_children)
     2178    0.001    0.000    0.001    0.000 tree.py:32(__init__)
      297    0.001    0.000    0.002    0.000 earley.py:245(<setcomp>)
      198    0.001    0.000    0.001    0.000 grammar_analysis.py:60(__init__)
     6435    0.001    0.000    0.001    0.000 typing.py:1149(cast)
     1683    0.001    0.000    0.001    0.000 utils.py:354(__bool__)
     1287    0.001    0.000    0.064    0.000 visitors.py:159(transform)
       99    0.001    0.000    0.003    0.000 load_grammar.py:446(<dictcomp>)
      297    0.001    0.000    0.752    0.003 Workbook.py:35(run_func)
      198    0.001    0.000    0.023    0.000 grammar_analysis.py:175(<dictcomp>)
     3267    0.001    0.000    0.001    0.000 {built-in method builtins.hasattr}
      590    0.001    0.000    0.003    0.000 re.py:203(sub)
      198    0.001    0.000    0.003    0.000 Parser.py:382(cell)
      590    0.001    0.000    0.001    0.000 {method 'sub' of 're.Pattern' objects}
       99    0.001    0.000    0.003    0.000 copy.py:66(copy)
      198    0.001    0.000    1.334    0.007 lark.py:640(parse)
      495    0.001    0.000    0.001    0.000 load_grammar.py:640(<setcomp>)
      594    0.001    0.000    0.002    0.000 load_grammar.py:411(alias)
       99    0.001    0.000    0.002    0.000 load_grammar.py:642(expr)
      297    0.001    0.000    0.003    0.000 Cell.py:65(set_contents)
       99    0.001    0.000    0.008    0.000 load_grammar.py:375(maybe)
       99    0.001    0.000    1.338    0.014 reconstruct.py:96(reconstruct)
     3465    0.001    0.000    0.001    0.000 load_grammar.py:431(expansion)
      297    0.001    0.000    0.003    0.000 Workbook.py:778(get_cell_contents)
     2178    0.001    0.000    0.001    0.000 {method 'groups' of 're.Match' objects}
      295    0.001    0.000    0.006    0.000 Sheet.py:104(set_cell_value)
     1188    0.001    0.000    0.001    0.000 {method 'group' of 're.Match' objects}
     1980    0.001    0.000    0.001    0.000 lexer.py:88(max_width)
     1980    0.001    0.000    0.001    0.000 lexer.py:84(min_width)
      885    0.001    0.000    0.001    0.000 utils.py:295(get_highest_precedence_error)
     2970    0.001    0.000    0.001    0.000 load_grammar.py:663(value)
      792    0.001    0.000    0.001    0.000 reconstruct.py:15(is_iter_empty)
      297    0.001    0.000    0.001    0.000 Sheet.py:124(update_extent)
     2970    0.001    0.000    0.001    0.000 load_grammar.py:617(pattern)
      198    0.001    0.000    0.002    0.000 grammar_analysis.py:166(<dictcomp>)
      792    0.001    0.000    0.007    0.000 earley_forest.py:447(visit_intermediate_node_out)
     1771    0.001    0.000    0.001    0.000 Cell.py:125(get_value)
      198    0.001    0.000    0.025    0.000 grammar_analysis.py:160(<dictcomp>)
       99    0.001    0.000    0.003    0.000 Workbook.py:700(add_children_cells)
      495    0.001    0.000    0.002    0.000 load_grammar.py:613(_make_joined_pattern)
      198    0.001    0.000    0.001    0.000 grammar_analysis.py:163(<dictcomp>)
       99    0.001    0.000    0.001    0.000 {method '__reduce_ex__' of 'object' objects}
      396    0.001    0.000    0.002    0.000 grammar.py:124(__eq__)
      986    0.001    0.000    0.001    0.000 Sheet.py:120(get_cell)
      394    0.001    0.000    0.001    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
      495    0.001    0.000    0.001    0.000 earley_forest.py:232(__init__)
      199    0.001    0.000    0.001    0.000 Workbook.py:540(get_sheet_name_from_hidden)
      689    0.001    0.000    0.001    0.000 utils.py:212(is_formula)
      891    0.001    0.000    0.001    0.000 load_grammar.py:210(_args_as_int)
      392    0.001    0.000    0.001    0.000 Workbook.py:575(get_cell_from_location)
      396    0.001    0.000    0.001    0.000 lark.py:220(__getattr__)
     1881    0.001    0.000    0.001    0.000 {method 'upper' of 'str' objects}
       99    0.001    0.000    0.004    0.000 load_grammar.py:443(__init__)
       99    0.001    0.000    0.001    0.000 utils.py:307(error_matcher)
      198    0.001    0.000    0.001    0.000 visitors.py:163(__mul__)
       99    0.001    0.000    0.001    0.000 load_grammar.py:235(_name_rule)
      198    0.001    0.000    0.001    0.000 parse_tree_builder.py:145(__call__)
       99    0.001    0.000    0.001    0.000 reconstruct.py:83(<dictcomp>)
     1683    0.001    0.000    0.001    0.000 earley_forest.py:207(__hash__)
      394    0.001    0.000    0.001    0.000 {method 'split' of 'str' objects}
       99    0.001    0.000    0.001    0.000 load_grammar.py:445(<setcomp>)
      784    0.001    0.000    0.001    0.000 Graph.py:137(get_parents_from_cell)
     3564    0.001    0.000    0.001    0.000 tree_matcher.py:43(<lambda>)
       99    0.001    0.000    0.001    0.000 copy.py:258(_reconstruct)
      394    0.001    0.000    0.001    0.000 {method 'normalize' of 'decimal.Decimal' objects}
      196    0.000    0.000    0.001    0.000 Graph.py:96(update_child)
      891    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
      198    0.000    0.000    0.001    0.000 visitors.py:263(__mul__)
      891    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
      297    0.000    0.000    0.001    0.000 Sheet.py:99(get_cell_contents)
       99    0.000    0.000    0.001    0.000 load_grammar.py:516(__init__)
       99    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
      198    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
      295    0.000    0.000    0.033    0.000 visitors.py:415(visit)
     1586    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      198    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
       99    0.000    0.000    0.001    0.000 load_grammar.py:763(<listcomp>)
      198    0.000    0.000    0.000    0.000 common.py:83(__init__)
      792    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
     1876    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
      198    0.000    0.000    0.001    0.000 load_grammar.py:201(_will_not_get_removed)
       99    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
     1188    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
     1083    0.000    0.000    0.000    0.000 Cell.py:128(get_contents)
       99    0.000    0.000    0.001    0.000 load_grammar.py:240(_add_rule)
      198    0.000    0.000    0.001    0.000 load_grammar.py:219(expansion)
      198    0.000    0.000    0.015    0.000 utils.py:269(classify_bool)
      211    0.000    0.000    0.000    0.000 {built-in method builtins.min}
      694    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
     1287    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      198    0.000    0.000    0.001    0.000 {built-in method builtins.sum}
      594    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      693    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
      495    0.000    0.000    0.000    0.000 {method 'clear' of 'set' objects}
      297    0.000    0.000    0.000    0.000 tree_matcher.py:74(__init__)
      495    0.000    0.000    0.000    0.000 earley.py:254(<setcomp>)
       99    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
      396    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
     1089    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
       99    0.000    0.000    0.000    0.000 Parser.py:378(__init__)
      198    0.000    0.000    0.002    0.000 load_grammar.py:222(expansions)
       99    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
      295    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
      491    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
       99    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
       99    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
      594    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      490    0.000    0.000    0.000    0.000 Cell.py:135(get_children)
      199    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
       99    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
      4/1    0.000    0.000    0.000    0.000 sre_parse.py:493(_parse)
       99    0.000    0.000    0.000    0.000 copyreg.py:90(__newobj__)
      196    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
      295    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
      394    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
      297    0.000    0.000    0.000    0.000 tree_matcher.py:77(lex)
       99    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
      6/1    0.000    0.000    0.000    0.000 sre_compile.py:71(_compile)
       99    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
       99    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
      8/3    0.000    0.000    0.000    0.000 sre_parse.py:174(getwidth)
       34    0.000    0.000    0.000    0.000 sre_parse.py:164(__getitem__)
      4/1    0.000    0.000    0.000    0.000 sre_parse.py:435(_parse_sub)
       17    0.000    0.000    0.000    0.000 sre_parse.py:233(__next)
        1    0.000    0.000    0.001    0.001 sre_compile.py:759(compile)
        1    0.000    0.000    0.000    0.000 sre_compile.py:598(_code)
      2/1    0.000    0.000    0.000    0.000 sre_compile.py:461(_get_literal_prefix)
        1    0.000    0.000    0.000    0.000 sre_compile.py:276(_optimize_charset)
        1    0.000    0.000    0.000    0.000 sre_parse.py:937(parse)
        1    0.000    0.000    0.000    0.000 sre_compile.py:536(_compile_info)
        3    0.000    0.000    0.000    0.000 Cell.py:46(__init__)
       11    0.000    0.000    0.000    0.000 sre_parse.py:286(tell)
       11    0.000    0.000    0.000    0.000 sre_parse.py:254(get)
       13    0.000    0.000    0.000    0.000 sre_parse.py:160(__len__)
       15    0.000    0.000    0.000    0.000 sre_parse.py:249(match)
        7    0.000    0.000    0.000    0.000 sre_parse.py:111(__init__)
        1    0.000    0.000    0.000    0.000 enum.py:938(__and__)
        2    0.000    0.000    0.000    0.000 sre_parse.py:84(opengroup)
        3    0.000    0.000    0.000    0.000 sre_compile.py:423(_simple)
        1    0.000    0.000    0.000    0.000 sre_parse.py:224(__init__)
        7    0.000    0.000    0.000    0.000 sre_parse.py:172(append)
        2    0.000    0.000    0.000    0.000 enum.py:313(__call__)
        1    0.000    0.000    0.000    0.000 sre_compile.py:249(_compile_charset)
        1    0.000    0.000    0.000    0.000 sre_compile.py:492(_get_charset_prefix)
        2    0.000    0.000    0.000    0.000 enum.py:631(__new__)
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        6    0.000    0.000    0.000    0.000 sre_parse.py:81(groups)
        4    0.000    0.000    0.000    0.000 sre_compile.py:65(_combine_flags)
        1    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
        2    0.000    0.000    0.000    0.000 sre_parse.py:96(closegroup)
        6    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
        1    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
        1    0.000    0.000    0.000    0.000 sre_parse.py:76(__init__)
        1    0.000    0.000    0.000    0.000 sre_parse.py:921(fix_flags)
        2    0.000    0.000    0.000    0.000 sre_compile.py:595(isstring)
        3    0.000    0.000    0.000    0.000 sre_parse.py:168(__setitem__)
        3    0.000    0.000    0.000    0.000 sre_compile.py:453(_get_iscased)
        1    0.000    0.000    0.000    0.000 sre_parse.py:355(_escape)
        1    0.000    0.000    0.000    0.000 sre_parse.py:288(seek)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}



##################Running pro_copy_cells2... #######################
for test <function pro_copy_cells2 at 0x000001311CEB9550> total time: 263.67791540000013
Total Logs
         36867617 function calls (36607193 primitive calls) in 25.911 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
    35739    4.196    0.000   14.996    0.000 earley.py:78(predict_and_complete)
  1658151    2.433    0.000    3.722    0.000 earley_common.py:9(__init__)
     5247    1.714    0.000    6.011    0.001 earley_forest.py:283(visit)
4275374/4112465    1.325    0.000    1.700    0.000 {built-in method builtins.hash}
  1396296    1.045    0.000    1.635    0.000 utils.py:345(add)
  1082114    0.885    0.000    1.636    0.000 grammar.py:18(__eq__)
  2313922    0.731    0.000    1.070    0.000 grammar.py:25(__hash__)
    20889    0.720    0.000    1.893    0.000 xearley.py:41(scan)
   408150    0.622    0.000    0.744    0.000 typing.py:868(__new__)
   122067    0.556    0.000    1.613    0.000 earley_forest.py:50(__init__)
  1287198    0.550    0.000    0.556    0.000 earley_common.py:28(__eq__)
   934311    0.521    0.000    0.661    0.000 lexer.py:265(__eq__)
  3231576    0.508    0.000    0.508    0.000 {built-in method builtins.isinstance}
    66825    0.474    0.000    1.667    0.000 earley.py:135(<listcomp>)
   346104    0.464    0.000    0.515    0.000 {built-in method fromkeys}
   553806    0.411    0.000    0.678    0.000 utils.py:342(__contains__)
   133848    0.381    0.000    1.634    0.000 earley_forest.py:437(_visit_node_out_helper)
    68112    0.336    0.000    0.802    0.000 earley_forest.py:603(transform_packed_node)
  1187620    0.313    0.000    0.313    0.000 {built-in method builtins.next}
  2051775    0.306    0.000    0.306    0.000 earley_common.py:31(__hash__)
  1806449    0.297    0.000    0.297    0.000 grammar.py:121(__hash__)
  1996429    0.292    0.000    0.292    0.000 {method 'append' of 'list' objects}
   131472    0.271    0.000    0.569    0.000 {built-in method builtins.sorted}
  1573809    0.246    0.000    0.246    0.000 {built-in method builtins.id}
  2109917    0.246    0.000    0.246    0.000 {built-in method builtins.len}
   346104    0.217    0.000    0.732    0.000 utils.py:339(__init__)
   125433    0.206    0.000    0.630    0.000 earley_forest.py:64(add_family)
   247900    0.185    0.000    0.185    0.000 {method 'match' of 're.Pattern' objects}
     9603    0.184    0.000    1.016    0.000 earley.py:188(scan)
   125433    0.180    0.000    0.306    0.000 earley_forest.py:131(__init__)
   386793    0.176    0.000    0.251    0.000 utils.py:348(__iter__)
     5247    0.164    0.000   24.648    0.005 earley.py:262(parse)
   125433    0.163    0.000    0.623    0.000 earley_common.py:25(advance)
    68112    0.158    0.000    0.464    0.000 earley_forest.py:631(visit_packed_node_in)
   131472    0.154    0.000    0.841    0.000 earley_forest.py:85(children)
   425476    0.138    0.000    0.138    0.000 {built-in method __new__ of type object at 0x00007FFB2480DCB0}
    68112    0.132    0.000    1.255    0.000 earley_forest.py:638(visit_packed_node_out)
    44847    0.130    0.000    0.258    0.000 reconstruct.py:33(__default__)
    48114    0.127    0.000    0.313    0.000 earley_forest.py:581(transform_symbol_node)
    65736    0.117    0.000    0.687    0.000 earley_forest.py:422(visit_symbol_node_in)
    68112    0.117    0.000    0.284    0.000 earley_forest.py:427(visit_packed_node_in)
   189090    0.114    0.000    0.243    0.000 parser_frontends.py:184(match)
    65736    0.114    0.000    1.103    0.000 earley_forest.py:625(visit_symbol_node_in)
   187803    0.109    0.000    0.151    0.000 {method 'setdefault' of 'dict' objects}
   536324    0.105    0.000    0.105    0.000 {built-in method builtins.iter}
50904/50900    0.104    0.000    0.467    0.000 visitors.py:111(_call_userfunc)
   136224    0.099    0.000    0.148    0.000 earley_forest.py:145(sort_key)
182450/182009    0.099    0.000    0.101    0.000 {built-in method builtins.getattr}
     5114    0.098    0.000    0.872    0.000 visitors.py:278(transform)
      198    0.096    0.000   13.989    0.071 xearley.py:39(_parse)
130441/116047    0.095    0.000    0.619    0.000 visitors.py:143(_transform_children)
     5169    0.091    0.000    0.152    0.000 tree.py:137(iter_subtrees)
   591822    0.089    0.000    0.089    0.000 {method 'pop' of 'collections.deque' objects}
     5049    0.085    0.000    4.145    0.001 earley.py:171(_parse)
   337374    0.085    0.000    0.086    0.000 {method 'add' of 'set' objects}
    48114    0.083    0.000    0.296    0.000 earley_forest.py:565(_call_rule_func)
   556355    0.077    0.000    0.077    0.000 {method 'append' of 'collections.deque' objects}
    68112    0.077    0.000    0.134    0.000 earley_forest.py:155(children)
    58905    0.076    0.000    0.322    0.000 tree_matcher.py:48(_match)
    65736    0.075    0.000    0.077    0.000 earley_forest.py:499(__init__)
    48114    0.071    0.000    0.116    0.000 earley_forest.py:556(_collapse_ambig)
    58212    0.070    0.000    0.251    0.000 tree_matcher.py:65(parse_rulename)
    65736    0.065    0.000    0.118    0.000 earley_forest.py:70(load_paths)
    68112    0.057    0.000    0.057    0.000 earley_forest.py:158(<listcomp>)
    68112    0.056    0.000    1.099    0.000 earley_forest.py:450(visit_packed_node_out)
   199584    0.054    0.000    0.054    0.000 {method 'remove' of 'set' objects}
    18018    0.054    0.000    0.135    0.000 tree_matcher.py:21(__call__)
    86621    0.052    0.000    0.070    0.000 tree.py:66(meta)
    58810    0.051    0.000    0.169    0.000 re.py:188(match)
   136224    0.048    0.000    0.048    0.000 earley_forest.py:141(is_empty)
   131472    0.047    0.000    0.070    0.000 utils.py:357(__len__)
    34248    0.046    0.000    0.086    0.000 visitors.py:130(_call_userfunc_token)
    58909    0.044    0.000    0.063    0.000 re.py:289(_compile)
     5049    0.042    0.000    6.985    0.001 tree_matcher.py:148(match_tree)
    17622    0.041    0.000    0.056    0.000 earley_forest.py:591(transform_intermediate_node)
    48114    0.038    0.000    0.512    0.000 earley_forest.py:444(visit_symbol_node_out)
    45702    0.038    0.000    0.053    0.000 tree.py:147(<listcomp>)
44055/6633    0.037    0.000    7.886    0.001 reconstruct.py:85(_reconstruct)
    22869    0.036    0.000    0.045    0.000 earley_forest.py:432(visit_token_node)
    61807    0.035    0.000    0.035    0.000 tree.py:61(__init__)
      198    0.033    0.000   17.817    0.090 parser_frontends.py:100(parse)
    17325    0.032    0.000    0.049    0.000 lexer.py:213(_future_new)
   133848    0.032    0.000    0.032    0.000 earley_forest.py:548(_check_cycle)
    27225    0.031    0.000    0.076    0.000 earley_forest.py:193(__init__)
   134331    0.030    0.000    0.030    0.000 {method 'pop' of 'list' objects}
   123453    0.030    0.000    0.030    0.000 earley_forest.py:101(__hash__)
    48114    0.027    0.000    0.035    0.000 earley_forest.py:571(_call_ambig_func)
    45438    0.027    0.000    0.456    0.000 visitors.py:275(_transform_tree)
   125433    0.026    0.000    0.026    0.000 earley_forest.py:169(__hash__)
    17325    0.023    0.000    0.072    0.000 lexer.py:202(__new__)
26968/5079    0.022    0.000    0.037    0.000 tree.py:134(__hash__)
     5247    0.022    0.000    6.033    0.001 earley_forest.py:535(visit)
     5247    0.020    0.000    0.037    0.000 earley_forest.py:523(__init__)
    22770    0.020    0.000    0.033    0.000 parse_tree_builder.py:20(__call__)
    44957    0.017    0.000    0.017    0.000 tree.py:32(__init__)
    32769    0.017    0.000    0.017    0.000 utils.py:354(__bool__)
    58212    0.016    0.000    0.016    0.000 {method 'groups' of 're.Match' objects}
     5247    0.016    0.000    6.051    0.001 earley_forest.py:397(transform)
    18018    0.015    0.000    0.021    0.000 reconstruct.py:15(is_iter_empty)
     5049    0.015    0.000    0.028    0.000 earley.py:245(<setcomp>)
    17622    0.014    0.000    0.131    0.000 earley_forest.py:447(visit_intermediate_node_out)
     5247    0.013    0.000    0.035    0.000 earley.py:284(<listcomp>)
     5247    0.012    0.000    0.017    0.000 earley_forest.py:390(__init__)
    48115    0.012    0.000    0.012    0.000 {built-in method builtins.hasattr}
 5107/111    0.011    0.000    0.077    0.001 visitors.py:155(_transform_tree)
        1    0.011    0.011   25.911   25.911 Workbook.py:282(transfer_cells)
     2574    0.010    0.000    0.017    0.000 parse_tree_builder.py:145(__call__)
        7    0.008    0.001    0.017    0.002 grammar_analysis.py:78(calculate_sets)
    17028    0.008    0.000    0.008    0.000 {method 'group' of 're.Match' objects}
    24522    0.008    0.000    0.008    0.000 tree_matcher.py:12(is_discarded_terminal)
     3069    0.007    0.000    0.023    0.000 xearley.py:88(<listcomp>)
    27225    0.007    0.000    0.007    0.000 earley_forest.py:207(__hash__)
  4455/99    0.007    0.000    0.062    0.001 visitors.py:430(<listcomp>)
  4752/99    0.007    0.000    0.064    0.001 visitors.py:421(_visit_tree)
     5675    0.006    0.000    0.017    0.000 visitors.py:171(__default__)
  4455/99    0.006    0.000    0.063    0.001 visitors.py:444(inner)
    10450    0.006    0.000    0.006    0.000 grammar.py:42(__init__)
    34149    0.005    0.000    0.005    0.000 visitors.py:178(__default_token__)
       99    0.005    0.000    7.893    0.080 reconstruct.py:96(reconstruct)
    23166    0.005    0.000    0.005    0.000 {method 'end' of 're.Match' objects}
     3069    0.005    0.000    0.005    0.000 xearley.py:85(<listcomp>)
     5247    0.005    0.000    0.005    0.000 earley_forest.py:232(__init__)
     4455    0.005    0.000    0.025    0.000 Parser.py:40(fix_formula)
    22869    0.004    0.000    0.004    0.000 earley_forest.py:418(transform_token_node)
  4455/99    0.004    0.000    0.062    0.001 visitors.py:429(visit_children)
    10279    0.004    0.000    0.004    0.000 grammar.py:15(__init__)
     9603    0.004    0.000    0.004    0.000 earley.py:254(<setcomp>)
     9603    0.004    0.000    0.004    0.000 {method 'clear' of 'set' objects}
      792    0.004    0.000    0.004    0.000 Parser.py:169(add_expr)
     6833    0.003    0.000    0.003    0.000 {method 'get' of 'dict' objects}
      300    0.003    0.000    0.005    0.000 utils.py:179(convert_location_to_idx)
     4455    0.003    0.000    0.005    0.000 utils.py:295(get_highest_precedence_error)
      198    0.003    0.000    8.987    0.045 Workbook.py:638(recompute_cell_and_parents)
     5049    0.003    0.000    0.003    0.000 tree_matcher.py:74(__init__)
      891    0.003    0.000    0.003    0.000 Parser.py:211(mul_expr)
      198    0.003    0.000    9.001    0.045 Workbook.py:727(set_cell_contents)
     1782    0.002    0.000    0.002    0.000 Parser.py:243(number)
      695    0.002    0.000    0.007    0.000 grammar_analysis.py:187(_expand_rule)
      496    0.002    0.000    0.003    0.000 utils.py:194(convert_idx_to_location)
      803    0.002    0.000    0.002    0.000 {method 'join' of 'str' objects}
      198    0.002    0.000    0.008    0.000 Sheet.py:60(set_cell_contents)
       99    0.002    0.000    8.980    0.091 Workbook.py:544(get_formula_value)
     6138    0.002    0.000    0.002    0.000 {method 'extend' of 'list' objects}
      297    0.002    0.000    0.032    0.000 Parser.py:299(function)
     5169    0.002    0.000    0.002    0.000 {method 'values' of 'collections.OrderedDict' objects}
     5049    0.002    0.000    0.002    0.000 tree_matcher.py:77(lex)
     2156    0.001    0.000    0.001    0.000 grammar_analysis.py:70(update_set)
      693    0.001    0.000    0.002    0.000 Sheet.py:93(get_cell_value)
       99    0.001    0.000    0.005    0.000 Parser.py:253(cell)
      450    0.001    0.000    0.009    0.000 utils.py:275(bfs)
       40    0.001    0.000    0.003    0.000 visitors.py:293(transform)
      198    0.001    0.000    0.002    0.000 parser_frontends.py:96(_make_lexer_thread)
      198    0.001    0.000   17.819    0.090 lark.py:640(parse)
      598    0.001    0.000    0.005    0.000 utils.py:131(check_valid_cell_location)
     1169    0.001    0.000    0.001    0.000 grammar_analysis.py:17(__init__)
       99    0.001    0.000    0.006    0.000 Parser.py:389(CELLREF_NO_ABS)
       89    0.001    0.000    0.010    0.000 grammar_analysis.py:180(expand_rule)
      198    0.001    0.000    0.027    0.000 Functions.py:188(func)
      297    0.001    0.000    0.001    0.000 Cell.py:81(set_cell_value)
        7    0.001    0.000    0.031    0.004 earley.py:32(__init__)
       41    0.001    0.000    0.001    0.000 {built-in method builtins.compile}
       14    0.001    0.000    0.001    0.000 utils.py:23(classify)
      792    0.001    0.000    0.001    0.000 utils.py:78(get_hidden_name)
     2876    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
       99    0.001    0.000    0.001    0.000 Parser.py:97(__init__)
      198    0.001    0.000    9.002    0.045 Workbook.py:35(run_func)
       99    0.001    0.000    0.002    0.000 Workbook.py:806(get_cell_value)
      198    0.001    0.000    0.002    0.000 Cell.py:46(__init__)
        7    0.001    0.000    0.021    0.003 grammar_analysis.py:141(__init__)
      198    0.001    0.000    0.001    0.000 Cell.py:65(set_contents)
      495    0.001    0.000    0.027    0.000 Functions.py:68(eval_arg)
   594/99    0.001    0.000    0.064    0.001 visitors.py:415(visit)
      198    0.001    0.000    0.001    0.000 parser_frontends.py:86(_verify_start)
      198    0.001    0.000    0.001    0.000 Functions.py:185(__init__)
       99    0.000    0.000    0.001    0.000 Parser.py:382(cell)
      198    0.000    0.000    0.001    0.000 Sheet.py:124(update_extent)
     1169    0.000    0.000    0.001    0.000 grammar_analysis.py:45(__hash__)
       99    0.000    0.000    0.002    0.000 Workbook.py:700(add_children_cells)
       99    0.000    0.000    0.001    0.000 Workbook.py:687(_get_sheet_name_location)
      198    0.000    0.000    0.001    0.000 utils.py:289(get_error_precedence)
     1155    0.000    0.000    0.000    0.000 grammar_analysis.py:28(next)
       99    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        1    0.000    0.000    0.019    0.019 load_grammar.py:690(compile)
     1192    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      396    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
      200    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
   105/45    0.000    0.000    0.001    0.000 load_grammar.py:389(expansion)
      297    0.000    0.000    0.029    0.000 Functions.py:71(__call__)
      198    0.000    0.000    0.001    0.000 Workbook.py:714(clean_children_cells)
      297    0.000    0.000    0.000    0.000 Parser.py:289(boolean)
      198    0.000    0.000    0.001    0.000 Workbook.py:778(get_cell_contents)
      198    0.000    0.000    0.001    0.000 Workbook.py:540(get_sheet_name_from_hidden)
      297    0.000    0.000    0.000    0.000 Functions.py:64(__init__)
      201    0.000    0.000    0.000    0.000 tree.py:179(expand_kids_by_data)
      198    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
        1    0.000    0.000   25.912   25.912 Workbook.py:421(copy_cells)
       99    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      396    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
      198    0.000    0.000    0.000    0.000 utils.py:26(convert_to)
       99    0.000    0.000    0.001    0.000 re.py:203(sub)
       99    0.000    0.000    0.000    0.000 Parser.py:378(__init__)
       41    0.000    0.000    0.002    0.000 load_grammar.py:566(_literal_to_pattern)
       63    0.000    0.000    0.000    0.000 functools.py:34(update_wrapper)
       99    0.000    0.000    0.001    0.000 Sheet.py:104(set_cell_value)
       99    0.000    0.000    0.001    0.000 Functions.py:214(func)
      495    0.000    0.000    0.000    0.000 Cell.py:125(get_value)
      496    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
      496    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
       41    0.000    0.000    0.001    0.000 load_grammar.py:540(eval_escaping)
      600    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      198    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
       75    0.000    0.000    0.000    0.000 earley.py:58(<listcomp>)
      111    0.000    0.000    0.077    0.001 visitors.py:159(transform)
      198    0.000    0.000    0.000    0.000 enum.py:735(__hash__)
      198    0.000    0.000    0.000    0.000 Sheet.py:99(get_cell_contents)
   146/84    0.000    0.000    0.002    0.000 visitors.py:342(_call_userfunc)
       99    0.000    0.000    0.000    0.000 Functions.py:211(__init__)
       99    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
       11    0.000    0.000    0.000    0.000 load_grammar.py:450(pattern)
       99    0.000    0.000    0.000    0.000 CellError.py:11(__init__)
       28    0.000    0.000    0.001    0.000 tree_matcher.py:106(_build_recons_rules)
       41    0.000    0.000    0.001    0.000 ast.py:51(literal_eval)
       98    0.000    0.000    0.000    0.000 grammar.py:103(__init__)
      396    0.000    0.000    0.000    0.000 Cell.py:128(get_contents)
      396    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
       99    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
       63    0.000    0.000    0.001    0.000 visitors.py:481(__get__)
      594    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        7    0.000    0.000    0.000    0.000 tree_matcher.py:178(<dictcomp>)
        7    0.000    0.000    0.000    0.000 grammar_analysis.py:82(<setcomp>)
        1    0.000    0.000    0.020    0.020 tree_matcher.py:89(__init__)
      396    0.000    0.000    0.000    0.000 Parser.py:111(parens)
    40/11    0.000    0.000    0.002    0.000 visitors.py:362(visit)
        7    0.000    0.000    0.000    0.000 earley.py:53(<setcomp>)
       89    0.000    0.000    0.000    0.000 typing.py:255(inner)
      155    0.000    0.000    0.000    0.000 load_grammar.py:384(_flatten)
      361    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
       35    0.000    0.000    0.000    0.000 load_grammar.py:420(expansions)
      396    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
       89    0.000    0.000    0.000    0.000 typing.py:720(__hash__)
        7    0.000    0.000    0.000    0.000 earley.py:52(<setcomp>)
    15/13    0.000    0.000    0.001    0.000 load_grammar.py:405(<listcomp>)
      198    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
       99    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
       63    0.000    0.000    0.001    0.000 visitors.py:470(__init__)
        8    0.000    0.000    0.000    0.000 tree_matcher.py:28(_best_from_group)
       41    0.000    0.000    0.002    0.000 load_grammar.py:601(literal)
       25    0.000    0.000    0.011    0.000 visitors.py:258(transform)
      198    0.000    0.000    0.000    0.000 CellError.py:21(get_type)
      123    0.000    0.000    0.000    0.000 load_grammar.py:537(<genexpr>)
       63    0.000    0.000    0.003    0.000 visitors.py:478(__call__)
       63    0.000    0.000    0.003    0.000 visitors.py:500(_vargs_inline)
       35    0.000    0.000    0.000    0.000 tree_matcher.py:121(<listcomp>)
       47    0.000    0.000    0.000    0.000 lexer.py:41(__init__)
       45    0.000    0.000    0.000    0.000 {built-in method builtins.max}
       49    0.000    0.000    0.000    0.000 tree_matcher.py:57(make_recons_rule)
       65    0.000    0.000    0.000    0.000 grammar.py:69(__init__)
      315    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
       25    0.000    0.000    0.002    0.000 load_grammar.py:674(nr_deepcopy_tree)
        1    0.000    0.000    0.000    0.000 load_grammar.py:793(<setcomp>)
        7    0.000    0.000    0.000    0.000 grammar_analysis.py:145(<dictcomp>)
       54    0.000    0.000    0.000    0.000 lexer.py:50(__hash__)
       99    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
      105    0.000    0.000    0.000    0.000 load_grammar.py:759(<genexpr>)
       82    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
      198    0.000    0.000    0.000    0.000 grammar_analysis.py:149(<lambda>)
       41    0.000    0.000    0.001    0.000 ast.py:30(parse)
        1    0.000    0.000    0.001    0.001 load_grammar.py:694(<listcomp>)
       41    0.000    0.000    0.000    0.000 load_grammar.py:536(_rfind)
       35    0.000    0.000    0.000    0.000 load_grammar.py:798(<lambda>)
        1    0.000    0.000    0.005    0.005 load_grammar.py:710(<listcomp>)
      198    0.000    0.000    0.000    0.000 grammar_analysis.py:172(<lambda>)
        7    0.000    0.000    0.000    0.000 grammar_analysis.py:60(__init__)
        7    0.000    0.000    0.001    0.000 grammar_analysis.py:175(<dictcomp>)
       15    0.000    0.000    0.000    0.000 utils.py:190(<listcomp>)
      116    0.000    0.000    0.000    0.000 tree.py:175(<lambda>)
       21    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
       13    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
        1    0.000    0.000    0.000    0.000 load_grammar.py:806(<setcomp>)
       20    0.000    0.000    0.000    0.000 load_grammar.py:631(expansions)
        2    0.000    0.000    0.000    0.000 utils.py:271(<listcomp>)
       20    0.000    0.000    0.000    0.000 load_grammar.py:637(<lambda>)
       65    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
       99    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
      113    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
       15    0.000    0.000    0.001    0.000 tree.py:169(find_pred)
       46    0.000    0.000    0.000    0.000 load_grammar.py:668(value)
       21    0.000    0.000    0.000    0.000 lexer.py:125(__init__)
        8    0.000    0.000    0.000    0.000 tree_matcher.py:42(_best_rules_from_group)
        1    0.000    0.000    0.000    0.000 copy.py:66(copy)
       10    0.000    0.000    0.000    0.000 load_grammar.py:346(expr)
        7    0.000    0.000    0.000    0.000 grammar_analysis.py:166(<dictcomp>)
       21    0.000    0.000    0.000    0.000 lexer.py:70(_get_flags)
       41    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        1    0.000    0.000    0.000    0.000 tree_matcher.py:115(<setcomp>)
       20    0.000    0.000    0.000    0.000 lexer.py:81(to_regexp)
        7    0.000    0.000    0.000    0.000 grammar_analysis.py:163(<dictcomp>)
       20    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
        7    0.000    0.000    0.001    0.000 grammar_analysis.py:160(<dictcomp>)
        1    0.000    0.000    0.001    0.001 load_grammar.py:693(<listcomp>)
       41    0.000    0.000    0.000    0.000 ast.py:76(_convert)
       15    0.000    0.000    0.000    0.000 lexer.py:53(__eq__)
       35    0.000    0.000    0.000    0.000 load_grammar.py:621(expansion)
       50    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
       35    0.000    0.000    0.000    0.000 grammar.py:22(__ne__)
       15    0.000    0.000    0.000    0.000 utils.py:184(dedup_list)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:108(<setcomp>)
       49    0.000    0.000    0.000    0.000 tree_matcher.py:17(__init__)
       15    0.000    0.000    0.001    0.000 tree.py:173(find_data)
       20    0.000    0.000    0.000    0.000 re.py:270(escape)
       41    0.000    0.000    0.000    0.000 tree_matcher.py:44(<lambda>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:246(_add_recurse_rule)
       14    0.000    0.000    0.000    0.000 tree_matcher.py:61(make_recons_rule_to_term)
       21    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
       25    0.000    0.000    0.000    0.000 load_grammar.py:639(<genexpr>)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:116(<setcomp>)
       21    0.000    0.000    0.000    0.000 load_grammar.py:809(<lambda>)
        7    0.000    0.000    0.000    0.000 common.py:83(__init__)
        6    0.000    0.000    0.000    0.000 load_grammar.py:411(alias)
       30    0.000    0.000    0.000    0.000 visitors.py:108(__init__)
        1    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
       49    0.000    0.000    0.000    0.000 load_grammar.py:572(<genexpr>)
        1    0.000    0.000    0.020    0.020 reconstruct.py:80(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:642(expr)
       65    0.000    0.000    0.000    0.000 typing.py:1149(cast)
       35    0.000    0.000    0.000    0.000 {built-in method builtins.any}
        1    0.000    0.000    0.000    0.000 load_grammar.py:235(_name_rule)
       22    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 load_grammar.py:446(<dictcomp>)
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
       20    0.000    0.000    0.000    0.000 lexer.py:88(max_width)
       35    0.000    0.000    0.000    0.000 load_grammar.py:431(expansion)
       22    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
       20    0.000    0.000    0.000    0.000 lexer.py:84(min_width)
        5    0.000    0.000    0.000    0.000 load_grammar.py:640(<setcomp>)
       43    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
       30    0.000    0.000    0.000    0.000 load_grammar.py:663(value)
        1    0.000    0.000    0.000    0.000 load_grammar.py:375(maybe)
       30    0.000    0.000    0.000    0.000 load_grammar.py:617(pattern)
        5    0.000    0.000    0.000    0.000 load_grammar.py:613(_make_joined_pattern)
        1    0.000    0.000    0.000    0.000 load_grammar.py:443(__init__)
        1    0.000    0.000    0.000    0.000 copy.py:258(_reconstruct)
        4    0.000    0.000    0.000    0.000 grammar.py:124(__eq__)
        2    0.000    0.000    0.000    0.000 load_grammar.py:201(_will_not_get_removed)
        1    0.000    0.000    0.000    0.000 reconstruct.py:83(<dictcomp>)
        2    0.000    0.000    0.000    0.000 load_grammar.py:219(expansion)
        2    0.000    0.000    0.000    0.000 utils.py:269(classify_bool)
        9    0.000    0.000    0.000    0.000 load_grammar.py:210(_args_as_int)
        8    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
        2    0.000    0.000    0.000    0.000 visitors.py:163(__mul__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:763(<listcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
        2    0.000    0.000    0.000    0.000 visitors.py:263(__mul__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
       11    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
        1    0.000    0.000    0.000    0.000 load_grammar.py:240(_add_rule)
        4    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        1    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
        1    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        1    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
        2    0.000    0.000    0.000    0.000 load_grammar.py:222(expansions)
        1    0.000    0.000    0.000    0.000 copyreg.py:90(__newobj__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
        1    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}



##################Running pro_move_cells... #######################
for test <function pro_move_cells at 0x000001311CEB9670> total time: 19.660070400000006
Total Logs
         2704088 function calls (2583232 primitive calls) in 1.967 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
100813/100413    0.164    0.000    0.828    0.000 visitors.py:111(_call_userfunc)
    12003    0.136    0.000    0.236    0.000 tree.py:137(iter_subtrees)
     4000    0.111    0.000    0.328    0.000 visitors.py:293(transform)
    86660    0.104    0.000    0.127    0.000 typing.py:868(__new__)
     4100    0.098    0.000    0.098    0.000 {built-in method builtins.compile}
197403/153303    0.098    0.000    0.153    0.000 {built-in method builtins.getattr}
     6503    0.098    0.000    1.043    0.000 visitors.py:278(transform)
164230/150426    0.091    0.000    0.778    0.000 visitors.py:143(_transform_children)
    72501    0.077    0.000    0.208    0.000 visitors.py:171(__default__)
   524075    0.074    0.000    0.077    0.000 {built-in method builtins.isinstance}
    85510    0.059    0.000    0.085    0.000 tree.py:147(<listcomp>)
      100    0.040    0.000    1.795    0.018 load_grammar.py:690(compile)
    82319    0.035    0.000    0.035    0.000 tree.py:61(__init__)
    20100    0.034    0.000    0.041    0.000 tree.py:179(expand_kids_by_data)
    59110    0.032    0.000    0.667    0.000 visitors.py:275(_transform_tree)
100406/58800    0.028    0.000    0.041    0.000 {built-in method builtins.hash}
     4100    0.027    0.000    0.196    0.000 load_grammar.py:566(_literal_to_pattern)
     6300    0.024    0.000    0.043    0.000 functools.py:34(update_wrapper)
    86778    0.023    0.000    0.023    0.000 {built-in method __new__ of type object at 0x00007FFB2480DCB0}
    78827    0.021    0.000    0.022    0.000 tree.py:66(meta)
   159905    0.020    0.000    0.020    0.000 {built-in method builtins.id}
    71151    0.020    0.000    0.030    0.000 grammar.py:25(__hash__)
    29240    0.019    0.000    0.034    0.000 grammar.py:18(__eq__)
10500/4500    0.018    0.000    0.131    0.000 load_grammar.py:389(expansion)
     2800    0.018    0.000    0.089    0.000 tree_matcher.py:106(_build_recons_rules)
     4100    0.018    0.000    0.140    0.000 load_grammar.py:540(eval_escaping)
14600/8400    0.017    0.000    0.186    0.000 visitors.py:342(_call_userfunc)
   108748    0.015    0.000    0.015    0.000 {method 'append' of 'list' objects}
     6300    0.013    0.000    0.065    0.000 visitors.py:481(__get__)
     9308    0.012    0.000    0.021    0.000 visitors.py:130(_call_userfunc_token)
     4100    0.012    0.000    0.119    0.000 ast.py:51(literal_eval)
5803/1201    0.012    0.000    0.042    0.000 visitors.py:155(_transform_tree)
    15500    0.012    0.000    0.053    0.000 load_grammar.py:384(_flatten)
4000/1100    0.012    0.000    0.216    0.000 visitors.py:362(visit)
     8404    0.011    0.000    0.031    0.000 grammar.py:103(__init__)
    89008    0.011    0.000    0.011    0.000 {built-in method builtins.len}
13902/12902    0.010    0.000    0.028    0.000 tree.py:134(__hash__)
     3500    0.010    0.000    0.044    0.000 load_grammar.py:420(expansions)
    17556    0.010    0.000    0.012    0.000 lexer.py:265(__eq__)
1500/1300    0.009    0.000    0.092    0.000 load_grammar.py:405(<listcomp>)
     1100    0.009    0.000    0.018    0.000 load_grammar.py:450(pattern)
     3500    0.008    0.000    0.018    0.000 tree_matcher.py:121(<listcomp>)
      100    0.008    0.000    1.900    0.019 tree_matcher.py:89(__init__)
    49586    0.008    0.000    0.008    0.000 {method 'pop' of 'list' objects}
     4100    0.008    0.000    0.215    0.000 load_grammar.py:601(literal)
     6300    0.008    0.000    0.052    0.000 visitors.py:470(__init__)
     4900    0.008    0.000    0.027    0.000 tree_matcher.py:57(make_recons_rule)
     2500    0.007    0.000    1.034    0.000 visitors.py:258(transform)
     6300    0.006    0.000    0.262    0.000 visitors.py:500(_vargs_inline)
    31500    0.006    0.000    0.006    0.000 {built-in method builtins.setattr}
     4700    0.006    0.000    0.006    0.000 lexer.py:41(__init__)
     6300    0.006    0.000    0.256    0.000 visitors.py:478(__call__)
     4500    0.006    0.000    0.016    0.000 {built-in method builtins.max}
      100    0.006    0.000    0.014    0.000 load_grammar.py:793(<setcomp>)
     2500    0.005    0.000    0.237    0.000 load_grammar.py:674(nr_deepcopy_tree)
    12300    0.005    0.000    0.009    0.000 load_grammar.py:537(<genexpr>)
    10500    0.004    0.000    0.009    0.000 load_grammar.py:759(<genexpr>)
     4100    0.004    0.000    0.019    0.000 load_grammar.py:536(_rfind)
     8200    0.004    0.000    0.004    0.000 {method 'rfind' of 'str' objects}
     4100    0.004    0.000    0.103    0.000 ast.py:30(parse)
      600    0.004    0.000    0.005    0.000 Graph.py:330(tarjans)
     4627    0.004    0.000    0.008    0.000 {method 'add' of 'set' objects}
     1500    0.004    0.000    0.014    0.000 utils.py:190(<listcomp>)
      600    0.003    0.000    0.033    0.000 Workbook.py:727(set_cell_contents)
    11300    0.003    0.000    0.003    0.000 {method 'replace' of 'str' objects}
     5400    0.003    0.000    0.005    0.000 lexer.py:50(__hash__)
      100    0.003    0.000    1.966    0.020 Workbook.py:282(transfer_cells)
      600    0.003    0.000    0.018    0.000 Workbook.py:638(recompute_cell_and_parents)
     2000    0.003    0.000    0.021    0.000 load_grammar.py:631(expansions)
      102    0.003    0.000    0.006    0.000 tree_matcher.py:28(_best_from_group)
      902    0.003    0.000    0.005    0.000 utils.py:179(convert_location_to_idx)
     5104    0.003    0.000    0.003    0.000 grammar.py:69(__init__)
     3500    0.003    0.000    0.009    0.000 load_grammar.py:798(<lambda>)
      100    0.003    0.000    0.462    0.005 load_grammar.py:710(<listcomp>)
    12003    0.003    0.000    0.003    0.000 {method 'values' of 'collections.OrderedDict' objects}
        2    0.003    0.001    0.005    0.003 grammar_analysis.py:78(calculate_sets)
     6402    0.003    0.000    0.003    0.000 {method 'update' of 'dict' objects}
     4100    0.003    0.000    0.004    0.000 {built-in method builtins.all}
     1000    0.003    0.000    0.010    0.000 load_grammar.py:346(expr)
      100    0.003    0.000    1.969    0.020 Workbook.py:369(move_cells)
      100    0.003    0.000    0.004    0.000 load_grammar.py:806(<setcomp>)
     2000    0.002    0.000    0.004    0.000 load_grammar.py:637(<lambda>)
       22    0.002    0.000    0.009    0.000 earley.py:78(predict_and_complete)
     5000    0.002    0.000    0.002    0.000 {method 'startswith' of 'str' objects}
      100    0.002    0.000    0.007    0.000 tree_matcher.py:115(<setcomp>)
     2311    0.002    0.000    0.011    0.000 {method 'join' of 'str' objects}
     4900    0.002    0.000    0.002    0.000 tree_matcher.py:17(__init__)
      200    0.002    0.000    0.012    0.000 utils.py:271(<listcomp>)
      602    0.002    0.000    0.007    0.000 {method 'sort' of 'list' objects}
     4600    0.002    0.000    0.003    0.000 load_grammar.py:668(value)
     2000    0.002    0.000    0.007    0.000 lexer.py:81(to_regexp)
    11600    0.002    0.000    0.002    0.000 tree.py:175(<lambda>)
     4818    0.002    0.000    0.002    0.000 grammar.py:42(__init__)
      702    0.002    0.000    0.003    0.000 utils.py:194(convert_idx_to_location)
     1500    0.002    0.000    0.016    0.000 utils.py:184(dedup_list)
     2000    0.002    0.000    0.002    0.000 {method 'translate' of 'str' objects}
     3500    0.002    0.000    0.002    0.000 load_grammar.py:621(expansion)
     2100    0.002    0.000    0.006    0.000 lexer.py:125(__init__)
     1500    0.002    0.000    0.031    0.000 tree.py:169(find_pred)
      100    0.002    0.000    0.005    0.000 tree_matcher.py:108(<setcomp>)
     4100    0.002    0.000    0.002    0.000 ast.py:76(_convert)
     2106    0.002    0.000    0.002    0.000 {built-in method _abc._abc_instancecheck}
     1426    0.002    0.000    0.002    0.000 {method 'match' of 're.Pattern' objects}
     6910    0.002    0.000    0.002    0.000 tree_matcher.py:12(is_discarded_terminal)
      100    0.002    0.000    0.112    0.001 load_grammar.py:693(<listcomp>)
     3500    0.002    0.000    0.006    0.000 grammar.py:22(__ne__)
     1400    0.002    0.000    0.009    0.000 tree_matcher.py:61(make_recons_rule_to_term)
     2100    0.001    0.000    0.001    0.000 lexer.py:70(_get_flags)
      985    0.001    0.000    0.002    0.000 earley_common.py:9(__init__)
     9306    0.001    0.000    0.001    0.000 visitors.py:178(__default_token__)
    10537    0.001    0.000    0.001    0.000 grammar.py:121(__hash__)
     5415    0.001    0.000    0.001    0.000 grammar.py:15(__init__)
     2000    0.001    0.000    0.004    0.000 re.py:270(escape)
     2500    0.001    0.000    0.008    0.000 load_grammar.py:639(<genexpr>)
     1334    0.001    0.000    0.004    0.000 re.py:188(match)
      100    0.001    0.000    0.002    0.000 tree_matcher.py:116(<setcomp>)
     1312    0.001    0.000    0.006    0.000 utils.py:131(check_valid_cell_location)
     1344    0.001    0.000    0.002    0.000 re.py:289(_compile)
     1500    0.001    0.000    0.001    0.000 lexer.py:53(__eq__)
     3000    0.001    0.000    0.001    0.000 visitors.py:108(__init__)
     1220    0.001    0.000    0.002    0.000 Sheet.py:93(get_cell_value)
     3500    0.001    0.000    0.001    0.000 {built-in method builtins.any}
      600    0.001    0.000    0.005    0.000 Sheet.py:60(set_cell_contents)
     4900    0.001    0.000    0.001    0.000 load_grammar.py:572(<genexpr>)
     2106    0.001    0.000    0.003    0.000 abc.py:96(__instancecheck__)
        5    0.001    0.000    0.004    0.001 earley_forest.py:283(visit)
     1500    0.001    0.000    0.032    0.000 tree.py:173(find_data)
      100    0.001    0.000    0.004    0.000 load_grammar.py:246(_add_recurse_rule)
     6500    0.001    0.000    0.001    0.000 typing.py:1149(cast)
      100    0.001    0.000    1.902    0.019 reconstruct.py:80(__init__)
      600    0.001    0.000    0.033    0.000 Workbook.py:35(run_func)
     1731    0.001    0.000    0.001    0.000 utils.py:78(get_hidden_name)
      100    0.001    0.000    0.002    0.000 load_grammar.py:446(<dictcomp>)
      100    0.001    0.000    0.003    0.000 copy.py:66(copy)
      100    0.001    0.000    0.128    0.001 load_grammar.py:694(<listcomp>)
     4423    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
     2100    0.001    0.000    0.001    0.000 load_grammar.py:809(<lambda>)
     3500    0.001    0.000    0.001    0.000 load_grammar.py:431(expansion)
     3000    0.001    0.000    0.001    0.000 load_grammar.py:663(value)
     1201    0.001    0.000    0.043    0.000 visitors.py:159(transform)
     4403    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
      100    0.001    0.000    0.006    0.000 load_grammar.py:375(maybe)
      600    0.001    0.000    0.001    0.000 load_grammar.py:411(alias)
     2000    0.001    0.000    0.001    0.000 lexer.py:88(max_width)
     3332    0.001    0.000    0.001    0.000 {method 'get' of 'dict' objects}
     1602    0.001    0.000    0.001    0.000 Sheet.py:120(get_cell)
      300    0.001    0.000    0.002    0.000 Workbook.py:778(get_cell_contents)
     3000    0.001    0.000    0.001    0.000 load_grammar.py:617(pattern)
     2000    0.001    0.000    0.001    0.000 lexer.py:84(min_width)
      500    0.001    0.000    0.001    0.000 load_grammar.py:640(<setcomp>)
     2509    0.001    0.000    0.001    0.000 tree_matcher.py:44(<lambda>)
      100    0.001    0.000    0.001    0.000 load_grammar.py:642(expr)
      402    0.001    0.000    0.002    0.000 Workbook.py:582(recompute_cell_value)
      202    0.001    0.000    0.002    0.000 grammar_analysis.py:187(_expand_rule)
      814    0.001    0.000    0.001    0.000 utils.py:345(add)
      100    0.001    0.000    0.001    0.000 {method '__reduce_ex__' of 'object' objects}
      400    0.001    0.000    0.001    0.000 grammar.py:124(__eq__)
      600    0.001    0.000    0.001    0.000 Sheet.py:124(update_extent)
      500    0.001    0.000    0.001    0.000 load_grammar.py:613(_make_joined_pattern)
      804    0.001    0.000    0.001    0.000 Graph.py:137(get_parents_from_cell)
      100    0.001    0.000    0.001    0.000 load_grammar.py:235(_name_rule)
      600    0.001    0.000    0.001    0.000 Workbook.py:714(clean_children_cells)
      402    0.001    0.000    0.001    0.000 Workbook.py:575(get_cell_from_location)
      900    0.000    0.000    0.001    0.000 load_grammar.py:210(_args_as_int)
     2300    0.000    0.000    0.000    0.000 {built-in method builtins.next}
     1111    0.000    0.000    0.000    0.000 tree.py:32(__init__)
      200    0.000    0.000    0.001    0.000 visitors.py:163(__mul__)
      100    0.000    0.000    0.001    0.000 copy.py:258(_reconstruct)
      649    0.000    0.000    0.000    0.000 grammar_analysis.py:70(update_set)
      100    0.000    0.000    0.000    0.000 reconstruct.py:83(<dictcomp>)
       87    0.000    0.000    0.001    0.000 earley_forest.py:50(__init__)
      100    0.000    0.000    0.003    0.000 load_grammar.py:443(__init__)
      800    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
      100    0.000    0.000    0.001    0.000 load_grammar.py:763(<listcomp>)
     1606    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
       12    0.000    0.000    0.001    0.000 xearley.py:41(scan)
      125    0.000    0.000    0.002    0.000 utils.py:275(bfs)
      200    0.000    0.000    0.001    0.000 visitors.py:263(__mul__)
      102    0.000    0.000    0.008    0.000 tree_matcher.py:42(_best_rules_from_group)
      747    0.000    0.000    0.000    0.000 earley_common.py:28(__eq__)
       46    0.000    0.000    0.001    0.000 earley.py:135(<listcomp>)
        4    0.000    0.000    0.001    0.000 utils.py:23(classify)
     2709    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
      100    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
      100    0.000    0.000    0.001    0.000 load_grammar.py:240(_add_rule)
      100    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
      100    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
      200    0.000    0.000    0.001    0.000 load_grammar.py:201(_will_not_get_removed)
     1804    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      200    0.000    0.000    0.013    0.000 utils.py:269(classify_bool)
       80    0.000    0.000    0.001    0.000 earley_forest.py:437(_visit_node_out_helper)
      341    0.000    0.000    0.000    0.000 utils.py:342(__contains__)
      346    0.000    0.000    0.000    0.000 grammar_analysis.py:17(__init__)
      200    0.000    0.000    0.001    0.000 {built-in method builtins.sum}
      702    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
      200    0.000    0.000    0.001    0.000 load_grammar.py:219(expansion)
       40    0.000    0.000    0.001    0.000 earley_forest.py:603(transform_packed_node)
      702    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
        2    0.000    0.000    0.007    0.004 grammar_analysis.py:141(__init__)
      300    0.000    0.000    0.000    0.000 Sheet.py:99(get_cell_contents)
     1100    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
      202    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      235    0.000    0.000    0.000    0.000 utils.py:339(__init__)
     1178    0.000    0.000    0.000    0.000 earley_common.py:31(__hash__)
        2    0.000    0.000    0.009    0.005 earley.py:32(__init__)
      100    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
       80    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
      604    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
      100    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
      400    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
      200    0.000    0.000    0.000    0.000 {built-in method builtins.min}
      200    0.000    0.000    0.001    0.000 load_grammar.py:222(expansions)
      235    0.000    0.000    0.000    0.000 {built-in method fromkeys}
      346    0.000    0.000    0.000    0.000 grammar_analysis.py:45(__hash__)
        5    0.000    0.000    0.015    0.003 earley.py:262(parse)
       25    0.000    0.000    0.002    0.000 grammar_analysis.py:180(expand_rule)
      100    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
      100    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
       89    0.000    0.000    0.000    0.000 earley_forest.py:64(add_family)
       89    0.000    0.000    0.000    0.000 earley_forest.py:131(__init__)
        2    0.000    0.000    0.009    0.005 xearley.py:39(_parse)
      100    0.000    0.000    0.000    0.000 copyreg.py:90(__newobj__)
       32    0.000    0.000    0.000    0.000 earley_forest.py:581(transform_symbol_node)
      342    0.000    0.000    0.000    0.000 grammar_analysis.py:28(next)
       80    0.000    0.000    0.001    0.000 earley_forest.py:85(children)
      235    0.000    0.000    0.000    0.000 utils.py:348(__iter__)
       89    0.000    0.000    0.000    0.000 earley_common.py:25(advance)
        5    0.000    0.000    0.000    0.000 earley.py:188(scan)
      100    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
       40    0.000    0.000    0.000    0.000 earley_forest.py:631(visit_packed_node_in)
       32    0.000    0.000    0.000    0.000 earley_forest.py:565(_call_rule_func)
       40    0.000    0.000    0.001    0.000 earley_forest.py:638(visit_packed_node_out)
        3    0.000    0.000    0.012    0.004 tree_matcher.py:148(match_tree)
       40    0.000    0.000    0.000    0.000 earley_forest.py:422(visit_symbol_node_in)
      127    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
      132    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
       40    0.000    0.000    0.001    0.000 earley_forest.py:625(visit_symbol_node_in)
       92    0.000    0.000    0.000    0.000 parser_frontends.py:184(match)
       40    0.000    0.000    0.000    0.000 earley_forest.py:427(visit_packed_node_in)
        5    0.000    0.000    0.006    0.001 Workbook.py:544(get_formula_value)
       10    0.000    0.000    0.000    0.000 Parser.py:253(cell)
        2    0.000    0.000    0.013    0.006 parser_frontends.py:100(parse)
      100    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
       32    0.000    0.000    0.000    0.000 earley_forest.py:556(_collapse_ambig)
       80    0.000    0.000    0.000    0.000 earley_forest.py:145(sort_key)
        8    0.000    0.000    0.000    0.000 Cell.py:81(set_cell_value)
      362    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.deque' objects}
      409    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      106    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
       32    0.000    0.000    0.000    0.000 tree_matcher.py:48(_match)
       40    0.000    0.000    0.000    0.000 earley_forest.py:499(__init__)
       18    0.000    0.000    0.000    0.000 lexer.py:213(_future_new)
        3    0.000    0.000    0.001    0.000 earley.py:171(_parse)
       22    0.000    0.000    0.000    0.000 tree_matcher.py:65(parse_rulename)
       21    0.000    0.000    0.000    0.000 earley.py:58(<listcomp>)
      100    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        2    0.000    0.000    0.000    0.000 tree_matcher.py:178(<dictcomp>)
        5    0.000    0.000    0.000    0.000 Parser.py:211(mul_expr)
       10    0.000    0.000    0.000    0.000 reconstruct.py:33(__default__)
       40    0.000    0.000    0.000    0.000 earley_forest.py:155(children)
      120    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       10    0.000    0.000    0.000    0.000 Workbook.py:806(get_cell_value)
       40    0.000    0.000    0.001    0.000 earley_forest.py:450(visit_packed_node_out)
       40    0.000    0.000    0.000    0.000 earley_forest.py:70(load_paths)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:82(<setcomp>)
     15/5    0.000    0.000    0.000    0.000 visitors.py:444(inner)
       80    0.000    0.000    0.000    0.000 utils.py:357(__len__)
     15/5    0.000    0.000    0.001    0.000 visitors.py:421(_visit_tree)
      106    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
       25    0.000    0.000    0.000    0.000 typing.py:255(inner)
        2    0.000    0.000    0.000    0.000 earley.py:52(<setcomp>)
       15    0.000    0.000    0.000    0.000 Parser.py:40(fix_formula)
        5    0.000    0.000    0.000    0.000 earley_forest.py:523(__init__)
      100    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
       18    0.000    0.000    0.000    0.000 lexer.py:202(__new__)
       32    0.000    0.000    0.000    0.000 earley_forest.py:444(visit_symbol_node_out)
       80    0.000    0.000    0.000    0.000 earley_forest.py:141(is_empty)
       25    0.000    0.000    0.000    0.000 typing.py:720(__hash__)
        8    0.000    0.000    0.000    0.000 tree_matcher.py:21(__call__)
        6    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
       80    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
       20    0.000    0.000    0.000    0.000 parse_tree_builder.py:20(__call__)
       17    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
       40    0.000    0.000    0.000    0.000 earley_forest.py:158(<listcomp>)
       32    0.000    0.000    0.000    0.000 earley_forest.py:571(_call_ambig_func)
        5    0.000    0.000    0.004    0.001 earley_forest.py:535(visit)
        6    0.000    0.000    0.000    0.000 Workbook.py:687(_get_sheet_name_location)
       13    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
        5    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
     15/5    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
       61    0.000    0.000    0.000    0.000 grammar_analysis.py:149(<lambda>)
        8    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
        2    0.000    0.000    0.000    0.000 earley.py:53(<setcomp>)
      8/4    0.000    0.000    0.012    0.003 reconstruct.py:85(_reconstruct)
       82    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
        5    0.000    0.000    0.004    0.001 earley_forest.py:397(transform)
        5    0.000    0.000    0.000    0.000 earley.py:284(<listcomp>)
        6    0.000    0.000    0.000    0.000 Sheet.py:111(_shrink_sheet)
     15/5    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
       89    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
       11    0.000    0.000    0.000    0.000 Workbook.py:540(get_sheet_name_from_hidden)
        2    0.000    0.000    0.000    0.000 Parser.py:389(CELLREF_NO_ABS)
       10    0.000    0.000    0.000    0.000 re.py:203(sub)
       10    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        5    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
      100    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
       61    0.000    0.000    0.000    0.000 grammar_analysis.py:172(<lambda>)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:145(<dictcomp>)
        9    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:175(<dictcomp>)
        2    0.000    0.000    0.000    0.000 Parser.py:382(cell)
       15    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
        2    0.000    0.000    0.013    0.006 lark.py:640(parse)
        2    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
       16    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        5    0.000    0.000    0.000    0.000 Sheet.py:104(set_cell_value)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:60(__init__)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:166(<dictcomp>)
       17    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
        6    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 Workbook.py:700(add_children_cells)
        2    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:163(<dictcomp>)
        5    0.000    0.000    0.001    0.000 visitors.py:415(visit)
        3    0.000    0.000    0.000    0.000 earley.py:245(<setcomp>)
       23    0.000    0.000    0.000    0.000 Cell.py:125(get_value)
       22    0.000    0.000    0.000    0.000 {method 'groups' of 're.Match' objects}
        3    0.000    0.000    0.000    0.000 Cell.py:46(__init__)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:160(<dictcomp>)
       12    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
        8    0.000    0.000    0.000    0.000 reconstruct.py:15(is_iter_empty)
        1    0.000    0.000    0.012    0.012 reconstruct.py:96(reconstruct)
        8    0.000    0.000    0.000    0.000 earley_forest.py:447(visit_intermediate_node_out)
        4    0.000    0.000    0.000    0.000 Graph.py:96(update_child)
        1    0.000    0.000    0.000    0.000 utils.py:307(error_matcher)
        5    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
        6    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
       13    0.000    0.000    0.000    0.000 Cell.py:128(get_contents)
        2    0.000    0.000    0.000    0.000 {method 'normalize' of 'decimal.Decimal' objects}
       17    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
        2    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
       11    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
        2    0.000    0.000    0.000    0.000 common.py:83(__init__)
       12    0.000    0.000    0.000    0.000 {built-in method _heapq.heapify}
        2    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
       12    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
        4    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
       18    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
       10    0.000    0.000    0.000    0.000 Cell.py:135(get_children)
        6    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        5    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
        1    0.000    0.000    0.000    0.000 Parser.py:378(__init__)
       13    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
        1    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
        6    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        9    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
        5    0.000    0.000    0.000    0.000 {method 'clear' of 'set' objects}
        6    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
        5    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        3    0.000    0.000    0.000    0.000 tree_matcher.py:74(__init__)
        5    0.000    0.000    0.000    0.000 earley.py:254(<setcomp>)
        6    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        3    0.000    0.000    0.000    0.000 tree_matcher.py:77(lex)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_move_cells2... #######################
for test <function pro_move_cells2 at 0x000001311CEB9790> total time: 9.467685199999998
Total Logs
         1425510 function calls (1419942 primitive calls) in 0.935 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      990    0.168    0.000    0.601    0.001 earley.py:78(predict_and_complete)
    73557    0.099    0.000    0.150    0.000 earley_common.py:9(__init__)
180190/175414    0.050    0.000    0.064    0.000 {built-in method builtins.hash}
      297    0.047    0.000    0.166    0.001 earley_forest.py:283(visit)
    54252    0.041    0.000    0.065    0.000 utils.py:345(add)
    45763    0.036    0.000    0.067    0.000 grammar.py:18(__eq__)
    97160    0.029    0.000    0.043    0.000 grammar.py:25(__hash__)
     4059    0.025    0.000    0.052    0.000 earley_forest.py:50(__init__)
    61974    0.025    0.000    0.025    0.000 earley_common.py:28(__eq__)
    42360    0.022    0.000    0.028    0.000 lexer.py:265(__eq__)
    28512    0.020    0.000    0.034    0.000 utils.py:342(__contains__)
   122007    0.018    0.000    0.018    0.000 {built-in method builtins.isinstance}
     2079    0.018    0.000    0.065    0.000 earley.py:135(<listcomp>)
    12348    0.017    0.000    0.020    0.000 typing.py:868(__new__)
      594    0.014    0.000    0.045    0.000 xearley.py:41(scan)
    79281    0.012    0.000    0.012    0.000 grammar.py:121(__hash__)
    82269    0.012    0.000    0.012    0.000 earley_common.py:31(__hash__)
    84259    0.011    0.000    0.011    0.000 {method 'append' of 'list' objects}
     3960    0.010    0.000    0.044    0.000 earley_forest.py:437(_visit_node_out_helper)
    92756    0.010    0.000    0.010    0.000 {built-in method builtins.len}
     2079    0.009    0.000    0.020    0.000 earley_forest.py:603(transform_packed_node)
    32884    0.008    0.000    0.008    0.000 {built-in method builtins.next}
     3762    0.008    0.000    0.016    0.000 {built-in method builtins.sorted}
    10791    0.007    0.000    0.008    0.000 {built-in method fromkeys}
    45249    0.007    0.000    0.007    0.000 {built-in method builtins.id}
    10791    0.007    0.000    0.015    0.000 utils.py:339(__init__)
      297    0.007    0.000    0.850    0.003 earley.py:262(parse)
     4257    0.006    0.000    0.020    0.000 earley_forest.py:64(add_family)
     4257    0.005    0.000    0.009    0.000 earley_forest.py:131(__init__)
     4257    0.005    0.000    0.020    0.000 earley_common.py:25(advance)
     2079    0.005    0.000    0.013    0.000 earley_forest.py:631(visit_packed_node_in)
     3762    0.004    0.000    0.023    0.000 earley_forest.py:85(children)
    13240    0.004    0.000    0.004    0.000 {built-in method __new__ of type object at 0x00007FFB2480DCB0}
     1683    0.004    0.000    0.011    0.000 earley_forest.py:581(transform_symbol_node)
    10593    0.004    0.000    0.006    0.000 utils.py:348(__iter__)
     4756    0.004    0.000    0.004    0.000 {method 'match' of 're.Pattern' objects}
     2079    0.004    0.000    0.033    0.000 earley_forest.py:638(visit_packed_node_out)
     1881    0.004    0.000    0.019    0.000 earley_forest.py:422(visit_symbol_node_in)
      198    0.004    0.000    0.640    0.003 xearley.py:39(_parse)
     5940    0.004    0.000    0.005    0.000 {method 'setdefault' of 'dict' objects}
     2079    0.003    0.000    0.007    0.000 earley_forest.py:427(visit_packed_node_in)
1206/1202    0.003    0.000    0.013    0.000 visitors.py:111(_call_userfunc)
5339/4898    0.003    0.000    0.004    0.000 {built-in method builtins.getattr}
     1683    0.003    0.000    0.007    0.000 earley_forest.py:565(_call_rule_func)
     1881    0.003    0.000    0.031    0.000 earley_forest.py:625(visit_symbol_node_in)
    10444    0.003    0.000    0.003    0.000 {method 'add' of 'set' objects}
      396    0.003    0.000    0.423    0.001 Workbook.py:638(recompute_cell_and_parents)
      219    0.003    0.000    0.004    0.000 tree.py:137(iter_subtrees)
     4158    0.003    0.000    0.004    0.000 earley_forest.py:145(sort_key)
    14495    0.003    0.000    0.003    0.000 {built-in method builtins.iter}
     1683    0.003    0.000    0.005    0.000 earley_forest.py:556(_collapse_ambig)
    18216    0.003    0.000    0.003    0.000 {method 'pop' of 'collections.deque' objects}
      396    0.003    0.000    0.439    0.001 Workbook.py:727(set_cell_contents)
     3762    0.002    0.000    0.005    0.000 parser_frontends.py:184(match)
        1    0.002    0.002    0.935    0.935 Workbook.py:282(transfer_cells)
    17164    0.002    0.000    0.002    0.000 {method 'append' of 'collections.deque' objects}
      498    0.002    0.000    0.003    0.000 utils.py:179(convert_location_to_idx)
     2079    0.002    0.000    0.003    0.000 earley_forest.py:155(children)
     1881    0.002    0.000    0.002    0.000 earley_forest.py:499(__init__)
       99    0.002    0.000    0.008    0.000 earley.py:188(scan)
      198    0.002    0.000    0.813    0.004 parser_frontends.py:100(parse)
     2079    0.002    0.000    0.028    0.000 earley_forest.py:450(visit_packed_node_out)
      396    0.002    0.000    0.008    0.000 Sheet.py:60(set_cell_contents)
      164    0.002    0.000    0.017    0.000 visitors.py:278(transform)
2038/1900    0.002    0.000    0.014    0.000 visitors.py:143(_transform_children)
      396    0.002    0.000    0.002    0.000 Cell.py:81(set_cell_value)
     1881    0.002    0.000    0.003    0.000 earley_forest.py:70(load_paths)
     5841    0.002    0.000    0.002    0.000 {method 'remove' of 'set' objects}
      891    0.001    0.000    0.002    0.000 lexer.py:213(_future_new)
      198    0.001    0.000    0.413    0.002 Workbook.py:544(get_formula_value)
     1386    0.001    0.000    0.002    0.000 Sheet.py:93(get_cell_value)
      297    0.001    0.000    0.005    0.000 earley.py:284(<listcomp>)
      297    0.001    0.000    0.168    0.001 earley_forest.py:535(visit)
        1    0.001    0.001    0.003    0.003 grammar_analysis.py:78(calculate_sets)
     3762    0.001    0.000    0.002    0.000 utils.py:357(__len__)
     4158    0.001    0.000    0.001    0.000 earley_forest.py:141(is_empty)
      297    0.001    0.000    0.002    0.000 earley_forest.py:523(__init__)
      496    0.001    0.000    0.002    0.000 utils.py:194(convert_idx_to_location)
     1683    0.001    0.000    0.018    0.000 earley_forest.py:444(visit_symbol_node_out)
       99    0.001    0.000    0.019    0.000 earley.py:171(_parse)
       40    0.001    0.000    0.003    0.000 visitors.py:293(transform)
      396    0.001    0.000    0.001    0.000 {built-in method _heapq.heapify}
     1298    0.001    0.000    0.001    0.000 {method 'join' of 'str' objects}
     1192    0.001    0.000    0.002    0.000 re.py:289(_compile)
      594    0.001    0.000    0.002    0.000 tree_matcher.py:48(_match)
      891    0.001    0.000    0.003    0.000 lexer.py:202(__new__)
      198    0.001    0.000    0.001    0.000 parser_frontends.py:96(_make_lexer_thread)
      994    0.001    0.000    0.004    0.000 re.py:188(match)
       99    0.001    0.000    0.047    0.000 tree_matcher.py:148(match_tree)
     3762    0.001    0.000    0.001    0.000 earley_forest.py:101(__hash__)
     1685    0.001    0.000    0.001    0.000 utils.py:78(get_hidden_name)
      198    0.001    0.000    0.004    0.000 Parser.py:253(cell)
     3960    0.001    0.000    0.001    0.000 earley_forest.py:548(_check_cycle)
     4257    0.001    0.000    0.001    0.000 earley_forest.py:169(__hash__)
     2079    0.001    0.000    0.001    0.000 earley_forest.py:158(<listcomp>)
     1683    0.001    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
     4743    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
      495    0.001    0.000    0.001    0.000 earley_forest.py:432(visit_token_node)
      693    0.001    0.000    0.001    0.000 earley_forest.py:193(__init__)
      895    0.001    0.000    0.004    0.000 utils.py:131(check_valid_cell_location)
      297    0.001    0.000    0.169    0.001 earley_forest.py:397(transform)
      725    0.001    0.000    0.002    0.000 visitors.py:171(__default__)
     4759    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
     1386    0.001    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
      396    0.001    0.000    0.439    0.001 Workbook.py:35(run_func)
      954    0.001    0.000    0.001    0.000 tree.py:147(<listcomp>)
      297    0.001    0.000    0.001    0.000 earley_forest.py:390(__init__)
     2973    0.001    0.000    0.001    0.000 {method 'get' of 'dict' objects}
       41    0.001    0.000    0.001    0.000 {built-in method builtins.compile}
     1219    0.001    0.000    0.001    0.000 tree.py:61(__init__)
      198    0.001    0.000    0.001    0.000 Workbook.py:687(_get_sheet_name_location)
       99    0.001    0.000    0.003    0.000 Parser.py:389(CELLREF_NO_ABS)
       99    0.001    0.000    0.001    0.000 reconstruct.py:33(__default__)
      396    0.001    0.000    0.001    0.000 Graph.py:330(tarjans)
      495    0.001    0.000    0.001    0.000 Workbook.py:540(get_sheet_name_from_hidden)
  157/111    0.001    0.000    0.007    0.000 visitors.py:155(_transform_tree)
      198    0.001    0.000    0.052    0.000 reconstruct.py:85(_reconstruct)
      198    0.001    0.000    0.002    0.000 Workbook.py:806(get_cell_value)
      396    0.000    0.000    0.001    0.000 Workbook.py:714(clean_children_cells)
      198    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
      291    0.000    0.000    0.004    0.000 visitors.py:130(_call_userfunc_token)
      198    0.000    0.000    0.001    0.000 earley_forest.py:591(transform_intermediate_node)
      396    0.000    0.000    0.001    0.000 Cell.py:65(set_contents)
      396    0.000    0.000    0.001    0.000 Sheet.py:124(update_extent)
      198    0.000    0.000    0.813    0.004 lark.py:640(parse)
      100    0.000    0.000    0.004    0.000 Workbook.py:582(recompute_cell_value)
      690    0.000    0.000    0.010    0.000 visitors.py:275(_transform_tree)
        1    0.000    0.000    0.021    0.021 load_grammar.py:690(compile)
      495    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
       99    0.000    0.000    0.001    0.000 Parser.py:382(cell)
     1684    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      198    0.000    0.000    0.005    0.000 visitors.py:444(inner)
     1085    0.000    0.000    0.000    0.000 tree.py:66(meta)
      198    0.000    0.000    0.001    0.000 parse_tree_builder.py:145(__call__)
       99    0.000    0.000    0.001    0.000 tree_matcher.py:21(__call__)
      892    0.000    0.000    0.001    0.000 Sheet.py:120(get_cell)
      198    0.000    0.000    0.001    0.000 utils.py:207(remove_exponent)
      693    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
      201    0.000    0.000    0.000    0.000 tree.py:179(expand_kids_by_data)
      198    0.000    0.000    0.001    0.000 Cell.py:46(__init__)
      198    0.000    0.000    0.006    0.000 visitors.py:421(_visit_tree)
       99    0.000    0.000    0.052    0.001 reconstruct.py:96(reconstruct)
       41    0.000    0.000    0.001    0.000 ast.py:51(literal_eval)
      495    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
       99    0.000    0.000    0.001    0.000 Workbook.py:700(add_children_cells)
      198    0.000    0.000    0.002    0.000 Sheet.py:104(set_cell_value)
      198    0.000    0.000    0.001    0.000 Workbook.py:778(get_cell_contents)
       41    0.000    0.000    0.002    0.000 load_grammar.py:566(_literal_to_pattern)
      742    0.000    0.000    0.000    0.000 grammar.py:42(__init__)
      101    0.000    0.000    0.001    0.000 grammar_analysis.py:187(_expand_rule)
       99    0.000    0.000    0.001    0.000 earley.py:245(<setcomp>)
      594    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      198    0.000    0.000    0.005    0.000 Parser.py:40(fix_formula)
      297    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
       99    0.000    0.000    0.000    0.000 Graph.py:96(update_child)
      198    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
       63    0.000    0.000    0.000    0.000 functools.py:34(update_wrapper)
      198    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
      891    0.000    0.000    0.000    0.000 Cell.py:125(get_value)
   105/45    0.000    0.000    0.002    0.000 load_grammar.py:389(expansion)
      396    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
      198    0.000    0.000    0.001    0.000 re.py:203(sub)
      198    0.000    0.000    0.002    0.000 Sheet.py:111(_shrink_sheet)
   146/84    0.000    0.000    0.002    0.000 visitors.py:342(_call_userfunc)
     1093    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      219    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
      382    0.000    0.000    0.000    0.000 grammar_analysis.py:70(update_set)
       99    0.000    0.000    0.001    0.000 tree_matcher.py:65(parse_rulename)
       99    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
       41    0.000    0.000    0.001    0.000 load_grammar.py:540(eval_escaping)
      200    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      198    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      198    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
      693    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
        1    0.000    0.000    0.935    0.935 Workbook.py:369(move_cells)
      198    0.000    0.000    0.007    0.000 visitors.py:415(visit)
      198    0.000    0.000    0.002    0.000 earley_forest.py:447(visit_intermediate_node_out)
       63    0.000    0.000    0.001    0.000 utils.py:275(bfs)
      198    0.000    0.000    0.000    0.000 Sheet.py:99(get_cell_contents)
       28    0.000    0.000    0.001    0.000 tree_matcher.py:106(_build_recons_rules)
      219    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
      355    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      996    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      496    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
      198    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
      594    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
       99    0.000    0.000    0.000    0.000 Parser.py:378(__init__)
      198    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
      594    0.000    0.000    0.000    0.000 Cell.py:128(get_contents)
      693    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
    40/11    0.000    0.000    0.003    0.000 visitors.py:362(visit)
      111    0.000    0.000    0.007    0.000 visitors.py:159(transform)
      155    0.000    0.000    0.001    0.000 load_grammar.py:384(_flatten)
      172    0.000    0.000    0.000    0.000 grammar_analysis.py:17(__init__)
      198    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
       63    0.000    0.000    0.001    0.000 visitors.py:481(__get__)
      496    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
  139/129    0.000    0.000    0.000    0.000 tree.py:134(__hash__)
       11    0.000    0.000    0.000    0.000 load_grammar.py:450(pattern)
      198    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
       86    0.000    0.000    0.000    0.000 grammar.py:103(__init__)
       35    0.000    0.000    0.000    0.000 load_grammar.py:420(expansions)
      495    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
        2    0.000    0.000    0.000    0.000 utils.py:23(classify)
      396    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.005    0.005 earley.py:32(__init__)
    15/13    0.000    0.000    0.001    0.000 load_grammar.py:405(<listcomp>)
       99    0.000    0.000    0.000    0.000 reconstruct.py:15(is_iter_empty)
      495    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
        1    0.000    0.000    0.022    0.022 tree_matcher.py:89(__init__)
       99    0.000    0.000    0.000    0.000 {method 'groups' of 're.Match' objects}
       41    0.000    0.000    0.002    0.000 load_grammar.py:601(literal)
      219    0.000    0.000    0.000    0.000 {method 'values' of 'collections.OrderedDict' objects}
       25    0.000    0.000    0.013    0.001 visitors.py:258(transform)
        1    0.000    0.000    0.004    0.004 grammar_analysis.py:141(__init__)
       63    0.000    0.000    0.001    0.000 visitors.py:470(__init__)
      100    0.000    0.000    0.000    0.000 Workbook.py:575(get_cell_from_location)
      172    0.000    0.000    0.000    0.000 grammar_analysis.py:45(__hash__)
       47    0.000    0.000    0.000    0.000 lexer.py:41(__init__)
      396    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      110    0.000    0.000    0.000    0.000 tree.py:32(__init__)
       63    0.000    0.000    0.003    0.000 visitors.py:500(_vargs_inline)
      198    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
       13    0.000    0.000    0.001    0.000 grammar_analysis.py:180(expand_rule)
      297    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
       63    0.000    0.000    0.003    0.000 visitors.py:478(__call__)
       35    0.000    0.000    0.000    0.000 tree_matcher.py:121(<listcomp>)
      315    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
       45    0.000    0.000    0.000    0.000 {built-in method builtins.max}
       49    0.000    0.000    0.000    0.000 tree_matcher.py:57(make_recons_rule)
      168    0.000    0.000    0.000    0.000 tree_matcher.py:12(is_discarded_terminal)
      123    0.000    0.000    0.000    0.000 load_grammar.py:537(<genexpr>)
       99    0.000    0.000    0.000    0.000 tree_matcher.py:74(__init__)
       99    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
       99    0.000    0.000    0.000    0.000 {method 'clear' of 'set' objects}
      297    0.000    0.000    0.000    0.000 Cell.py:135(get_children)
      170    0.000    0.000    0.000    0.000 grammar_analysis.py:28(next)
      198    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
      105    0.000    0.000    0.000    0.000 load_grammar.py:759(<genexpr>)
       25    0.000    0.000    0.002    0.000 load_grammar.py:674(nr_deepcopy_tree)
       41    0.000    0.000    0.001    0.000 ast.py:30(parse)
        1    0.000    0.000    0.000    0.000 load_grammar.py:793(<setcomp>)
      192    0.000    0.000    0.000    0.000 visitors.py:178(__default_token__)
       82    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
       20    0.000    0.000    0.000    0.000 load_grammar.py:631(expansions)
       41    0.000    0.000    0.000    0.000 load_grammar.py:536(_rfind)
        2    0.000    0.000    0.000    0.000 tree_matcher.py:28(_best_from_group)
      200    0.000    0.000    0.000    0.000 Graph.py:137(get_parents_from_cell)
       54    0.000    0.000    0.000    0.000 lexer.py:50(__hash__)
       15    0.000    0.000    0.000    0.000 utils.py:190(<listcomp>)
      198    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.005    0.005 load_grammar.py:710(<listcomp>)
       99    0.000    0.000    0.000    0.000 earley.py:254(<setcomp>)
       20    0.000    0.000    0.000    0.000 load_grammar.py:637(<lambda>)
      113    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
       35    0.000    0.000    0.000    0.000 load_grammar.py:798(<lambda>)
       65    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
       11    0.000    0.000    0.000    0.000 earley.py:58(<listcomp>)
       99    0.000    0.000    0.000    0.000 tree_matcher.py:77(lex)
       10    0.000    0.000    0.000    0.000 load_grammar.py:346(expr)
        7    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
       20    0.000    0.000    0.000    0.000 lexer.py:81(to_regexp)
       41    0.000    0.000    0.000    0.000 {built-in method builtins.all}
       53    0.000    0.000    0.000    0.000 grammar.py:69(__init__)
       35    0.000    0.000    0.000    0.000 load_grammar.py:621(expansion)
       20    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
       46    0.000    0.000    0.000    0.000 load_grammar.py:668(value)
        1    0.000    0.000    0.000    0.000 earley.py:52(<setcomp>)
        2    0.000    0.000    0.000    0.000 utils.py:271(<listcomp>)
       21    0.000    0.000    0.000    0.000 lexer.py:125(__init__)
      116    0.000    0.000    0.000    0.000 tree.py:175(<lambda>)
       50    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
       20    0.000    0.000    0.000    0.000 re.py:270(escape)
        1    0.000    0.000    0.000    0.000 load_grammar.py:806(<setcomp>)
       15    0.000    0.000    0.000    0.000 utils.py:184(dedup_list)
       41    0.000    0.000    0.000    0.000 ast.py:76(_convert)
       20    0.000    0.000    0.000    0.000 lexer.py:84(min_width)
       21    0.000    0.000    0.000    0.000 lexer.py:70(_get_flags)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:82(<setcomp>)
       25    0.000    0.000    0.000    0.000 load_grammar.py:639(<genexpr>)
       15    0.000    0.000    0.000    0.000 tree.py:169(find_pred)
       49    0.000    0.000    0.000    0.000 tree_matcher.py:17(__init__)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:115(<setcomp>)
       35    0.000    0.000    0.000    0.000 grammar.py:22(__ne__)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:108(<setcomp>)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:178(<dictcomp>)
       13    0.000    0.000    0.000    0.000 typing.py:255(inner)
       14    0.000    0.000    0.000    0.000 tree_matcher.py:61(make_recons_rule_to_term)
        1    0.000    0.000    0.000    0.000 load_grammar.py:246(_add_recurse_rule)
       15    0.000    0.000    0.000    0.000 lexer.py:53(__eq__)
        1    0.000    0.000    0.000    0.000 earley.py:53(<setcomp>)
        1    0.000    0.000    0.000    0.000 copy.py:66(copy)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:166(<dictcomp>)
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.001    0.001 load_grammar.py:693(<listcomp>)
       13    0.000    0.000    0.000    0.000 typing.py:720(__hash__)
        1    0.000    0.000    0.001    0.001 load_grammar.py:694(<listcomp>)
       49    0.000    0.000    0.000    0.000 load_grammar.py:572(<genexpr>)
       35    0.000    0.000    0.000    0.000 {built-in method builtins.any}
       33    0.000    0.000    0.000    0.000 tree_matcher.py:44(<lambda>)
       15    0.000    0.000    0.000    0.000 tree.py:173(find_data)
       65    0.000    0.000    0.000    0.000 typing.py:1149(cast)
        1    0.000    0.000    0.000    0.000 load_grammar.py:446(<dictcomp>)
       20    0.000    0.000    0.000    0.000 lexer.py:88(max_width)
       30    0.000    0.000    0.000    0.000 visitors.py:108(__init__)
        1    0.000    0.000    0.022    0.022 reconstruct.py:80(__init__)
        5    0.000    0.000    0.000    0.000 load_grammar.py:613(_make_joined_pattern)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:116(<setcomp>)
       50    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
       30    0.000    0.000    0.000    0.000 load_grammar.py:663(value)
        1    0.000    0.000    0.000    0.000 load_grammar.py:375(maybe)
        5    0.000    0.000    0.000    0.000 load_grammar.py:640(<setcomp>)
       21    0.000    0.000    0.000    0.000 load_grammar.py:809(<lambda>)
       30    0.000    0.000    0.000    0.000 load_grammar.py:617(pattern)
        6    0.000    0.000    0.000    0.000 load_grammar.py:411(alias)
       34    0.000    0.000    0.000    0.000 grammar_analysis.py:149(<lambda>)
       35    0.000    0.000    0.000    0.000 load_grammar.py:431(expansion)
        2    0.000    0.000    0.000    0.000 load_grammar.py:201(_will_not_get_removed)
        1    0.000    0.000    0.000    0.000 load_grammar.py:642(expr)
        2    0.000    0.000    0.000    0.000 tree_matcher.py:42(_best_rules_from_group)
        1    0.000    0.000    0.000    0.000 copy.py:258(_reconstruct)
       34    0.000    0.000    0.000    0.000 grammar_analysis.py:172(<lambda>)
        9    0.000    0.000    0.000    0.000 load_grammar.py:210(_args_as_int)
        1    0.000    0.000    0.000    0.000 load_grammar.py:443(__init__)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:175(<dictcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:235(_name_rule)
        2    0.000    0.000    0.000    0.000 visitors.py:163(__mul__)
        4    0.000    0.000    0.000    0.000 grammar.py:124(__eq__)
        2    0.000    0.000    0.000    0.000 load_grammar.py:219(expansion)
        1    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:145(<dictcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:60(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
       35    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
        2    0.000    0.000    0.000    0.000 visitors.py:263(__mul__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:240(_add_rule)
        1    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:763(<listcomp>)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:163(<dictcomp>)
        8    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
        1    0.000    0.000    0.000    0.000 reconstruct.py:83(<dictcomp>)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:160(<dictcomp>)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        2    0.000    0.000    0.000    0.000 utils.py:269(classify_bool)
        2    0.000    0.000    0.000    0.000 load_grammar.py:222(expansions)
       11    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
        4    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
        1    0.000    0.000    0.000    0.000 common.py:83(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
        4    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
        1    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        4    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        1    0.000    0.000    0.000    0.000 copyreg.py:90(__newobj__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
        1    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}



##################Running pro_create_sheets... #######################
for test <function pro_create_sheets at 0x000001311CEB98B0> total time: 0.05725840000000001
Total Logs
         36852 function calls in 0.015 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     5000    0.003    0.000    0.008    0.000 random.py:285(choice)
     5000    0.003    0.000    0.004    0.000 random.py:250(_randbelow_with_getrandbits)
     5100    0.002    0.000    0.010    0.000 profiler.py:46(<genexpr>)
      100    0.001    0.000    0.002    0.000 utils.py:96(check_new_name)
      100    0.001    0.000    0.011    0.000 {method 'join' of 'str' objects}
     5000    0.001    0.000    0.001    0.000 {method 'isalnum' of 'str' objects}
     5150    0.001    0.000    0.001    0.000 {method 'getrandbits' of '_random.Random' objects}
     5100    0.001    0.000    0.001    0.000 {built-in method builtins.len}
      100    0.001    0.000    0.003    0.000 Workbook.py:868(new_sheet)
     5000    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
      100    0.000    0.000    0.011    0.000 profiler.py:43(generate_random_string)
      100    0.000    0.000    0.004    0.000 Workbook.py:35(run_func)
      100    0.000    0.000    0.000    0.000 Sheet.py:25(__init__)
      100    0.000    0.000    0.000    0.000 Graph.py:128(get_sheet_parents)
      100    0.000    0.000    0.000    0.000 Workbook.py:857(recompute_sheet_parents)
      100    0.000    0.000    0.000    0.000 Workbook.py:505(num_sheets)
      100    0.000    0.000    0.000    0.000 Graph.py:121(has_sheet)
      100    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
      100    0.000    0.000    0.000    0.000 Graph.py:124(add_sheet)
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
      100    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_set_cell_contents... #######################
for test <function pro_set_cell_contents at 0x000001311CEB99D0> total time: 50.4391463
Total Logs
         30968575 function calls in 12.372 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  4999500    3.152    0.000    7.765    0.000 random.py:285(choice)
  4999500    2.955    0.000    4.096    0.000 random.py:250(_randbelow_with_getrandbits)
  5009499    2.573    0.000   10.338    0.000 profiler.py:46(<genexpr>)
    29997    1.167    0.000   11.505    0.000 {method 'join' of 'str' objects}
  5161154    0.676    0.000    0.676    0.000 {method 'getrandbits' of '_random.Random' objects}
  5069493    0.529    0.000    0.529    0.000 {built-in method builtins.len}
  4999500    0.466    0.000    0.466    0.000 {method 'bit_length' of 'int' objects}
     9999    0.101    0.000    0.802    0.000 Workbook.py:727(set_cell_contents)
     9999    0.078    0.000    0.202    0.000 Cell.py:81(set_cell_value)
   189981    0.076    0.000    0.076    0.000 {method 'lower' of 'str' objects}
     9999    0.062    0.000    0.433    0.000 Sheet.py:60(set_cell_contents)
     9999    0.055    0.000    0.088    0.000 Workbook.py:638(recompute_cell_and_parents)
     9999    0.054    0.000    0.086    0.000 utils.py:179(convert_location_to_idx)
     9999    0.053    0.000    0.112    0.000 utils.py:307(error_matcher)
     9999    0.036    0.000   11.516    0.001 profiler.py:43(generate_random_string)
    19998    0.027    0.000    0.044    0.000 Sheet.py:93(get_cell_value)
     9999    0.025    0.000    0.030    0.000 profiler.py:25(convert_to_excel_coordinates)
     9999    0.024    0.000    0.826    0.000 Workbook.py:35(run_func)
     9999    0.022    0.000    0.248    0.000 Cell.py:46(__init__)
     9999    0.021    0.000    0.021    0.000 {method 'match' of 're.Pattern' objects}
     9999    0.021    0.000    0.226    0.000 Cell.py:65(set_contents)
     9999    0.018    0.000    0.022    0.000 Sheet.py:124(update_extent)
     9999    0.017    0.000    0.027    0.000 re.py:289(_compile)
    39996    0.015    0.000    0.015    0.000 {method 'get' of 'dict' objects}
    19998    0.014    0.000    0.018    0.000 utils.py:78(get_hidden_name)
     9999    0.014    0.000    0.025    0.000 Workbook.py:540(get_sheet_name_from_hidden)
     9999    0.013    0.000    0.074    0.000 utils.py:131(check_valid_cell_location)
    19998    0.013    0.000    0.013    0.000 {built-in method _heapq.heappush}
     9999    0.012    0.000    0.060    0.000 re.py:188(match)
    19998    0.012    0.000    0.012    0.000 {built-in method builtins.isinstance}
    79992    0.011    0.000    0.011    0.000 {method 'strip' of 'str' objects}
    19998    0.011    0.000    0.016    0.000 Sheet.py:120(get_cell)
     9999    0.010    0.000    0.018    0.000 Workbook.py:714(clean_children_cells)
     9999    0.009    0.000    0.009    0.000 Graph.py:330(tarjans)
     9999    0.008    0.000    0.010    0.000 utils.py:212(is_formula)
    19998    0.004    0.000    0.004    0.000 {built-in method builtins.ord}
     9999    0.004    0.000    0.004    0.000 {method 'lstrip' of 'str' objects}
     9999    0.003    0.000    0.003    0.000 Cell.py:125(get_value)
     9999    0.003    0.000    0.003    0.000 {built-in method builtins.divmod}
     9999    0.003    0.000    0.003    0.000 {method 'upper' of 'str' objects}
     9999    0.003    0.000    0.003    0.000 Sheet.py:54(get_sheet_name)
     9999    0.002    0.000    0.002    0.000 {built-in method builtins.chr}
     9999    0.002    0.000    0.002    0.000 {method 'rstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_update_formula_chain... #######################
for test <function pro_update_formula_chain at 0x000001311CEB9C10> total time: 33.77605460000001
Total Logs
         900012 function calls in 8.034 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    7.513    7.513    7.546    7.546 Graph.py:330(tarjans)
    10000    0.056    0.000    0.468    0.000 Workbook.py:582(recompute_cell_value)
     9999    0.033    0.000    0.270    0.000 Workbook.py:544(get_formula_value)
     9999    0.029    0.000    0.118    0.000 Parser.py:253(cell)
    10000    0.026    0.000    0.049    0.000 Cell.py:81(set_cell_value)
    29999    0.026    0.000    0.041    0.000 Sheet.py:93(get_cell_value)
    20000    0.021    0.000    0.021    0.000 Graph.py:137(get_parents_from_cell)
     9999    0.016    0.000    0.064    0.000 Workbook.py:806(get_cell_value)
    40000    0.015    0.000    0.020    0.000 utils.py:78(get_hidden_name)
     9999    0.014    0.000    0.014    0.000 Parser.py:97(__init__)
        1    0.014    0.014    8.030    8.030 Workbook.py:638(recompute_cell_and_parents)
   100011    0.013    0.000    0.013    0.000 {method 'lower' of 'str' objects}
    19998    0.013    0.000    0.020    0.000 {built-in method builtins.getattr}
     9999    0.013    0.000    0.193    0.000 visitors.py:421(_visit_tree)
     9999    0.013    0.000    0.015    0.000 typing.py:868(__new__)
     9999    0.012    0.000    0.063    0.000 Sheet.py:104(set_cell_value)
    69995    0.012    0.000    0.012    0.000 {built-in method builtins.isinstance}
    19999    0.011    0.000    0.016    0.000 re.py:289(_compile)
     9999    0.011    0.000    0.160    0.000 visitors.py:444(inner)
    50000    0.010    0.000    0.010    0.000 {method 'get' of 'dict' objects}
     9999    0.010    0.000    0.018    0.000 visitors.py:429(visit_children)
    10000    0.010    0.000    0.016    0.000 utils.py:207(remove_exponent)
    10000    0.009    0.000    0.021    0.000 Workbook.py:575(get_cell_from_location)
    10000    0.008    0.000    0.015    0.000 Workbook.py:540(get_sheet_name_from_hidden)
     9999    0.008    0.000    0.132    0.000 Parser.py:40(fix_formula)
     9999    0.007    0.000    0.021    0.000 re.py:203(sub)
    10000    0.007    0.000    0.021    0.000 re.py:188(match)
    10000    0.007    0.000    0.027    0.000 utils.py:131(check_valid_cell_location)
    10000    0.006    0.000    0.006    0.000 {method 'match' of 're.Pattern' objects}
     9999    0.006    0.000    0.008    0.000 visitors.py:430(<listcomp>)
    50000    0.006    0.000    0.006    0.000 {method 'append' of 'list' objects}
    30000    0.006    0.000    0.006    0.000 {method 'pop' of 'list' objects}
     9999    0.006    0.000    0.007    0.000 lexer.py:265(__eq__)
     9999    0.006    0.000    0.199    0.000 visitors.py:415(visit)
    29999    0.006    0.000    0.006    0.000 Cell.py:125(get_value)
     9999    0.006    0.000    0.006    0.000 {method 'sub' of 're.Pattern' objects}
    10001    0.005    0.000    0.006    0.000 utils.py:212(is_formula)
    40004    0.005    0.000    0.005    0.000 {built-in method builtins.len}
    19998    0.004    0.000    0.004    0.000 Cell.py:62(get_cached_formula)
    19999    0.004    0.000    0.004    0.000 Cell.py:128(get_contents)
     9999    0.004    0.000    0.005    0.000 utils.py:295(get_highest_precedence_error)
    10002    0.004    0.000    0.007    0.000 Sheet.py:120(get_cell)
    10000    0.003    0.000    0.003    0.000 {method 'quantize' of 'decimal.Decimal' objects}
     9999    0.003    0.000    0.003    0.000 Cell.py:131(set_children)
    10000    0.002    0.000    0.002    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
     9999    0.002    0.000    0.002    0.000 {built-in method __new__ of type object at 0x00007FFB2480DCB0}
        1    0.002    0.002    8.032    8.032 Workbook.py:727(set_cell_contents)
     9999    0.002    0.000    0.002    0.000 Parser.py:108(get_cell_refs)
     9999    0.002    0.000    0.002    0.000 {method 'add' of 'set' objects}
    10000    0.002    0.000    0.002    0.000 Cell.py:135(get_children)
        1    0.002    0.002    8.034    8.034 Workbook.py:35(run_func)
    10000    0.002    0.000    0.002    0.000 Sheet.py:54(get_sheet_name)
    10008    0.001    0.000    0.001    0.000 {method 'strip' of 'str' objects}
    10000    0.001    0.000    0.001    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 utils.py:179(convert_location_to_idx)
        1    0.000    0.000    0.000    0.000 Sheet.py:60(set_cell_contents)
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 utils.py:307(error_matcher)
        1    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
        1    0.000    0.000    0.000    0.000 Workbook.py:714(clean_children_cells)
        1    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        2    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}



##################Running pro_write_formula_chain... #######################
for test <function pro_write_formula_chain at 0x000001311CEB9B80> total time: 1430.2793575
Total Logs
         178804367 function calls (177984449 primitive calls) in 137.457 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
   158874   25.360    0.000   91.371    0.001 earley.py:78(predict_and_complete)
  9029097   14.664    0.000   22.141    0.000 earley_common.py:9(__init__)
     9999    7.568    0.001   26.930    0.003 earley_forest.py:283(visit)
22497750/21877812    7.413    0.000    9.432    0.000 {built-in method builtins.hash}
  7289271    6.073    0.000    9.636    0.000 utils.py:345(add)
  5629437    5.283    0.000    9.983    0.000 grammar.py:18(__eq__)
 12198780    4.242    0.000    6.230    0.000 grammar.py:25(__hash__)
   148875    4.103    0.000   13.453    0.000 xearley.py:41(scan)
   579942    3.592    0.000    8.923    0.000 earley_forest.py:50(__init__)
  7359264    3.564    0.000    3.605    0.000 earley_common.py:28(__eq__)
  1696500    3.326    0.000    3.887    0.000 typing.py:868(__new__)
  5269473    3.261    0.000    4.124    0.000 lexer.py:265(__eq__)
   299970    2.947    0.000   10.669    0.000 earley.py:135(<listcomp>)
  3429657    2.847    0.000    4.739    0.000 utils.py:342(__contains__)
 14698530    2.479    0.000    2.479    0.000 {built-in method builtins.isinstance}
  1626507    1.920    0.000    2.212    0.000 {built-in method fromkeys}
 11288871    1.901    0.000    1.901    0.000 earley_common.py:31(__hash__)
   559944    1.770    0.000    7.227    0.000 earley_forest.py:437(_visit_node_out_helper)
  9759024    1.751    0.000    1.751    0.000 grammar.py:121(__hash__)
 10516728    1.598    0.000    1.598    0.000 {method 'append' of 'list' objects}
   279972    1.528    0.000    3.328    0.000 earley_forest.py:603(transform_packed_node)
 11108889    1.447    0.000    1.447    0.000 {built-in method builtins.len}
  4779522    1.406    0.000    1.406    0.000 {built-in method builtins.next}
   559944    1.254    0.000    2.592    0.000 {built-in method builtins.sorted}
  1626507    1.139    0.000    3.352    0.000 utils.py:339(__init__)
  1338756    1.107    0.000    1.107    0.000 {method 'match' of 're.Pattern' objects}
  6229377    1.102    0.000    1.102    0.000 {built-in method builtins.id}
   599940    1.056    0.000    3.293    0.000 earley_forest.py:64(add_family)
   599940    0.981    0.000    1.619    0.000 earley_forest.py:131(__init__)
  1318758    0.905    0.000    1.965    0.000 parser_frontends.py:184(match)
     9999    0.848    0.000  105.673    0.011 xearley.py:39(_parse)
  1666503    0.785    0.000    1.171    0.000 utils.py:348(__iter__)
   599940    0.775    0.000    3.257    0.000 earley_common.py:25(advance)
   279972    0.742    0.000    2.008    0.000 earley_forest.py:631(visit_packed_node_in)
   559944    0.713    0.000    3.814    0.000 earley_forest.py:85(children)
  1786491    0.672    0.000    0.672    0.000 {built-in method __new__ of type object at 0x00007FFB2480DCB0}
   209979    0.601    0.000    1.515    0.000 earley_forest.py:581(transform_symbol_node)
   279972    0.592    0.000    5.401    0.000 earley_forest.py:638(visit_packed_node_out)
   859914    0.582    0.000    0.794    0.000 {method 'setdefault' of 'dict' objects}
   279972    0.558    0.000    3.128    0.000 earley_forest.py:422(visit_symbol_node_in)
   279972    0.532    0.000    1.160    0.000 earley_forest.py:427(visit_packed_node_in)
   279972    0.526    0.000    5.049    0.000 earley_forest.py:625(visit_symbol_node_in)
  1409859    0.525    0.000    0.525    0.000 {method 'add' of 'set' objects}
  2226447    0.504    0.000    0.504    0.000 {built-in method builtins.iter}
   559944    0.453    0.000    0.674    0.000 earley_forest.py:145(sort_key)
   209979    0.444    0.000    0.996    0.000 earley_forest.py:565(_call_rule_func)
  2579742    0.418    0.000    0.418    0.000 {method 'pop' of 'collections.deque' objects}
  2489751    0.363    0.000    0.363    0.000 {method 'append' of 'collections.deque' objects}
   279972    0.357    0.000    0.367    0.000 earley_forest.py:499(__init__)
   209979    0.338    0.000    0.582    0.000 earley_forest.py:556(_collapse_ambig)
   279972    0.308    0.000    0.471    0.000 earley_forest.py:155(children)
     9999    0.307    0.000  133.974    0.013 parser_frontends.py:100(parse)
   279972    0.283    0.000    0.509    0.000 earley_forest.py:70(load_paths)
     9999    0.276    0.000  133.561    0.013 earley.py:262(parse)
   839916    0.251    0.000    0.251    0.000 {method 'remove' of 'set' objects}
   279972    0.246    0.000    4.704    0.000 earley_forest.py:450(visit_packed_node_out)
     9999    0.236    0.000  136.705    0.014 Workbook.py:638(recompute_cell_and_parents)
    89991    0.225    0.000    0.335    0.000 lexer.py:213(_future_new)
   559944    0.221    0.000    0.328    0.000 utils.py:357(__len__)
   559944    0.221    0.000    0.221    0.000 earley_forest.py:141(is_empty)
   199980    0.189    0.000    0.222    0.000 {built-in method builtins.getattr}
    69993    0.181    0.000    0.249    0.000 earley_forest.py:591(transform_intermediate_node)
   209979    0.175    0.000    2.428    0.000 earley_forest.py:444(visit_symbol_node_out)
    89991    0.165    0.000    0.501    0.000 lexer.py:202(__new__)
   279972    0.163    0.000    0.163    0.000 earley_forest.py:158(<listcomp>)
   599940    0.160    0.000    0.160    0.000 earley_forest.py:101(__hash__)
   169983    0.159    0.000    0.250    0.000 parse_tree_builder.py:20(__call__)
   559944    0.147    0.000    0.147    0.000 earley_forest.py:548(_check_cycle)
    79992    0.147    0.000    0.180    0.000 earley_forest.py:432(visit_token_node)
     9999    0.141    0.000  135.884    0.014 Workbook.py:544(get_formula_value)
    89991    0.139    0.000    0.161    0.000 earley_forest.py:193(__init__)
59994/9999    0.137    0.000    1.358    0.000 visitors.py:429(visit_children)
   599940    0.136    0.000    0.136    0.000 earley_forest.py:169(__hash__)
59994/9999    0.130    0.000    1.492    0.000 visitors.py:444(inner)
   209979    0.129    0.000    0.165    0.000 earley_forest.py:571(_call_ambig_func)
59994/9999    0.125    0.000    1.587    0.000 visitors.py:421(_visit_tree)
    59994    0.123    0.000    0.890    0.000 Parser.py:40(fix_formula)
   559944    0.122    0.000    0.122    0.000 {method 'pop' of 'list' objects}
     9999    0.103    0.000  137.363    0.014 Workbook.py:727(set_cell_contents)
59994/9999    0.102    0.000    1.341    0.000 visitors.py:430(<listcomp>)
     9999    0.102    0.000    0.452    0.000 Parser.py:253(cell)
    19998    0.102    0.000    0.102    0.000 Parser.py:243(number)
   178872    0.100    0.000    0.100    0.000 utils.py:354(__bool__)
    19998    0.099    0.000    0.176    0.000 Cell.py:81(set_cell_value)
    49995    0.092    0.000    0.160    0.000 Sheet.py:93(get_cell_value)
     9999    0.091    0.000    0.401    0.000 Sheet.py:60(set_cell_contents)
     9999    0.089    0.000    0.152    0.000 utils.py:179(convert_location_to_idx)
     9999    0.088    0.000   27.017    0.003 earley_forest.py:535(visit)
    29997    0.079    0.000    0.079    0.000 xearley.py:85(<listcomp>)
    29997    0.079    0.000    0.210    0.000 xearley.py:88(<listcomp>)
     9999    0.070    0.000    0.104    0.000 Workbook.py:687(_get_sheet_name_location)
    19998    0.070    0.000    0.112    0.000 parse_tree_builder.py:145(__call__)
     9999    0.066    0.000    0.123    0.000 earley_forest.py:523(__init__)
     9999    0.066    0.000    0.077    0.000 Parser.py:211(mul_expr)
    69993    0.064    0.000    0.580    0.000 earley_forest.py:447(visit_intermediate_node_out)
     9999    0.062    0.000    0.235    0.000 Workbook.py:806(get_cell_value)
   209979    0.060    0.000    0.060    0.000 {built-in method builtins.hasattr}
    89991    0.060    0.000    0.060    0.000 {method 'group' of 're.Match' objects}
     9999    0.059    0.000    0.081    0.000 parser_frontends.py:96(_make_lexer_thread)
     9999    0.057    0.000    0.189    0.000 earley.py:284(<listcomp>)
    29997    0.057    0.000    0.057    0.000 {method 'join' of 'str' objects}
    29997    0.056    0.000    0.081    0.000 re.py:289(_compile)
     9999    0.055    0.000    0.055    0.000 Parser.py:97(__init__)
    59994    0.051    0.000    0.051    0.000 tree.py:61(__init__)
    59994    0.050    0.000    0.073    0.000 utils.py:295(get_highest_precedence_error)
     9999    0.049    0.000    0.212    0.000 Workbook.py:700(add_children_cells)
    89991    0.047    0.000    0.047    0.000 {method 'get' of 'dict' objects}
     9999    0.047    0.000    0.057    0.000 profiler.py:25(convert_to_excel_coordinates)
     9999    0.046    0.000    0.057    0.000 Parser.py:169(add_expr)
     9999    0.045    0.000   27.066    0.003 earley_forest.py:397(transform)
   159984    0.044    0.000    0.044    0.000 {method 'lower' of 'str' objects}
     9999    0.044    0.000    0.059    0.000 Graph.py:68(add_connection)
     9999    0.044    0.000  134.018    0.013 lark.py:640(parse)
    39996    0.043    0.000    0.053    0.000 utils.py:78(get_hidden_name)
   149985    0.040    0.000    0.040    0.000 {method 'end' of 're.Match' objects}
     9999    0.039    0.000    0.057    0.000 earley_forest.py:390(__init__)
    19998    0.038    0.000    0.038    0.000 {built-in method _heapq.heappush}
    19998    0.038    0.000    0.154    0.000 utils.py:131(check_valid_cell_location)
     9999    0.036    0.000  137.399    0.014 Workbook.py:35(run_func)
     9999    0.033    0.000    0.033    0.000 {method 'sub' of 're.Pattern' objects}
     9999    0.032    0.000    0.184    0.000 Sheet.py:104(set_cell_value)
     9999    0.031    0.000    0.055    0.000 utils.py:207(remove_exponent)
    19998    0.030    0.000    0.116    0.000 re.py:188(match)
    89991    0.029    0.000    0.029    0.000 earley_forest.py:207(__hash__)
     9999    0.026    0.000    0.087    0.000 Cell.py:46(__init__)
     9999    0.026    0.000    0.026    0.000 {built-in method _abc._abc_instancecheck}
     9999    0.026    0.000    0.043    0.000 Workbook.py:540(get_sheet_name_from_hidden)
     9999    0.026    0.000    0.030    0.000 Sheet.py:124(update_extent)
     9999    0.025    0.000    0.101    0.000 re.py:203(sub)
     9999    0.024    0.000    0.061    0.000 Cell.py:65(set_contents)
     9999    0.023    0.000    0.025    0.000 parser_frontends.py:86(_verify_start)
    59994    0.023    0.000    0.023    0.000 {method 'extend' of 'list' objects}
    39996    0.020    0.000    0.020    0.000 Cell.py:125(get_value)
     9999    0.019    0.000    0.019    0.000 lark.py:220(__getattr__)
     9999    0.019    0.000    0.019    0.000 Graph.py:330(tarjans)
     9999    0.018    0.000    0.018    0.000 earley_forest.py:232(__init__)
    79992    0.017    0.000    0.017    0.000 earley_forest.py:418(transform_token_node)
     9999    0.017    0.000    0.017    0.000 {method 'split' of 'str' objects}
     9999    0.017    0.000    0.028    0.000 Workbook.py:714(clean_children_cells)
     9999    0.017    0.000    1.603    0.000 visitors.py:415(visit)
     9999    0.015    0.000    0.015    0.000 {method 'update' of 'dict' objects}
    19998    0.014    0.000    0.019    0.000 Sheet.py:120(get_cell)
     9999    0.013    0.000    0.016    0.000 utils.py:212(is_formula)
     9999    0.013    0.000    0.039    0.000 abc.py:96(__instancecheck__)
     9909    0.012    0.000    0.012    0.000 {method 'quantize' of 'decimal.Decimal' objects}
     9999    0.011    0.000    0.011    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
    39996    0.010    0.000    0.010    0.000 {method 'strip' of 'str' objects}
     9999    0.009    0.000    0.009    0.000 Cell.py:59(cache_formula)
     9999    0.008    0.000    0.008    0.000 grammar.py:15(__init__)
     9999    0.008    0.000    0.008    0.000 Cell.py:131(set_children)
    19998    0.008    0.000    0.008    0.000 Cell.py:128(get_contents)
     9999    0.006    0.000    0.006    0.000 {built-in method builtins.divmod}
    19998    0.006    0.000    0.006    0.000 {built-in method builtins.ord}
     9999    0.006    0.000    0.006    0.000 Sheet.py:54(get_sheet_name)
     9999    0.006    0.000    0.006    0.000 Parser.py:111(parens)
     9999    0.005    0.000    0.005    0.000 {built-in method builtins.chr}
     9999    0.005    0.000    0.005    0.000 Parser.py:108(get_cell_refs)
     9999    0.005    0.000    0.005    0.000 {method 'upper' of 'str' objects}
     9999    0.003    0.000    0.003    0.000 Cell.py:62(get_cached_formula)
     9999    0.003    0.000    0.003    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
     9999    0.003    0.000    0.003    0.000 {method 'lstrip' of 'str' objects}
     9999    0.003    0.000    0.003    0.000 {method 'rstrip' of 'str' objects}
       90    0.000    0.000    0.000    0.000 {method 'normalize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_cyle_formula_chain... #######################
for test <function pro_cyle_formula_chain at 0x000001311CEB9D30> total time: 42.17479700000002
Total Logs
         306631 function calls (306610 primitive calls) in 10.496 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1   10.258   10.258   10.316   10.316 Graph.py:330(tarjans)
        1    0.090    0.090    0.173    0.173 Workbook.py:616(_set_cycle_detected)
    30001    0.026    0.000    0.026    0.000 {built-in method builtins.min}
    20000    0.025    0.000    0.025    0.000 Graph.py:137(get_parents_from_cell)
    10002    0.017    0.000    0.023    0.000 Cell.py:81(set_cell_value)
    10000    0.011    0.000    0.026    0.000 Workbook.py:575(get_cell_from_location)
    10002    0.009    0.000    0.016    0.000 Workbook.py:540(get_sheet_name_from_hidden)
    20005    0.009    0.000    0.012    0.000 utils.py:78(get_hidden_name)
    10000    0.008    0.000    0.008    0.000 CellError.py:11(__init__)
    30019    0.005    0.000    0.005    0.000 {method 'pop' of 'list' objects}
    30017    0.005    0.000    0.005    0.000 {method 'lower' of 'str' objects}
    10005    0.005    0.000    0.005    0.000 Cell.py:125(get_value)
    10009    0.005    0.000    0.005    0.000 {method 'get' of 'dict' objects}
    30544    0.004    0.000    0.004    0.000 {built-in method builtins.isinstance}
    10002    0.004    0.000    0.009    0.000 Sheet.py:120(get_cell)
    10002    0.003    0.000    0.003    0.000 Cell.py:128(get_contents)
    40407    0.003    0.000    0.003    0.000 {method 'append' of 'list' objects}
    10002    0.002    0.000    0.002    0.000 Sheet.py:54(get_sheet_name)
    10005    0.002    0.000    0.002    0.000 {method 'strip' of 'str' objects}
        1    0.002    0.002   10.496   10.496 Workbook.py:35(run_func)
        1    0.001    0.001   10.494   10.494 Workbook.py:638(recompute_cell_and_parents)
        1    0.001    0.001   10.494   10.494 Workbook.py:727(set_cell_contents)
        4    0.001    0.000    0.002    0.001 earley.py:78(predict_and_complete)
      362    0.000    0.000    0.001    0.000 earley_common.py:9(__init__)
        1    0.000    0.000    0.001    0.001 earley_forest.py:283(visit)
  865/844    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
      264    0.000    0.000    0.000    0.000 utils.py:345(add)
      215    0.000    0.000    0.000    0.000 grammar.py:18(__eq__)
      459    0.000    0.000    0.000    0.000 grammar.py:25(__hash__)
      309    0.000    0.000    0.000    0.000 earley_common.py:28(__eq__)
      144    0.000    0.000    0.000    0.000 utils.py:342(__contains__)
      203    0.000    0.000    0.000    0.000 lexer.py:265(__eq__)
        3    0.000    0.000    0.000    0.000 xearley.py:41(scan)
       10    0.000    0.000    0.000    0.000 earley.py:135(<listcomp>)
       53    0.000    0.000    0.000    0.000 typing.py:868(__new__)
       20    0.000    0.000    0.000    0.000 earley_forest.py:50(__init__)
      403    0.000    0.000    0.000    0.000 earley_common.py:31(__hash__)
      389    0.000    0.000    0.000    0.000 grammar.py:121(__hash__)
      439    0.000    0.000    0.000    0.000 {built-in method builtins.len}
       19    0.000    0.000    0.000    0.000 earley_forest.py:437(_visit_node_out_helper)
       10    0.000    0.000    0.000    0.000 earley_forest.py:603(transform_packed_node)
      156    0.000    0.000    0.000    0.000 {built-in method builtins.next}
       51    0.000    0.000    0.000    0.000 utils.py:339(__init__)
       18    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
       51    0.000    0.000    0.000    0.000 {built-in method fromkeys}
       21    0.000    0.000    0.000    0.000 earley_forest.py:64(add_family)
      209    0.000    0.000    0.000    0.000 {built-in method builtins.id}
        8    0.000    0.000    0.000    0.000 earley_forest.py:581(transform_symbol_node)
       21    0.000    0.000    0.000    0.000 earley_forest.py:131(__init__)
        1    0.000    0.000    0.003    0.003 earley.py:262(parse)
       48    0.000    0.000    0.000    0.000 utils.py:348(__iter__)
       49    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
       21    0.000    0.000    0.000    0.000 earley_common.py:25(advance)
       18    0.000    0.000    0.000    0.000 earley_forest.py:85(children)
       10    0.000    0.000    0.000    0.000 earley_forest.py:631(visit_packed_node_in)
        1    0.000    0.000    0.002    0.002 xearley.py:39(_parse)
       21    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
       10    0.000    0.000    0.000    0.000 earley_forest.py:638(visit_packed_node_out)
       56    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x00007FFB2480DCB0}
       29    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
       10    0.000    0.000    0.000    0.000 earley_forest.py:427(visit_packed_node_in)
        9    0.000    0.000    0.000    0.000 earley_forest.py:422(visit_symbol_node_in)
        9    0.000    0.000    0.000    0.000 earley_forest.py:625(visit_symbol_node_in)
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        8    0.000    0.000    0.000    0.000 earley_forest.py:556(_collapse_ambig)
        1    0.000    0.000    0.000    0.000 utils.py:179(convert_location_to_idx)
       86    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.deque' objects}
        8    0.000    0.000    0.000    0.000 earley_forest.py:565(_call_rule_func)
       19    0.000    0.000    0.000    0.000 parser_frontends.py:184(match)
       20    0.000    0.000    0.000    0.000 earley_forest.py:145(sort_key)
        1    0.000    0.000    0.003    0.003 Workbook.py:544(get_formula_value)
       66    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
       83    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
        5    0.000    0.000    0.000    0.000 Sheet.py:93(get_cell_value)
        1    0.000    0.000    0.003    0.003 parser_frontends.py:100(parse)
       10    0.000    0.000    0.000    0.000 earley_forest.py:155(children)
        1    0.000    0.000    0.000    0.000 Sheet.py:60(set_cell_contents)
        9    0.000    0.000    0.000    0.000 earley_forest.py:499(__init__)
       10    0.000    0.000    0.000    0.000 earley_forest.py:450(visit_packed_node_out)
        3    0.000    0.000    0.000    0.000 lexer.py:213(_future_new)
        3    0.000    0.000    0.000    0.000 re.py:289(_compile)
        9    0.000    0.000    0.000    0.000 earley_forest.py:70(load_paths)
       28    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       20    0.000    0.000    0.000    0.000 earley_forest.py:141(is_empty)
       18    0.000    0.000    0.000    0.000 utils.py:357(__len__)
        1    0.000    0.000    0.000    0.000 Parser.py:253(cell)
        1    0.000    0.000    0.000    0.000 earley.py:284(<listcomp>)
        2    0.000    0.000    0.000    0.000 re.py:188(match)
        8    0.000    0.000    0.000    0.000 earley_forest.py:444(visit_symbol_node_out)
        1    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
       10    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
        1    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
        1    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
       19    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
        1    0.000    0.000    0.000    0.000 Workbook.py:687(_get_sheet_name_location)
        1    0.000    0.000    0.000    0.000 Workbook.py:806(get_cell_value)
        1    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        3    0.000    0.000    0.000    0.000 lexer.py:202(__new__)
        1    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
       10    0.000    0.000    0.000    0.000 earley_forest.py:158(<listcomp>)
        3    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
        8    0.000    0.000    0.000    0.000 earley_forest.py:571(_call_ambig_func)
        3    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        2    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
        1    0.000    0.000    0.000    0.000 earley_forest.py:523(__init__)
       19    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
        1    0.000    0.000    0.001    0.001 earley_forest.py:535(visit)
        1    0.000    0.000    0.000    0.000 re.py:203(sub)
       21    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
        1    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        1    0.000    0.000    0.001    0.001 earley_forest.py:397(transform)
        2    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
        1    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
        2    0.000    0.000    0.000    0.000 utils.py:131(check_valid_cell_location)
        7    0.000    0.000    0.000    0.000 parse_tree_builder.py:20(__call__)
        1    0.000    0.000    0.000    0.000 Workbook.py:700(add_children_cells)
        1    0.000    0.000    0.000    0.000 Workbook.py:714(clean_children_cells)
        1    0.000    0.000    0.003    0.003 lark.py:640(parse)
        1    0.000    0.000    0.000    0.000 visitors.py:444(inner)
        1    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
        1    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
        8    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
        1    0.000    0.000    0.000    0.000 Sheet.py:104(set_cell_value)
        1    0.000    0.000    0.000    0.000 visitors.py:421(_visit_tree)
        2    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000    0.000    0.000 Parser.py:40(fix_formula)
        3    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
        1    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
        1    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
        3    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        1    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
        3    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
        1    0.000    0.000    0.000    0.000 earley_forest.py:447(visit_intermediate_node_out)
        1    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
        1    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
        1    0.000    0.000    0.000    0.000 visitors.py:415(visit)
        1    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
        3    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
        1    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
        1    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
        1    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
        1    0.000    0.000    0.000    0.000 Cell.py:135(get_children)
        1    0.000    0.000    0.000    0.000 tree.py:61(__init__)
        1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        2    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
        1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}



##################Running pro_update_formula_pyramid... #######################
for test <function pro_update_formula_pyramid at 0x000001311CEB9E50> total time: 0.0014166999999999997
Total Logs
         233 function calls (221 primitive calls) in 0.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        2    0.000    0.000    0.000    0.000 Cell.py:81(set_cell_value)
        1    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
        1    0.000    0.000    0.000    0.000 Parser.py:253(cell)
        1    0.000    0.000    0.000    0.000 Workbook.py:727(set_cell_contents)
        2    0.000    0.000    0.000    0.000 Workbook.py:582(recompute_cell_value)
        8    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
      4/1    0.000    0.000    0.000    0.000 visitors.py:421(_visit_tree)
      4/1    0.000    0.000    0.000    0.000 visitors.py:444(inner)
        1    0.000    0.000    0.000    0.000 Workbook.py:638(recompute_cell_and_parents)
        1    0.000    0.000    0.000    0.000 typing.py:868(__new__)
        1    0.000    0.000    0.000    0.000 Workbook.py:544(get_formula_value)
        1    0.000    0.000    0.000    0.000 utils.py:179(convert_location_to_idx)
      4/1    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
        5    0.000    0.000    0.000    0.000 Sheet.py:93(get_cell_value)
        2    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
        2    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        1    0.000    0.000    0.000    0.000 Parser.py:211(mul_expr)
        1    0.000    0.000    0.000    0.000 utils.py:307(error_matcher)
        4    0.000    0.000    0.000    0.000 Parser.py:40(fix_formula)
        3    0.000    0.000    0.000    0.000 re.py:289(_compile)
      4/1    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
        1    0.000    0.000    0.000    0.000 Sheet.py:60(set_cell_contents)
       31    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        2    0.000    0.000    0.000    0.000 re.py:188(match)
       21    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
        8    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
        1    0.000    0.000    0.000    0.000 Workbook.py:35(run_func)
        4    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
        1    0.000    0.000    0.000    0.000 re.py:203(sub)
        1    0.000    0.000    0.000    0.000 Workbook.py:806(get_cell_value)
        6    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
        2    0.000    0.000    0.000    0.000 Workbook.py:575(get_cell_from_location)
        3    0.000    0.000    0.000    0.000 lexer.py:265(__eq__)
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
       10    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        2    0.000    0.000    0.000    0.000 Workbook.py:540(get_sheet_name_from_hidden)
        4    0.000    0.000    0.000    0.000 Graph.py:137(get_parents_from_cell)
       10    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
        1    0.000    0.000    0.000    0.000 Parser.py:243(number)
        1    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        4    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
        2    0.000    0.000    0.000    0.000 utils.py:131(check_valid_cell_location)
        5    0.000    0.000    0.000    0.000 Cell.py:125(get_value)
        2    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 Sheet.py:104(set_cell_value)
        1    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        1    0.000    0.000    0.000    0.000 Workbook.py:714(clean_children_cells)
        3    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
        2    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
       12    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        1    0.000    0.000    0.000    0.000 visitors.py:415(visit)
        2    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
       10    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        3    0.000    0.000    0.000    0.000 Cell.py:128(get_contents)
        1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        2    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
        2    0.000    0.000    0.000    0.000 Cell.py:135(get_children)
        1    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x00007FFB2480DCB0}
        2    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        2    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
        1    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
        1    0.000    0.000    0.000    0.000 Parser.py:111(parens)
        1    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}



##################Running pro_write_formula_pyramid... #######################
for test <function pro_write_formula_pyramid at 0x000001311CEB9F70> total time: 5.1607397000000015
Total Logs
         798561 function calls (798303 primitive calls) in 0.528 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      401    0.158    0.000    0.466    0.001 earley.py:78(predict_and_complete)
    68211    0.097    0.000    0.147    0.000 earley_common.py:9(__init__)
149508/149262    0.044    0.000    0.055    0.000 {built-in method builtins.hash}
    45585    0.036    0.000    0.060    0.000 utils.py:345(add)
    61023    0.026    0.000    0.026    0.000 earley_common.py:28(__eq__)
    79530    0.024    0.000    0.036    0.000 grammar.py:25(__hash__)
    26767    0.022    0.000    0.035    0.000 utils.py:342(__contains__)
      400    0.012    0.000    0.040    0.000 xearley.py:41(scan)
    75516    0.012    0.000    0.012    0.000 earley_common.py:31(__hash__)
    70326    0.011    0.000    0.011    0.000 grammar.py:121(__hash__)
     9786    0.009    0.000    0.016    0.000 grammar.py:18(__eq__)
    68615    0.009    0.000    0.009    0.000 {method 'append' of 'list' objects}
    70044    0.007    0.000    0.007    0.000 {built-in method builtins.len}
     2965    0.005    0.000    0.006    0.000 typing.py:868(__new__)
     5836    0.004    0.000    0.005    0.000 lexer.py:265(__eq__)
      732    0.004    0.000    0.008    0.000 earley_forest.py:50(__init__)
     4006    0.003    0.000    0.003    0.000 {method 'match' of 're.Pattern' objects}
     2862    0.003    0.000    0.004    0.000 {built-in method fromkeys}
    17294    0.003    0.000    0.003    0.000 {built-in method builtins.isinstance}
       99    0.003    0.000    0.509    0.005 xearley.py:39(_parse)
     3906    0.003    0.000    0.006    0.000 parser_frontends.py:184(match)
     2862    0.002    0.000    0.006    0.000 utils.py:339(__init__)
       99    0.002    0.000    0.522    0.005 Workbook.py:638(recompute_cell_and_parents)
       99    0.001    0.000    0.514    0.005 earley.py:262(parse)
       99    0.001    0.000    0.518    0.005 Workbook.py:544(get_formula_value)
     3266    0.001    0.000    0.001    0.000 {built-in method __new__ of type object at 0x00007FFB2480DCB0}
      122    0.001    0.000    0.004    0.000 earley.py:135(<listcomp>)
      734    0.001    0.000    0.004    0.000 earley_forest.py:64(add_family)
      734    0.001    0.000    0.002    0.000 earley_forest.py:131(__init__)
      734    0.001    0.000    0.004    0.000 earley_common.py:25(advance)
       99    0.001    0.000    0.527    0.005 Workbook.py:727(set_cell_contents)
      301    0.001    0.000    0.001    0.000 lexer.py:213(_future_new)
       98    0.001    0.000    0.002    0.000 exceptions.py:179(__init__)
       98    0.001    0.000    0.001    0.000 exceptions.py:55(get_context)
     1784    0.001    0.000    0.001    0.000 utils.py:348(__iter__)
     1828    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
      142    0.001    0.000    0.001    0.000 {built-in method builtins.sorted}
     3833    0.001    0.000    0.001    0.000 {method 'pop' of 'collections.deque' objects}
      198    0.001    0.000    0.001    0.000 Cell.py:81(set_cell_value)
       99    0.001    0.000    0.003    0.000 Sheet.py:60(set_cell_contents)
       99    0.001    0.000    0.001    0.000 utils.py:179(convert_location_to_idx)
      397    0.001    0.000    0.001    0.000 Sheet.py:93(get_cell_value)
      754    0.001    0.000    0.001    0.000 {method 'setdefault' of 'dict' objects}
       99    0.001    0.000    0.001    0.000 parser_frontends.py:96(_make_lexer_thread)
       99    0.001    0.000    0.515    0.005 parser_frontends.py:100(parse)
      301    0.001    0.000    0.002    0.000 lexer.py:202(__new__)
     3532    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
        1    0.000    0.000    0.001    0.001 earley_forest.py:283(visit)
      298    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
      301    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
       99    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
       99    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
       99    0.000    0.000    0.000    0.000 profiler.py:25(convert_to_excel_coordinates)
      499    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
       99    0.000    0.000    0.527    0.005 Workbook.py:35(run_func)
       99    0.000    0.000    0.516    0.005 lark.py:640(parse)
      793    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
       99    0.000    0.000    0.001    0.000 Sheet.py:104(set_cell_value)
      898    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
       99    0.000    0.000    0.001    0.000 Cell.py:46(__init__)
      101    0.000    0.000    0.000    0.000 re.py:289(_compile)
      301    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
       99    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
       99    0.000    0.000    0.000    0.000 Workbook.py:540(get_sheet_name_from_hidden)
       99    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
       98    0.000    0.000    0.000    0.000 xearley.py:125(<setcomp>)
      100    0.000    0.000    0.001    0.000 utils.py:131(check_valid_cell_location)
      198    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
      200    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
       98    0.000    0.000    0.000    0.000 CellError.py:11(__init__)
      100    0.000    0.000    0.001    0.000 re.py:188(match)
      490    0.000    0.000    0.000    0.000 xearley.py:126(<genexpr>)
      734    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
      392    0.000    0.000    0.000    0.000 xearley.py:124(<lambda>)
       99    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
       99    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
       98    0.000    0.000    0.000    0.000 {method 'rsplit' of 'str' objects}
       98    0.000    0.000    0.000    0.000 {built-in method builtins.max}
      298    0.000    0.000    0.000    0.000 Cell.py:125(get_value)
       99    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
       99    0.000    0.000    0.000    0.000 Workbook.py:714(clean_children_cells)
      198    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
      439    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
       99    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
       99    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
      396    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
      296    0.000    0.000    0.000    0.000 Cell.py:128(get_contents)
      301    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
      303    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
       45    0.000    0.000    0.000    0.000 earley_forest.py:437(_visit_node_out_helper)
       23    0.000    0.000    0.000    0.000 earley_forest.py:603(transform_packed_node)
       99    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      142    0.000    0.000    0.000    0.000 utils.py:357(__len__)
      380    0.000    0.000    0.000    0.000 {built-in method builtins.next}
       99    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
       98    0.000    0.000    0.000    0.000 {method 'expandtabs' of 'str' objects}
      114    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      499    0.000    0.000    0.000    0.000 {built-in method builtins.id}
       99    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
       99    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
      198    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       44    0.000    0.000    0.000    0.000 earley_forest.py:85(children)
       23    0.000    0.000    0.000    0.000 earley_forest.py:631(visit_packed_node_in)
       99    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
       99    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
       99    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
       17    0.000    0.000    0.000    0.000 earley_forest.py:581(transform_symbol_node)
       23    0.000    0.000    0.000    0.000 earley_forest.py:638(visit_packed_node_out)
       99    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
       22    0.000    0.000    0.000    0.000 earley_forest.py:422(visit_symbol_node_in)
       23    0.000    0.000    0.000    0.000 earley_forest.py:427(visit_packed_node_in)
       22    0.000    0.000    0.000    0.000 earley_forest.py:625(visit_symbol_node_in)
       17    0.000    0.000    0.000    0.000 earley_forest.py:565(_call_rule_func)
       46    0.000    0.000    0.000    0.000 earley_forest.py:145(sort_key)
       17    0.000    0.000    0.000    0.000 earley_forest.py:556(_collapse_ambig)
       22    0.000    0.000    0.000    0.000 earley_forest.py:499(__init__)
       23    0.000    0.000    0.000    0.000 earley_forest.py:155(children)
       23    0.000    0.000    0.000    0.000 earley_forest.py:450(visit_packed_node_out)
       67    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       22    0.000    0.000    0.000    0.000 earley_forest.py:70(load_paths)
       46    0.000    0.000    0.000    0.000 earley_forest.py:141(is_empty)
       16    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
        5    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
       17    0.000    0.000    0.000    0.000 earley_forest.py:444(visit_symbol_node_out)
       45    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
       14    0.000    0.000    0.000    0.000 parse_tree_builder.py:20(__call__)
      4/1    0.000    0.000    0.000    0.000 visitors.py:444(inner)
       23    0.000    0.000    0.000    0.000 earley_forest.py:158(<listcomp>)
        6    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
       17    0.000    0.000    0.000    0.000 earley_forest.py:571(_call_ambig_func)
       45    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
      4/1    0.000    0.000    0.000    0.000 visitors.py:421(_visit_tree)
        4    0.000    0.000    0.000    0.000 Parser.py:40(fix_formula)
        1    0.000    0.000    0.001    0.001 earley_forest.py:535(visit)
        2    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
        1    0.000    0.000    0.000    0.000 Parser.py:253(cell)
        1    0.000    0.000    0.000    0.000 Parser.py:211(mul_expr)
        1    0.000    0.000    0.000    0.000 earley_forest.py:523(__init__)
      4/1    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
        1    0.000    0.000    0.000    0.000 Workbook.py:687(_get_sheet_name_location)
        1    0.000    0.000    0.000    0.000 earley.py:284(<listcomp>)
        1    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        1    0.000    0.000    0.000    0.000 Workbook.py:806(get_cell_value)
       17    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
        1    0.000    0.000    0.000    0.000 re.py:203(sub)
      4/1    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
        5    0.000    0.000    0.000    0.000 earley_forest.py:447(visit_intermediate_node_out)
        1    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
        1    0.000    0.000    0.000    0.000 Parser.py:243(number)
        1    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
        1    0.000    0.000    0.001    0.001 earley_forest.py:397(transform)
        1    0.000    0.000    0.000    0.000 Workbook.py:700(add_children_cells)
        4    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
        4    0.000    0.000    0.000    0.000 tree.py:61(__init__)
        1    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
        1    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
        1    0.000    0.000    0.000    0.000 xearley.py:85(<listcomp>)
        1    0.000    0.000    0.000    0.000 visitors.py:415(visit)
        1    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        6    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
        1    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        1    0.000    0.000    0.000    0.000 xearley.py:88(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
        1    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        2    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 Parser.py:111(parens)
        1    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}



##################Running pro_cycle_formula_pyramid... #######################
for test <function pro_cycle_formula_pyramid at 0x000001311CEA30D0> total time: 3.667676400000001
Total Logs
         368252 function calls (365814 primitive calls) in 0.389 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.058    0.058    0.065    0.065 Graph.py:330(tarjans)
      400    0.053    0.000    0.214    0.001 earley.py:78(predict_and_complete)
    12865    0.028    0.000    0.043    0.000 earley_common.py:9(__init__)
35778/34144    0.017    0.000    0.021    0.000 {built-in method builtins.hash}
        1    0.016    0.016    0.057    0.057 earley_forest.py:283(visit)
     1828    0.016    0.000    0.038    0.000 earley_forest.py:50(__init__)
      399    0.014    0.000    0.043    0.000 xearley.py:41(scan)
    12158    0.014    0.000    0.025    0.000 grammar.py:18(__eq__)
    12186    0.012    0.000    0.018    0.000 utils.py:345(add)
     5058    0.011    0.000    0.013    0.000 typing.py:868(__new__)
     4855    0.010    0.000    0.010    0.000 {built-in method fromkeys}
      816    0.009    0.000    0.030    0.000 earley.py:135(<listcomp>)
    11930    0.008    0.000    0.010    0.000 lexer.py:265(__eq__)
    18951    0.008    0.000    0.013    0.000 grammar.py:25(__hash__)
     1830    0.007    0.000    0.015    0.000 earley_forest.py:64(add_family)
    34782    0.006    0.000    0.006    0.000 {built-in method builtins.isinstance}
    20101    0.006    0.000    0.006    0.000 {built-in method builtins.min}
     8674    0.005    0.000    0.005    0.000 earley_common.py:28(__eq__)
     3970    0.004    0.000    0.006    0.000 utils.py:342(__contains__)
     4855    0.004    0.000    0.014    0.000 utils.py:339(__init__)
     1830    0.004    0.000    0.006    0.000 earley_forest.py:131(__init__)
     1830    0.003    0.000    0.013    0.000 earley_common.py:25(advance)
     1430    0.003    0.000    0.014    0.000 earley_forest.py:437(_visit_node_out_helper)
    16778    0.003    0.000    0.003    0.000 earley_common.py:31(__hash__)
    12254    0.003    0.000    0.003    0.000 {built-in method builtins.next}
      715    0.003    0.000    0.006    0.000 earley_forest.py:603(transform_packed_node)
     2952    0.003    0.000    0.003    0.000 {method 'match' of 're.Pattern' objects}
    16929    0.003    0.000    0.003    0.000 {method 'append' of 'list' objects}
    15595    0.003    0.000    0.003    0.000 grammar.py:121(__hash__)
     2851    0.003    0.000    0.006    0.000 parser_frontends.py:184(match)
     1430    0.003    0.000    0.006    0.000 {built-in method builtins.sorted}
     4162    0.003    0.000    0.004    0.000 utils.py:348(__iter__)
    18279    0.003    0.000    0.003    0.000 {built-in method builtins.len}
        1    0.003    0.003    0.260    0.260 xearley.py:39(_parse)
    15933    0.002    0.000    0.002    0.000 {built-in method builtins.id}
     5362    0.002    0.000    0.002    0.000 {built-in method __new__ of type object at 0x00007FFB2480DCB0}
     2543    0.002    0.000    0.003    0.000 {method 'setdefault' of 'dict' objects}
     1430    0.002    0.000    0.010    0.000 earley_forest.py:85(children)
      715    0.002    0.000    0.005    0.000 earley_forest.py:631(visit_packed_node_in)
     5592    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
      715    0.001    0.000    0.010    0.000 earley_forest.py:638(visit_packed_node_out)
      715    0.001    0.000    0.008    0.000 earley_forest.py:422(visit_symbol_node_in)
      715    0.001    0.000    0.012    0.000 earley_forest.py:625(visit_symbol_node_in)
      715    0.001    0.000    0.001    0.000 earley_forest.py:158(<listcomp>)
      715    0.001    0.000    0.003    0.000 earley_forest.py:427(visit_packed_node_in)
      512    0.001    0.000    0.003    0.000 earley_forest.py:581(transform_symbol_node)
     1430    0.001    0.000    0.002    0.000 earley_forest.py:145(sort_key)
     5940    0.001    0.000    0.001    0.000 {method 'append' of 'collections.deque' objects}
     6244    0.001    0.000    0.001    0.000 {method 'pop' of 'collections.deque' objects}
     3675    0.001    0.000    0.001    0.000 {method 'add' of 'set' objects}
      304    0.001    0.000    0.001    0.000 lexer.py:213(_future_new)
      304    0.001    0.000    0.001    0.000 earley_forest.py:193(__init__)
      715    0.001    0.000    0.001    0.000 earley_forest.py:70(load_paths)
        1    0.001    0.001    0.002    0.002 Workbook.py:616(_set_cycle_detected)
      715    0.001    0.000    0.002    0.000 earley_forest.py:155(children)
      304    0.001    0.000    0.002    0.000 lexer.py:202(__new__)
      512    0.001    0.000    0.002    0.000 earley_forest.py:565(_call_rule_func)
      512    0.001    0.000    0.001    0.000 earley_forest.py:556(_collapse_ambig)
      715    0.001    0.000    0.001    0.000 earley_forest.py:499(__init__)
     1830    0.001    0.000    0.001    0.000 earley_forest.py:169(__hash__)
     1430    0.001    0.000    0.001    0.000 earley_forest.py:141(is_empty)
     1829    0.001    0.000    0.001    0.000 earley_forest.py:101(__hash__)
     1430    0.000    0.000    0.001    0.000 utils.py:357(__len__)
     2145    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
      715    0.000    0.000    0.009    0.000 earley_forest.py:450(visit_packed_node_out)
        1    0.000    0.000    0.318    0.318 parser_frontends.py:100(parse)
      203    0.000    0.000    0.001    0.000 earley_forest.py:591(transform_intermediate_node)
      102    0.000    0.000    0.000    0.000 Workbook.py:540(get_sheet_name_from_hidden)
     1730    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
      410    0.000    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
      512    0.000    0.000    0.005    0.000 earley_forest.py:444(visit_symbol_node_out)
     1430    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
      412    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
    202/1    0.000    0.000    0.003    0.003 visitors.py:430(<listcomp>)
      400    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
      100    0.000    0.000    0.001    0.000 Parser.py:253(cell)
      304    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
    202/1    0.000    0.000    0.003    0.003 visitors.py:444(inner)
      204    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
      512    0.000    0.000    0.000    0.000 earley_forest.py:571(_call_ambig_func)
      102    0.000    0.000    0.000    0.000 Cell.py:81(set_cell_value)
    202/1    0.000    0.000    0.003    0.003 visitors.py:421(_visit_tree)
      403    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
      204    0.000    0.000    0.000    0.000 Cell.py:125(get_value)
     1010    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
      200    0.000    0.000    0.000    0.000 Graph.py:137(get_parents_from_cell)
      100    0.000    0.000    0.000    0.000 Workbook.py:575(get_cell_from_location)
    202/1    0.000    0.000    0.003    0.003 visitors.py:429(visit_children)
      100    0.000    0.000    0.001    0.000 Workbook.py:806(get_cell_value)
      100    0.000    0.000    0.000    0.000 Workbook.py:687(_get_sheet_name_location)
      202    0.000    0.000    0.002    0.000 Parser.py:40(fix_formula)
      203    0.000    0.000    0.001    0.000 earley_forest.py:447(visit_intermediate_node_out)
       99    0.000    0.000    0.000    0.000 Parser.py:169(add_expr)
      104    0.000    0.000    0.000    0.000 Sheet.py:93(get_cell_value)
      512    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      202    0.000    0.000    0.000    0.000 tree.py:61(__init__)
      100    0.000    0.000    0.000    0.000 CellError.py:11(__init__)
      201    0.000    0.000    0.000    0.000 re.py:289(_compile)
      306    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
      202    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
        1    0.000    0.000    0.318    0.318 earley.py:262(parse)
        1    0.000    0.000    0.058    0.058 earley_forest.py:535(visit)
      304    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
        1    0.000    0.000    0.389    0.389 Workbook.py:35(run_func)
        1    0.000    0.000    0.000    0.000 Workbook.py:700(add_children_cells)
      100    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      208    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 re.py:203(sub)
        1    0.000    0.000    0.389    0.389 Workbook.py:638(recompute_cell_and_parents)
      101    0.000    0.000    0.000    0.000 re.py:188(match)
      102    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
      101    0.000    0.000    0.000    0.000 utils.py:131(check_valid_cell_location)
      100    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
      102    0.000    0.000    0.000    0.000 Cell.py:128(get_contents)
      204    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
        1    0.000    0.000    0.389    0.389 Workbook.py:727(set_cell_contents)
      105    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
      102    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      100    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      103    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.321    0.321 Workbook.py:544(get_formula_value)
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 utils.py:179(convert_location_to_idx)
        1    0.000    0.000    0.000    0.000 earley_forest.py:523(__init__)
        1    0.000    0.000    0.000    0.000 earley.py:284(<listcomp>)
        2    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
        1    0.000    0.000    0.000    0.000 Parser.py:211(mul_expr)
        1    0.000    0.000    0.000    0.000 Parser.py:243(number)
        1    0.000    0.000    0.000    0.000 Sheet.py:60(set_cell_contents)
        1    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
        1    0.000    0.000    0.318    0.318 lark.py:640(parse)
        1    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
        1    0.000    0.000    0.058    0.058 earley_forest.py:397(transform)
        1    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
        1    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
        1    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        2    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        2    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
        1    0.000    0.000    0.000    0.000 xearley.py:85(<listcomp>)
        1    0.000    0.000    0.000    0.000 Sheet.py:104(set_cell_value)
        1    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
        1    0.000    0.000    0.000    0.000 Workbook.py:714(clean_children_cells)
        1    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
        1    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        1    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
        1    0.000    0.000    0.003    0.003 visitors.py:415(visit)
        1    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
        1    0.000    0.000    0.000    0.000 xearley.py:88(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'normalize' of 'decimal.Decimal' objects}
        2    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        1    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
        1    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        1    0.000    0.000    0.000    0.000 Parser.py:111(parens)
        1    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
        1    0.000    0.000    0.000    0.000 Cell.py:135(get_children)



##################Running pro_cycle_break_unbreak... #######################
for test <function pro_cycle_break_unbreak at 0x000001311CEA31F0> total time: 154.4497128999999
Total Logs
         13339464 function calls (13335700 primitive calls) in 29.998 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      198   18.733    0.095   19.456    0.098 Graph.py:330(tarjans)
    99000    0.938    0.000    7.581    0.000 Workbook.py:582(recompute_cell_value)
   198396    0.621    0.000    1.056    0.000 Cell.py:81(set_cell_value)
    99198    0.534    0.000    5.363    0.000 Workbook.py:544(get_formula_value)
       99    0.502    0.005    1.477    0.015 Workbook.py:616(_set_cycle_detected)
    99000    0.457    0.000    1.892    0.000 Parser.py:253(cell)
   297792    0.401    0.000    0.634    0.000 Sheet.py:93(get_cell_value)
   396000    0.374    0.000    0.374    0.000 Graph.py:137(get_parents_from_cell)
   594693    0.351    0.000    0.469    0.000 utils.py:78(get_hidden_name)
   198000    0.299    0.000    0.638    0.000 Workbook.py:575(get_cell_from_location)
      198    0.276    0.001   29.910    0.151 Workbook.py:638(recompute_cell_and_parents)
  1289475    0.265    0.000    0.265    0.000 {method 'lower' of 'str' objects}
  1086921    0.260    0.000    0.260    0.000 {built-in method builtins.isinstance}
    99000    0.254    0.000    1.014    0.000 Workbook.py:806(get_cell_value)
   198297    0.241    0.000    0.440    0.000 Workbook.py:540(get_sheet_name_from_hidden)
    99198    0.238    0.000    0.238    0.000 Parser.py:97(__init__)
   108900    0.234    0.000    0.276    0.000 typing.py:868(__new__)
   199980    0.232    0.000    0.348    0.000 {built-in method builtins.getattr}
      990    0.222    0.000    0.749    0.001 earley.py:78(predict_and_complete)
    99198    0.197    0.000    3.050    0.000 visitors.py:421(_visit_tree)
    99198    0.188    0.000    1.015    0.000 Sheet.py:104(set_cell_value)
   198198    0.183    0.000    0.257    0.000 re.py:289(_compile)
   595584    0.182    0.000    0.182    0.000 {method 'get' of 'dict' objects}
    99198    0.171    0.000    2.505    0.000 visitors.py:444(inner)
    99198    0.160    0.000    0.253    0.000 utils.py:207(remove_exponent)
   971288    0.143    0.000    0.143    0.000 {method 'append' of 'list' objects}
   297099    0.131    0.000    0.131    0.000 {built-in method builtins.min}
    71082    0.130    0.000    0.195    0.000 earley_common.py:9(__init__)
   396792    0.128    0.000    0.128    0.000 Cell.py:125(get_value)
    99000    0.126    0.000    0.126    0.000 CellError.py:11(__init__)
    99198    0.125    0.000    2.103    0.000 Parser.py:40(fix_formula)
   103158    0.121    0.000    0.121    0.000 {method 'match' of 're.Pattern' objects}
    99198    0.119    0.000    0.232    0.000 visitors.py:429(visit_children)
   134442    0.117    0.000    0.147    0.000 lexer.py:265(__eq__)
    99000    0.112    0.000    0.351    0.000 re.py:203(sub)
   198396    0.109    0.000    0.194    0.000 Sheet.py:120(get_cell)
    99000    0.103    0.000    0.103    0.000 {method 'sub' of 're.Pattern' objects}
    99198    0.102    0.000    0.441    0.000 utils.py:131(check_valid_cell_location)
    99198    0.101    0.000    0.338    0.000 re.py:188(match)
   297396    0.092    0.000    0.092    0.000 Cell.py:128(get_contents)
    99198    0.089    0.000    0.112    0.000 visitors.py:430(<listcomp>)
   597564    0.089    0.000    0.089    0.000 {method 'pop' of 'list' objects}
    99198    0.088    0.000    3.138    0.000 visitors.py:415(visit)
   480843    0.083    0.000    0.083    0.000 {built-in method builtins.len}
    99198    0.073    0.000    0.097    0.000 utils.py:212(is_formula)
    99297    0.064    0.000    0.064    0.000 {built-in method _abc._abc_instancecheck}
    99198    0.064    0.000    0.083    0.000 utils.py:295(get_highest_precedence_error)
   198198    0.061    0.000    0.061    0.000 Cell.py:62(get_cached_formula)
168003/164241    0.060    0.000    0.078    0.000 {built-in method builtins.hash}
      198    0.056    0.000    0.196    0.001 earley_forest.py:283(visit)
    51084    0.051    0.000    0.081    0.000 utils.py:345(add)
    99198    0.051    0.000    0.051    0.000 {method 'quantize' of 'decimal.Decimal' objects}
    99297    0.050    0.000    0.114    0.000 abc.py:96(__instancecheck__)
    99198    0.045    0.000    0.045    0.000 Cell.py:131(set_children)
   198297    0.045    0.000    0.045    0.000 Sheet.py:54(get_sheet_name)
   109395    0.044    0.000    0.044    0.000 {built-in method __new__ of type object at 0x00007FFB2480DCB0}
    99198    0.042    0.000    0.042    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
   198990    0.040    0.000    0.040    0.000 {method 'strip' of 'str' objects}
    38511    0.040    0.000    0.075    0.000 grammar.py:18(__eq__)
      198    0.037    0.000   29.964    0.151 Workbook.py:727(set_cell_contents)
    89496    0.036    0.000    0.052    0.000 grammar.py:25(__hash__)
      198    0.035    0.000   29.998    0.152 Workbook.py:35(run_func)
    61182    0.033    0.000    0.033    0.000 earley_common.py:28(__eq__)
   108009    0.032    0.000    0.032    0.000 {method 'add' of 'set' objects}
    99198    0.028    0.000    0.028    0.000 Parser.py:108(get_cell_refs)
      792    0.028    0.000    0.077    0.000 xearley.py:41(scan)
    28413    0.026    0.000    0.045    0.000 utils.py:342(__contains__)
    99198    0.023    0.000    0.023    0.000 Cell.py:135(get_children)
     1782    0.020    0.000    0.075    0.000 earley.py:135(<listcomp>)
     3366    0.020    0.000    0.047    0.000 earley_forest.py:50(__init__)
    99198    0.016    0.000    0.016    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
    75339    0.015    0.000    0.015    0.000 grammar.py:121(__hash__)
    79101    0.015    0.000    0.015    0.000 earley_common.py:31(__hash__)
     3564    0.012    0.000    0.052    0.000 earley_forest.py:437(_visit_node_out_helper)
     1881    0.011    0.000    0.024    0.000 earley_forest.py:603(transform_packed_node)
    29304    0.010    0.000    0.010    0.000 {built-in method builtins.next}
     3366    0.010    0.000    0.019    0.000 {built-in method builtins.sorted}
     9504    0.008    0.000    0.009    0.000 {built-in method fromkeys}
     9504    0.008    0.000    0.017    0.000 utils.py:339(__init__)
    39204    0.008    0.000    0.008    0.000 {built-in method builtins.id}
      198    0.008    0.000    1.054    0.005 earley.py:262(parse)
     3564    0.007    0.000    0.022    0.000 earley_forest.py:64(add_family)
     3564    0.007    0.000    0.011    0.000 earley_forest.py:131(__init__)
      198    0.007    0.000    0.832    0.004 xearley.py:39(_parse)
     1881    0.005    0.000    0.015    0.000 earley_forest.py:631(visit_packed_node_in)
     3564    0.005    0.000    0.022    0.000 earley_common.py:25(advance)
     3366    0.005    0.000    0.027    0.000 earley_forest.py:85(children)
     1485    0.005    0.000    0.012    0.000 earley_forest.py:581(transform_symbol_node)
     9603    0.005    0.000    0.007    0.000 utils.py:348(__iter__)
     1881    0.005    0.000    0.040    0.000 earley_forest.py:638(visit_packed_node_out)
     1485    0.004    0.000    0.008    0.000 earley_forest.py:565(_call_rule_func)
     3960    0.004    0.000    0.009    0.000 parser_frontends.py:184(match)
     1683    0.004    0.000    0.022    0.000 earley_forest.py:422(visit_symbol_node_in)
     1881    0.004    0.000    0.009    0.000 earley_forest.py:427(visit_packed_node_in)
      198    0.004    0.000    1.061    0.005 parser_frontends.py:100(parse)
     5049    0.004    0.000    0.005    0.000 {method 'setdefault' of 'dict' objects}
     1683    0.004    0.000    0.036    0.000 earley_forest.py:625(visit_symbol_node_in)
     3762    0.003    0.000    0.005    0.000 earley_forest.py:145(sort_key)
    12969    0.003    0.000    0.003    0.000 {built-in method builtins.iter}
    16236    0.003    0.000    0.003    0.000 {method 'pop' of 'collections.deque' objects}
     1485    0.003    0.000    0.004    0.000 earley_forest.py:556(_collapse_ambig)
     1683    0.003    0.000    0.003    0.000 earley_forest.py:499(__init__)
      198    0.003    0.000    0.004    0.000 utils.py:179(convert_location_to_idx)
    15741    0.003    0.000    0.003    0.000 {method 'append' of 'collections.deque' objects}
      495    0.002    0.000    0.003    0.000 lexer.py:213(_future_new)
     1881    0.002    0.000    0.003    0.000 earley_forest.py:155(children)
      198    0.002    0.000    0.002    0.000 Parser.py:243(number)
     1881    0.002    0.000    0.034    0.000 earley_forest.py:450(visit_packed_node_out)
      198    0.002    0.000    0.002    0.000 parser_frontends.py:96(_make_lexer_thread)
     1683    0.002    0.000    0.003    0.000 earley_forest.py:70(load_paths)
     5247    0.002    0.000    0.002    0.000 {method 'remove' of 'set' objects}
      198    0.002    0.000    0.003    0.000 earley_forest.py:523(__init__)
      198    0.002    0.000    0.005    0.000 earley.py:284(<listcomp>)
     3762    0.001    0.000    0.001    0.000 earley_forest.py:141(is_empty)
      396    0.001    0.000    0.002    0.000 earley_forest.py:432(visit_token_node)
     3366    0.001    0.000    0.002    0.000 utils.py:357(__len__)
      594    0.001    0.000    0.001    0.000 {method 'join' of 'str' objects}
     1485    0.001    0.000    0.019    0.000 earley_forest.py:444(visit_symbol_node_out)
      198    0.001    0.000    0.002    0.000 Workbook.py:687(_get_sheet_name_location)
      198    0.001    0.000    0.008    0.000 Sheet.py:60(set_cell_contents)
      495    0.001    0.000    0.001    0.000 earley_forest.py:193(__init__)
      495    0.001    0.000    0.005    0.000 lexer.py:202(__new__)
      198    0.001    0.000    0.003    0.000 Workbook.py:714(clean_children_cells)
      198    0.001    0.000    1.062    0.005 lark.py:640(parse)
      198    0.001    0.000    0.197    0.001 earley_forest.py:535(visit)
     1881    0.001    0.000    0.001    0.000 earley_forest.py:158(<listcomp>)
     3564    0.001    0.000    0.001    0.000 earley_forest.py:169(__hash__)
     1287    0.001    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
     3564    0.001    0.000    0.001    0.000 earley_forest.py:548(_check_cycle)
      198    0.001    0.000    0.199    0.001 earley_forest.py:397(transform)
     1485    0.001    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
      198    0.001    0.000    0.001    0.000 earley_forest.py:390(__init__)
     3267    0.001    0.000    0.001    0.000 earley_forest.py:101(__hash__)
      198    0.001    0.000    0.001    0.000 Sheet.py:124(update_extent)
      198    0.001    0.000    0.001    0.000 earley_forest.py:591(transform_intermediate_node)
      198    0.001    0.000    0.001    0.000 parse_tree_builder.py:145(__call__)
      792    0.001    0.000    0.001    0.000 utils.py:354(__bool__)
      198    0.001    0.000    0.001    0.000 parser_frontends.py:86(_verify_start)
      198    0.001    0.000    0.001    0.000 Cell.py:65(set_contents)
       99    0.001    0.000    0.001    0.000 Graph.py:96(update_child)
      198    0.001    0.000    0.001    0.000 Cell.py:59(cache_formula)
     1485    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      198    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      495    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      198    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
       99    0.000    0.000    0.002    0.000 Workbook.py:700(add_children_cells)
      198    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      198    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
       99    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      198    0.000    0.000    0.000    0.000 tree.py:61(__init__)
      396    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      198    0.000    0.000    0.002    0.000 earley_forest.py:447(visit_intermediate_node_out)
      495    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
      198    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      495    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
       99    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
      396    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      198    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      198    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      2/1    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
      2/1    0.000    0.000    0.000    0.000 abc.py:100(__subclasscheck__)
        1    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_copy_massive_sheet... #######################
for test <function pro_copy_massive_sheet at 0x000001311CEA3310> total time: 30.870319500000008
Total Logs
         7600051 function calls (7500050 primitive calls) in 5.587 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  1900006    0.743    0.000    0.743    0.000 {method 'lower' of 'str' objects}
   100000    0.693    0.000    1.816    0.000 Cell.py:81(set_cell_value)
   100000    0.575    0.000    5.336    0.000 Workbook.py:727(set_cell_contents)
   100000    0.400    0.000    0.984    0.000 utils.py:307(error_matcher)
   100000    0.355    0.000    3.136    0.000 Sheet.py:60(set_cell_contents)
   100000    0.340    0.000    0.559    0.000 Workbook.py:638(recompute_cell_and_parents)
   100000    0.280    0.000    0.464    0.000 utils.py:179(convert_location_to_idx)
   200000    0.178    0.000    0.307    0.000 Sheet.py:93(get_cell_value)
   200000    0.143    0.000    0.143    0.000 {method 'join' of 'str' objects}
   100000    0.134    0.000    1.976    0.000 Cell.py:65(set_contents)
 100002/1    0.118    0.000    5.587    5.587 Workbook.py:35(run_func)
   100000    0.114    0.000    2.090    0.000 Cell.py:46(__init__)
   400000    0.112    0.000    0.112    0.000 {method 'get' of 'dict' objects}
   100000    0.111    0.000    0.143    0.000 Sheet.py:124(update_extent)
        1    0.107    0.107    5.587    5.587 Workbook.py:1038(copy_sheet)
   800000    0.094    0.000    0.094    0.000 {method 'strip' of 'str' objects}
   200004    0.091    0.000    0.122    0.000 utils.py:78(get_hidden_name)
   100001    0.090    0.000    0.169    0.000 Workbook.py:540(get_sheet_name_from_hidden)
   700002    0.084    0.000    0.084    0.000 {built-in method builtins.len}
   100000    0.082    0.000    0.269    0.000 re.py:188(match)
   200000    0.078    0.000    0.114    0.000 Sheet.py:120(get_cell)
   100000    0.077    0.000    0.077    0.000 {method 'match' of 're.Pattern' objects}
   100000    0.077    0.000    0.110    0.000 re.py:289(_compile)
   100000    0.074    0.000    0.342    0.000 utils.py:131(check_valid_cell_location)
   100000    0.065    0.000    0.120    0.000 Workbook.py:714(clean_children_cells)
   200000    0.063    0.000    0.063    0.000 {built-in method _heapq.heappush}
   100000    0.054    0.000    0.069    0.000 utils.py:212(is_formula)
   100000    0.054    0.000    0.054    0.000 Graph.py:330(tarjans)
   200000    0.047    0.000    0.047    0.000 {built-in method builtins.isinstance}
   100000    0.027    0.000    0.027    0.000 {method 'rstrip' of 'str' objects}
   100000    0.025    0.000    0.025    0.000 Cell.py:128(get_contents)
   100000    0.023    0.000    0.023    0.000 {method 'lstrip' of 'str' objects}
   200000    0.023    0.000    0.023    0.000 {built-in method builtins.ord}
   100000    0.021    0.000    0.021    0.000 Cell.py:125(get_value)
   100000    0.019    0.000    0.019    0.000 {method 'upper' of 'str' objects}
   100001    0.018    0.000    0.018    0.000 Sheet.py:54(get_sheet_name)
        1    0.000    0.000    0.000    0.000 Workbook.py:868(new_sheet)
        1    0.000    0.000    0.000    0.000 utils.py:96(check_new_name)
        1    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        2    0.000    0.000    0.000    0.000 Workbook.py:505(num_sheets)
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 Graph.py:128(get_sheet_parents)
        1    0.000    0.000    0.000    0.000 Graph.py:121(has_sheet)
        1    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
        1    0.000    0.000    0.000    0.000 Workbook.py:857(recompute_sheet_parents)
        1    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 Sheet.py:25(__init__)
        4    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
       10    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 Graph.py:124(add_sheet)
        1    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 Sheet.py:57(get_sheet_cells)
        1    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}



##################Running pro_pascals_triangle_speed... #######################
Total Logs
         2575114 function calls in 2.173 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     1275    0.212    0.000    0.274    0.000 Graph.py:330(tarjans)
    27448    0.203    0.000    1.746    0.000 Workbook.py:582(recompute_cell_value)
    26524    0.123    0.000    1.016    0.000 Workbook.py:544(get_formula_value)
    26524    0.110    0.000    0.438    0.000 Parser.py:253(cell)
    27799    0.106    0.000    0.199    0.000 Cell.py:81(set_cell_value)
    82122    0.099    0.000    0.157    0.000 Sheet.py:93(get_cell_value)
    26524    0.058    0.000    0.234    0.000 Workbook.py:806(get_cell_value)
   111644    0.057    0.000    0.078    0.000 utils.py:78(get_hidden_name)
     1275    0.055    0.000    2.085    0.002 Workbook.py:638(recompute_cell_and_parents)
   294913    0.054    0.000    0.054    0.000 {method 'lower' of 'str' objects}
    26524    0.053    0.000    0.053    0.000 Parser.py:97(__init__)
    53048    0.050    0.000    0.078    0.000 {built-in method builtins.getattr}
   241266    0.050    0.000    0.050    0.000 {built-in method builtins.isinstance}
    26524    0.047    0.000    0.056    0.000 typing.py:868(__new__)
    26524    0.047    0.000    0.732    0.000 visitors.py:421(_visit_tree)
    26524    0.044    0.000    0.234    0.000 Sheet.py:104(set_cell_value)
    54323    0.042    0.000    0.059    0.000 re.py:289(_compile)
    26524    0.039    0.000    0.606    0.000 visitors.py:444(inner)
    27799    0.038    0.000    0.058    0.000 utils.py:207(remove_exponent)
   138644    0.038    0.000    0.038    0.000 {method 'get' of 'dict' objects}
    27448    0.035    0.000    0.078    0.000 Workbook.py:575(get_cell_from_location)
    54896    0.032    0.000    0.032    0.000 Graph.py:137(get_parents_from_cell)
    26524    0.032    0.000    0.041    0.000 visitors.py:430(<listcomp>)
    27724    0.032    0.000    0.057    0.000 Workbook.py:540(get_sheet_name_from_hidden)
    26524    0.030    0.000    0.497    0.000 Parser.py:40(fix_formula)
    26524    0.029    0.000    0.070    0.000 visitors.py:429(visit_children)
    26524    0.027    0.000    0.078    0.000 re.py:203(sub)
    27799    0.026    0.000    0.079    0.000 re.py:188(match)
    27799    0.025    0.000    0.105    0.000 utils.py:131(check_valid_cell_location)
    27799    0.024    0.000    0.024    0.000 {method 'match' of 're.Pattern' objects}
    26524    0.022    0.000    0.028    0.000 lexer.py:265(__eq__)
    26524    0.021    0.000    0.021    0.000 {method 'sub' of 're.Pattern' objects}
    26524    0.021    0.000    0.029    0.000 utils.py:295(get_highest_precedence_error)
    82122    0.021    0.000    0.021    0.000 Cell.py:125(get_value)
    26524    0.021    0.000    0.752    0.000 visitors.py:415(visit)
    28723    0.019    0.000    0.025    0.000 utils.py:212(is_formula)
   115945    0.018    0.000    0.018    0.000 {built-in method builtins.len}
   137240    0.017    0.000    0.017    0.000 {method 'append' of 'list' objects}
    29998    0.017    0.000    0.029    0.000 Sheet.py:120(get_cell)
    53972    0.016    0.000    0.016    0.000 Cell.py:128(get_contents)
    53048    0.015    0.000    0.015    0.000 Cell.py:62(get_cached_formula)
    82344    0.013    0.000    0.013    0.000 {method 'pop' of 'list' objects}
     1275    0.012    0.000    2.168    0.002 Workbook.py:727(set_cell_contents)
    27799    0.011    0.000    0.011    0.000 {method 'quantize' of 'decimal.Decimal' objects}
    26524    0.010    0.000    0.010    0.000 Cell.py:131(set_children)
    27799    0.009    0.000    0.009    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
    26524    0.009    0.000    0.009    0.000 {built-in method __new__ of type object at 0x00007FFB2480DCB0}
    37999    0.007    0.000    0.007    0.000 {method 'strip' of 'str' objects}
    26524    0.007    0.000    0.007    0.000 {method 'add' of 'set' objects}
    26524    0.007    0.000    0.007    0.000 Parser.py:108(get_cell_refs)
     1275    0.007    0.000    0.010    0.000 utils.py:179(convert_location_to_idx)
    27799    0.006    0.000    0.006    0.000 Cell.py:135(get_children)
     1275    0.006    0.000    0.009    0.000 utils.py:307(error_matcher)
    27724    0.006    0.000    0.006    0.000 Sheet.py:54(get_sheet_name)
     1275    0.005    0.000    0.040    0.000 Sheet.py:60(set_cell_contents)
     1275    0.004    0.000    0.016    0.000 Workbook.py:714(clean_children_cells)
     1275    0.004    0.000    2.173    0.002 Workbook.py:35(run_func)
    27799    0.004    0.000    0.004    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
     1225    0.004    0.000    0.006    0.000 Workbook.py:687(_get_sheet_name_location)
     3775    0.003    0.000    0.003    0.000 {method 'join' of 'str' objects}
     1275    0.003    0.000    0.022    0.000 Cell.py:65(set_contents)
     1225    0.003    0.000    0.004    0.000 Graph.py:96(update_child)
     1275    0.002    0.000    0.003    0.000 Sheet.py:124(update_extent)
     1225    0.001    0.000    0.001    0.000 {method 'split' of 'str' objects}
     1225    0.001    0.000    0.001    0.000 {method 'remove' of 'list' objects}
     4725    0.001    0.000    0.001    0.000 {built-in method builtins.ord}
     1575    0.001    0.000    0.001    0.000 {built-in method builtins.chr}
     1575    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
     1275    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
     1275    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



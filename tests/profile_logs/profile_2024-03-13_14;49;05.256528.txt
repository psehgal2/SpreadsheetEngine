beginning of profiler log written on 2024-03-13 14:49:25.869734 ran on the computer of deep copy but with custom set cell contents which uses prior cache

##################Running pro_load_workbook... #######################
for test <function pro_load_workbook at 0x7fbace661120> total time: 8.776110278000004
Total Logs
         2204902 function calls (2193702 primitive calls) in 0.768 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     2100    0.129    0.000    0.480    0.000 earley.py:78(predict_and_complete)
   103200    0.073    0.000    0.119    0.000 earley_common.py:9(__init__)
      200    0.050    0.000    0.174    0.001 earley_forest.py:283(visit)
267800/259000    0.044    0.000    0.057    0.000 {built-in method builtins.hash}
    89700    0.035    0.000    0.053    0.000 utils.py:345(add)
    76800    0.034    0.000    0.066    0.000 grammar.py:18(__eq__)
   146700    0.029    0.000    0.040    0.000 grammar.py:25(__hash__)
     1900    0.024    0.000    0.072    0.000 xearley.py:41(scan)
    72500    0.022    0.000    0.028    0.000 lexer.py:265(__eq__)
   201100    0.017    0.000    0.017    0.000 {built-in method builtins.isinstance}
    38400    0.016    0.000    0.025    0.000 utils.py:342(__contains__)
    81700    0.015    0.000    0.015    0.000 earley_common.py:28(__eq__)
     4600    0.014    0.000    0.064    0.000 earley.py:135(<listcomp>)
     7200    0.013    0.000    0.014    0.000 earley_forest.py:145(sort_key)
     8200    0.013    0.000    0.027    0.000 earley_forest.py:50(__init__)
   137100    0.013    0.000    0.013    0.000 earley_common.py:31(__hash__)
   113200    0.011    0.000    0.011    0.000 grammar.py:121(__hash__)
     7200    0.011    0.000    0.044    0.000 earley_forest.py:437(_visit_node_out_helper)
   132500    0.010    0.000    0.010    0.000 {built-in method builtins.len}
     3600    0.010    0.000    0.018    0.000 earley_forest.py:603(transform_packed_node)
   121800    0.009    0.000    0.009    0.000 {method 'append' of 'list' objects}
    22500    0.008    0.000    0.010    0.000 {built-in method fromkeys}
    61200    0.008    0.000    0.008    0.000 {built-in method builtins.next}
    22500    0.007    0.000    0.017    0.000 utils.py:339(__init__)
     8400    0.007    0.000    0.021    0.000 earley_forest.py:64(add_family)
     7200    0.007    0.000    0.026    0.000 {built-in method builtins.sorted}
    80000    0.007    0.000    0.007    0.000 {built-in method builtins.id}
    19300    0.006    0.000    0.010    0.000 parser_frontends.py:184(match)
    22700    0.006    0.000    0.008    0.000 utils.py:348(__iter__)
     8400    0.005    0.000    0.010    0.000 earley_forest.py:131(__init__)
    20100    0.005    0.000    0.005    0.000 {method 'match' of 're.Pattern' objects}
     8400    0.004    0.000    0.021    0.000 earley_common.py:25(advance)
     2800    0.004    0.000    0.011    0.000 earley_forest.py:581(transform_symbol_node)
      200    0.004    0.000    0.557    0.003 xearley.py:39(_parse)
     7200    0.004    0.000    0.033    0.000 earley_forest.py:85(children)
     3600    0.004    0.000    0.011    0.000 earley_forest.py:631(visit_packed_node_in)
    11800    0.004    0.000    0.005    0.000 {method 'setdefault' of 'dict' objects}
     3600    0.004    0.000    0.028    0.000 earley_forest.py:422(visit_symbol_node_in)
     3600    0.003    0.000    0.007    0.000 earley_forest.py:427(visit_packed_node_in)
     3600    0.003    0.000    0.030    0.000 earley_forest.py:638(visit_packed_node_out)
    29900    0.003    0.000    0.003    0.000 {built-in method builtins.iter}
     3600    0.003    0.000    0.040    0.000 earley_forest.py:625(visit_symbol_node_in)
    33300    0.002    0.000    0.002    0.000 {method 'pop' of 'collections.deque' objects}
    18300    0.002    0.000    0.002    0.000 {method 'add' of 'set' objects}
     2800    0.002    0.000    0.004    0.000 earley_forest.py:556(_collapse_ambig)
     2800    0.002    0.000    0.004    0.000 earley_forest.py:565(_call_rule_func)
    31700    0.002    0.000    0.002    0.000 {method 'append' of 'collections.deque' objects}
     3600    0.002    0.000    0.003    0.000 earley_forest.py:155(children)
      300    0.002    0.000    0.756    0.003 Workbook.py:639(recompute_cell_and_parents)
      200    0.002    0.000    0.737    0.004 earley.py:262(parse)
     7200    0.002    0.000    0.002    0.000 utils.py:357(__len__)
    10800    0.002    0.000    0.002    0.000 {method 'remove' of 'set' objects}
     3600    0.002    0.000    0.002    0.000 earley_forest.py:499(__init__)
     3600    0.002    0.000    0.003    0.000 earley_forest.py:70(load_paths)
     3600    0.001    0.000    0.026    0.000 earley_forest.py:450(visit_packed_node_out)
      300    0.001    0.000    0.763    0.003 Workbook.py:728(set_cell_contents)
     7200    0.001    0.000    0.001    0.000 earley_forest.py:141(is_empty)
      200    0.001    0.000    0.739    0.004 parser_frontends.py:100(parse)
     3200    0.001    0.000    0.001    0.000 {built-in method builtins.getattr}
     2800    0.001    0.000    0.017    0.000 earley_forest.py:444(visit_symbol_node_out)
     8300    0.001    0.000    0.001    0.000 earley_forest.py:101(__hash__)
     1300    0.001    0.000    0.002    0.000 Sheet.py:93(get_cell_value)
      800    0.001    0.000    0.001    0.000 earley_forest.py:591(transform_intermediate_node)
     1300    0.001    0.000    0.001    0.000 lexer.py:213(_future_new)
     7200    0.001    0.000    0.001    0.000 earley_forest.py:548(_check_cycle)
     8400    0.001    0.000    0.001    0.000 earley_forest.py:169(__hash__)
      600    0.001    0.000    0.004    0.000 xearley.py:88(<listcomp>)
     3600    0.001    0.000    0.001    0.000 earley_forest.py:158(<listcomp>)
     2800    0.001    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
     2300    0.001    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
     1300    0.001    0.000    0.002    0.000 lexer.py:202(__new__)
      300    0.001    0.000    0.004    0.000 Sheet.py:60(set_cell_contents)
     7200    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
     1000    0.001    0.000    0.001    0.000 earley_forest.py:432(visit_token_node)
      100    0.001    0.000    0.768    0.008 Workbook.py:75(load_workbook)
      200    0.001    0.000    0.750    0.004 Workbook.py:545(get_formula_value)
      300    0.001    0.000    0.004    0.000 Parser.py:253(cell)
      500    0.001    0.000    0.002    0.000 Cell.py:81(set_cell_value)
  800/200    0.001    0.000    0.009    0.000 visitors.py:421(_visit_tree)
      300    0.001    0.000    0.001    0.000 utils.py:179(convert_location_to_idx)
     1300    0.001    0.000    0.001    0.000 earley_forest.py:193(__init__)
  800/200    0.001    0.000    0.008    0.000 visitors.py:430(<listcomp>)
  800/200    0.001    0.000    0.009    0.000 visitors.py:444(inner)
      800    0.001    0.000    0.006    0.000 Parser.py:40(fix_formula)
     5500    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
      900    0.001    0.000    0.001    0.000 __init__.py:272(_compile)
      100    0.001    0.000    0.001    0.000 {method 'read' of '_io.TextIOWrapper' objects}
     2200    0.001    0.000    0.001    0.000 utils.py:354(__bool__)
      600    0.001    0.000    0.001    0.000 xearley.py:85(<listcomp>)
      300    0.000    0.000    0.001    0.000 Workbook.py:688(_get_sheet_name_location)
      400    0.000    0.000    0.765    0.002 Workbook.py:36(run_func)
      200    0.000    0.000    0.174    0.001 earley_forest.py:535(visit)
  800/200    0.000    0.000    0.008    0.000 visitors.py:429(visit_children)
      300    0.000    0.000    0.002    0.000 Workbook.py:912(get_cell_value)
      200    0.000    0.000    0.002    0.000 earley.py:284(<listcomp>)
     1300    0.000    0.000    0.001    0.000 utils.py:78(get_hidden_name)
      800    0.000    0.000    0.001    0.000 utils.py:295(get_highest_precedence_error)
      600    0.000    0.000    0.001    0.000 __init__.py:163(match)
      200    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
      800    0.000    0.000    0.003    0.000 earley_forest.py:447(visit_intermediate_node_out)
      100    0.000    0.000    0.001    0.000 Workbook.py:974(new_sheet)
     2800    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
     1300    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
      100    0.000    0.000    0.000    0.000 {method 'seek' of '_io.TextIOWrapper' objects}
      200    0.000    0.000    0.002    0.000 Workbook.py:701(add_children_cells)
      200    0.000    0.000    0.001    0.000 earley_forest.py:523(__init__)
     2300    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      600    0.000    0.000    0.002    0.000 utils.py:131(check_valid_cell_location)
      300    0.000    0.000    0.001    0.000 Cell.py:65(set_contents)
      100    0.000    0.000    0.000    0.000 decoder.py:343(raw_decode)
      200    0.000    0.000    0.175    0.001 earley_forest.py:397(transform)
      300    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      100    0.000    0.000    0.000    0.000 utils.py:307(error_matcher)
      300    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
      300    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
     2700    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
      200    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
      900    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
      300    0.000    0.000    0.001    0.000 __init__.py:178(sub)
      200    0.000    0.000    0.000    0.000 Parser.py:169(add_expr)
      300    0.000    0.000    0.000    0.000 Workbook.py:541(get_sheet_name_from_hidden)
     1300    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      100    0.000    0.000    0.000    0.000 Parser.py:211(mul_expr)
      200    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
      800    0.000    0.000    0.000    0.000 tree.py:61(__init__)
      200    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
      200    0.000    0.000    0.001    0.000 Sheet.py:104(set_cell_value)
      100    0.000    0.000    0.001    0.000 decoder.py:332(decode)
      600    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
      300    0.000    0.000    0.002    0.000 Cell.py:46(__init__)
      100    0.000    0.000    0.000    0.000 utils.py:96(check_new_name)
     1300    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
     1200    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
      100    0.000    0.000    0.000    0.000 Workbook.py:57(__init__)
      200    0.000    0.000    0.000    0.000 Parser.py:243(number)
      300    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
      100    0.000    0.000    0.001    0.000 __init__.py:299(loads)
      200    0.000    0.000    0.739    0.004 lark.py:640(parse)
      300    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
     1000    0.000    0.000    0.000    0.000 Cell.py:123(get_value)
      300    0.000    0.000    0.000    0.000 Workbook.py:715(clean_children_cells)
      200    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
      300    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
     1200    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
      200    0.000    0.000    0.010    0.000 visitors.py:415(visit)
      300    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
     1000    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      100    0.000    0.000    0.000    0.000 <frozen codecs>:319(decode)
      600    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
      300    0.000    0.000    0.000    0.000 <frozen abc>:117(__instancecheck__)
      300    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
      200    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      300    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
      300    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      100    0.000    0.000    0.000    0.000 <frozen codecs>:327(reset)
      100    0.000    0.000    0.000    0.000 Workbook.py:506(num_sheets)
      100    0.000    0.000    0.000    0.000 Graph.py:128(get_sheet_parents)
      200    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
      600    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
      600    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      100    0.000    0.000    0.000    0.000 Workbook.py:963(recompute_sheet_parents)
      100    0.000    0.000    0.000    0.000 Graph.py:121(has_sheet)
      200    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
      400    0.000    0.000    0.000    0.000 Cell.py:126(get_contents)
      300    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      100    0.000    0.000    0.000    0.000 Sheet.py:25(__init__)
      100    0.000    0.000    0.000    0.000 {built-in method _codecs.utf_8_decode}
      200    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      100    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
      300    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      300    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      300    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
      200    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
      300    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      200    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
      200    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
      200    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
      100    0.000    0.000    0.000    0.000 Graph.py:124(add_sheet)
      100    0.000    0.000    0.000    0.000 Graph.py:15(__init__)
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
      100    0.000    0.000    0.000    0.000 <frozen codecs>:276(reset)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_copy_sheet... #######################
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1'), ('sheet1_83', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1'), ('sheet1_83', 'b1'), ('sheet1_84', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1'), ('sheet1_83', 'b1'), ('sheet1_84', 'b1'), ('sheet1_85', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1'), ('sheet1_83', 'b1'), ('sheet1_84', 'b1'), ('sheet1_85', 'b1'), ('sheet1_86', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1'), ('sheet1_83', 'b1'), ('sheet1_84', 'b1'), ('sheet1_85', 'b1'), ('sheet1_86', 'b1'), ('sheet1_87', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1'), ('sheet1_83', 'b1'), ('sheet1_84', 'b1'), ('sheet1_85', 'b1'), ('sheet1_86', 'b1'), ('sheet1_87', 'b1'), ('sheet1_88', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1'), ('sheet1_83', 'b1'), ('sheet1_84', 'b1'), ('sheet1_85', 'b1'), ('sheet1_86', 'b1'), ('sheet1_87', 'b1'), ('sheet1_88', 'b1'), ('sheet1_89', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1'), ('sheet1_83', 'b1'), ('sheet1_84', 'b1'), ('sheet1_85', 'b1'), ('sheet1_86', 'b1'), ('sheet1_87', 'b1'), ('sheet1_88', 'b1'), ('sheet1_89', 'b1'), ('sheet1_90', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1'), ('sheet1_83', 'b1'), ('sheet1_84', 'b1'), ('sheet1_85', 'b1'), ('sheet1_86', 'b1'), ('sheet1_87', 'b1'), ('sheet1_88', 'b1'), ('sheet1_89', 'b1'), ('sheet1_90', 'b1'), ('sheet1_91', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1'), ('sheet1_83', 'b1'), ('sheet1_84', 'b1'), ('sheet1_85', 'b1'), ('sheet1_86', 'b1'), ('sheet1_87', 'b1'), ('sheet1_88', 'b1'), ('sheet1_89', 'b1'), ('sheet1_90', 'b1'), ('sheet1_91', 'b1'), ('sheet1_92', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1'), ('sheet1_83', 'b1'), ('sheet1_84', 'b1'), ('sheet1_85', 'b1'), ('sheet1_86', 'b1'), ('sheet1_87', 'b1'), ('sheet1_88', 'b1'), ('sheet1_89', 'b1'), ('sheet1_90', 'b1'), ('sheet1_91', 'b1'), ('sheet1_92', 'b1'), ('sheet1_93', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1'), ('sheet1_83', 'b1'), ('sheet1_84', 'b1'), ('sheet1_85', 'b1'), ('sheet1_86', 'b1'), ('sheet1_87', 'b1'), ('sheet1_88', 'b1'), ('sheet1_89', 'b1'), ('sheet1_90', 'b1'), ('sheet1_91', 'b1'), ('sheet1_92', 'b1'), ('sheet1_93', 'b1'), ('sheet1_94', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1'), ('sheet1_83', 'b1'), ('sheet1_84', 'b1'), ('sheet1_85', 'b1'), ('sheet1_86', 'b1'), ('sheet1_87', 'b1'), ('sheet1_88', 'b1'), ('sheet1_89', 'b1'), ('sheet1_90', 'b1'), ('sheet1_91', 'b1'), ('sheet1_92', 'b1'), ('sheet1_93', 'b1'), ('sheet1_94', 'b1'), ('sheet1_95', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1'), ('sheet1_83', 'b1'), ('sheet1_84', 'b1'), ('sheet1_85', 'b1'), ('sheet1_86', 'b1'), ('sheet1_87', 'b1'), ('sheet1_88', 'b1'), ('sheet1_89', 'b1'), ('sheet1_90', 'b1'), ('sheet1_91', 'b1'), ('sheet1_92', 'b1'), ('sheet1_93', 'b1'), ('sheet1_94', 'b1'), ('sheet1_95', 'b1'), ('sheet1_96', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1'), ('sheet1_83', 'b1'), ('sheet1_84', 'b1'), ('sheet1_85', 'b1'), ('sheet1_86', 'b1'), ('sheet1_87', 'b1'), ('sheet1_88', 'b1'), ('sheet1_89', 'b1'), ('sheet1_90', 'b1'), ('sheet1_91', 'b1'), ('sheet1_92', 'b1'), ('sheet1_93', 'b1'), ('sheet1_94', 'b1'), ('sheet1_95', 'b1'), ('sheet1_96', 'b1'), ('sheet1_97', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1'), ('sheet1_83', 'b1'), ('sheet1_84', 'b1'), ('sheet1_85', 'b1'), ('sheet1_86', 'b1'), ('sheet1_87', 'b1'), ('sheet1_88', 'b1'), ('sheet1_89', 'b1'), ('sheet1_90', 'b1'), ('sheet1_91', 'b1'), ('sheet1_92', 'b1'), ('sheet1_93', 'b1'), ('sheet1_94', 'b1'), ('sheet1_95', 'b1'), ('sheet1_96', 'b1'), ('sheet1_97', 'b1'), ('sheet1_98', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1'), ('sheet1_83', 'b1'), ('sheet1_84', 'b1'), ('sheet1_85', 'b1'), ('sheet1_86', 'b1'), ('sheet1_87', 'b1'), ('sheet1_88', 'b1'), ('sheet1_89', 'b1'), ('sheet1_90', 'b1'), ('sheet1_91', 'b1'), ('sheet1_92', 'b1'), ('sheet1_93', 'b1'), ('sheet1_94', 'b1'), ('sheet1_95', 'b1'), ('sheet1_96', 'b1'), ('sheet1_97', 'b1'), ('sheet1_98', 'b1'), ('sheet1_99', 'b1')]}}
new_parents after computing {'sheet1': {'a1': [('sheet1', 'b1'), ('sheet1_1', 'b1'), ('sheet1_2', 'b1'), ('sheet1_3', 'b1'), ('sheet1_4', 'b1'), ('sheet1_5', 'b1'), ('sheet1_6', 'b1'), ('sheet1_7', 'b1'), ('sheet1_8', 'b1'), ('sheet1_9', 'b1'), ('sheet1_10', 'b1'), ('sheet1_11', 'b1'), ('sheet1_12', 'b1'), ('sheet1_13', 'b1'), ('sheet1_14', 'b1'), ('sheet1_15', 'b1'), ('sheet1_16', 'b1'), ('sheet1_17', 'b1'), ('sheet1_18', 'b1'), ('sheet1_19', 'b1'), ('sheet1_20', 'b1'), ('sheet1_21', 'b1'), ('sheet1_22', 'b1'), ('sheet1_23', 'b1'), ('sheet1_24', 'b1'), ('sheet1_25', 'b1'), ('sheet1_26', 'b1'), ('sheet1_27', 'b1'), ('sheet1_28', 'b1'), ('sheet1_29', 'b1'), ('sheet1_30', 'b1'), ('sheet1_31', 'b1'), ('sheet1_32', 'b1'), ('sheet1_33', 'b1'), ('sheet1_34', 'b1'), ('sheet1_35', 'b1'), ('sheet1_36', 'b1'), ('sheet1_37', 'b1'), ('sheet1_38', 'b1'), ('sheet1_39', 'b1'), ('sheet1_40', 'b1'), ('sheet1_41', 'b1'), ('sheet1_42', 'b1'), ('sheet1_43', 'b1'), ('sheet1_44', 'b1'), ('sheet1_45', 'b1'), ('sheet1_46', 'b1'), ('sheet1_47', 'b1'), ('sheet1_48', 'b1'), ('sheet1_49', 'b1'), ('sheet1_50', 'b1'), ('sheet1_51', 'b1'), ('sheet1_52', 'b1'), ('sheet1_53', 'b1'), ('sheet1_54', 'b1'), ('sheet1_55', 'b1'), ('sheet1_56', 'b1'), ('sheet1_57', 'b1'), ('sheet1_58', 'b1'), ('sheet1_59', 'b1'), ('sheet1_60', 'b1'), ('sheet1_61', 'b1'), ('sheet1_62', 'b1'), ('sheet1_63', 'b1'), ('sheet1_64', 'b1'), ('sheet1_65', 'b1'), ('sheet1_66', 'b1'), ('sheet1_67', 'b1'), ('sheet1_68', 'b1'), ('sheet1_69', 'b1'), ('sheet1_70', 'b1'), ('sheet1_71', 'b1'), ('sheet1_72', 'b1'), ('sheet1_73', 'b1'), ('sheet1_74', 'b1'), ('sheet1_75', 'b1'), ('sheet1_76', 'b1'), ('sheet1_77', 'b1'), ('sheet1_78', 'b1'), ('sheet1_79', 'b1'), ('sheet1_80', 'b1'), ('sheet1_81', 'b1'), ('sheet1_82', 'b1'), ('sheet1_83', 'b1'), ('sheet1_84', 'b1'), ('sheet1_85', 'b1'), ('sheet1_86', 'b1'), ('sheet1_87', 'b1'), ('sheet1_88', 'b1'), ('sheet1_89', 'b1'), ('sheet1_90', 'b1'), ('sheet1_91', 'b1'), ('sheet1_92', 'b1'), ('sheet1_93', 'b1'), ('sheet1_94', 'b1'), ('sheet1_95', 'b1'), ('sheet1_96', 'b1'), ('sheet1_97', 'b1'), ('sheet1_98', 'b1'), ('sheet1_99', 'b1'), ('sheet1_100', 'b1')]}}
for test <function pro_copy_sheet at 0x7fbace661260> total time: 4.10130256
Total Logs
         1022008 function calls (1010608 primitive calls) in 0.384 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      800    0.061    0.000    0.225    0.000 earley.py:78(predict_and_complete)
    47800    0.035    0.000    0.057    0.000 earley_common.py:9(__init__)
      100    0.022    0.000    0.073    0.001 earley_forest.py:283(visit)
120300/116800    0.021    0.000    0.027    0.000 {built-in method builtins.hash}
    39400    0.016    0.000    0.025    0.000 utils.py:345(add)
    32300    0.015    0.000    0.029    0.000 grammar.py:18(__eq__)
    65500    0.013    0.000    0.018    0.000 grammar.py:25(__hash__)
      100    0.011    0.000    0.384    0.004 Workbook.py:1144(copy_sheet)
      700    0.010    0.000    0.031    0.000 xearley.py:41(scan)
    30300    0.010    0.000    0.012    0.000 lexer.py:265(__eq__)
    18100    0.008    0.000    0.013    0.000 utils.py:342(__contains__)
    84100    0.008    0.000    0.008    0.000 {built-in method builtins.isinstance}
 5700/100    0.008    0.000    0.018    0.000 copy.py:128(deepcopy)
    39000    0.007    0.000    0.007    0.000 earley_common.py:28(__eq__)
     3200    0.007    0.000    0.014    0.000 earley_forest.py:50(__init__)
     1800    0.006    0.000    0.028    0.000 earley.py:135(<listcomp>)
    60600    0.006    0.000    0.006    0.000 earley_common.py:31(__hash__)
    51700    0.005    0.000    0.005    0.000 grammar.py:121(__hash__)
    60400    0.005    0.000    0.005    0.000 {built-in method builtins.len}
     3000    0.005    0.000    0.019    0.000 earley_forest.py:437(_visit_node_out_helper)
    58600    0.005    0.000    0.005    0.000 {method 'append' of 'list' objects}
     1500    0.004    0.000    0.008    0.000 earley_forest.py:603(transform_packed_node)
     8700    0.004    0.000    0.005    0.000 {built-in method fromkeys}
    42800    0.004    0.000    0.004    0.000 {built-in method builtins.id}
    25400    0.003    0.000    0.003    0.000 {built-in method builtins.next}
     8700    0.003    0.000    0.008    0.000 utils.py:339(__init__)
     3000    0.003    0.000    0.007    0.000 {built-in method builtins.sorted}
     3300    0.003    0.000    0.009    0.000 earley_forest.py:64(add_family)
     9000    0.002    0.000    0.003    0.000 utils.py:348(__iter__)
     7100    0.002    0.000    0.004    0.000 parser_frontends.py:184(match)
     3300    0.002    0.000    0.004    0.000 earley_forest.py:131(__init__)
      100    0.002    0.000    0.002    0.000 {built-in method builtins.print}
     3300    0.002    0.000    0.009    0.000 earley_common.py:25(advance)
     1200    0.002    0.000    0.005    0.000 earley_forest.py:581(transform_symbol_node)
     7400    0.002    0.000    0.002    0.000 {method 'match' of 're.Pattern' objects}
     3000    0.002    0.000    0.010    0.000 earley_forest.py:85(children)
      100    0.002    0.000    0.258    0.003 xearley.py:39(_parse)
     1500    0.002    0.000    0.005    0.000 earley_forest.py:631(visit_packed_node_in)
     1500    0.002    0.000    0.008    0.000 earley_forest.py:422(visit_symbol_node_in)
     4700    0.002    0.000    0.002    0.000 {method 'setdefault' of 'dict' objects}
     1500    0.001    0.000    0.003    0.000 earley_forest.py:427(visit_packed_node_in)
     1500    0.001    0.000    0.013    0.000 earley_forest.py:638(visit_packed_node_out)
  500/100    0.001    0.000    0.016    0.000 copy.py:227(_deepcopy_dict)
      200    0.001    0.000    0.343    0.002 Workbook.py:815(recompute_cell_and_parents_copy_sheet)
    13100    0.001    0.000    0.001    0.000 {method 'get' of 'dict' objects}
     3000    0.001    0.000    0.002    0.000 earley_forest.py:145(sort_key)
    12000    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
     1500    0.001    0.000    0.013    0.000 earley_forest.py:625(visit_symbol_node_in)
  400/100    0.001    0.000    0.017    0.000 copy.py:259(_reconstruct)
     7600    0.001    0.000    0.001    0.000 {method 'add' of 'set' objects}
    13900    0.001    0.000    0.001    0.000 {method 'pop' of 'collections.deque' objects}
     2100    0.001    0.000    0.001    0.000 copy.py:243(_keep_alive)
     1200    0.001    0.000    0.002    0.000 earley_forest.py:556(_collapse_ambig)
      200    0.001    0.000    0.350    0.002 Workbook.py:850(set_cell_contents_copy_sheet)
     1200    0.001    0.000    0.002    0.000 earley_forest.py:565(_call_rule_func)
    13300    0.001    0.000    0.001    0.000 {method 'append' of 'collections.deque' objects}
      100    0.001    0.000    0.334    0.003 earley.py:262(parse)
     9650    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
     1500    0.001    0.000    0.001    0.000 earley_forest.py:155(children)
     3000    0.001    0.000    0.001    0.000 {built-in method builtins.getattr}
  600/400    0.001    0.000    0.005    0.000 copy.py:201(_deepcopy_list)
     3000    0.001    0.000    0.001    0.000 utils.py:357(__len__)
     4500    0.001    0.000    0.001    0.000 {method 'remove' of 'set' objects}
      700    0.001    0.000    0.001    0.000 Sheet.py:93(get_cell_value)
     1500    0.001    0.000    0.001    0.000 earley_forest.py:499(__init__)
     1500    0.001    0.000    0.001    0.000 earley_forest.py:70(load_paths)
      800    0.001    0.000    0.001    0.000 lexer.py:213(_future_new)
     1500    0.001    0.000    0.012    0.000 earley_forest.py:450(visit_packed_node_out)
      100    0.001    0.000    0.335    0.003 parser_frontends.py:100(parse)
  500/100    0.001    0.000    0.384    0.004 Workbook.py:36(run_func)
      800    0.001    0.000    0.001    0.000 lexer.py:202(__new__)
      300    0.001    0.000    0.001    0.000 Cell.py:81(set_cell_value)
     3000    0.001    0.000    0.001    0.000 earley_forest.py:141(is_empty)
      200    0.001    0.000    0.001    0.000 utils.py:179(convert_location_to_idx)
     1200    0.001    0.000    0.008    0.000 earley_forest.py:444(visit_symbol_node_out)
     1400    0.000    0.000    0.001    0.000 utils.py:78(get_hidden_name)
      100    0.000    0.000    0.340    0.003 Workbook.py:545(get_formula_value)
     3200    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
      200    0.000    0.000    0.003    0.000 Sheet.py:60(set_cell_contents)
     3000    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
      400    0.000    0.000    0.001    0.000 {method '__reduce_ex__' of 'object' objects}
      300    0.000    0.000    0.001    0.000 earley_forest.py:591(transform_intermediate_node)
     1500    0.000    0.000    0.000    0.000 earley_forest.py:158(<listcomp>)
     1200    0.000    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
     3300    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
      200    0.000    0.000    0.001    0.000 xearley.py:88(<listcomp>)
     3000    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
     1000    0.000    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
      200    0.000    0.000    0.001    0.000 Workbook.py:688(_get_sheet_name_location)
  300/100    0.000    0.000    0.004    0.000 tree.py:206(__deepcopy__)
     5250    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
      400    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
      200    0.000    0.000    0.001    0.000 Workbook.py:715(clean_children_cells)
      100    0.000    0.000    0.000    0.000 Sheet.py:134(set_sheet_name)
  300/100    0.000    0.000    0.004    0.000 visitors.py:421(_visit_tree)
      100    0.000    0.000    0.000    0.000 utils.py:307(error_matcher)
      400    0.000    0.000    0.000    0.000 __init__.py:272(_compile)
      100    0.000    0.000    0.001    0.000 Parser.py:253(cell)
     3300    0.000    0.000    0.000    0.000 copy.py:182(_deepcopy_atomic)
     1602    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      500    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
  300/100    0.000    0.000    0.003    0.000 visitors.py:444(inner)
     1100    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
  300/100    0.000    0.000    0.003    0.000 visitors.py:430(<listcomp>)
      300    0.000    0.000    0.002    0.000 Parser.py:40(fix_formula)
      300    0.000    0.000    0.000    0.000 Workbook.py:541(get_sheet_name_from_hidden)
      800    0.000    0.000    0.001    0.000 copy.py:264(<genexpr>)
      300    0.000    0.000    0.001    0.000 lexer.py:262(__deepcopy__)
      200    0.000    0.000    0.001    0.000 Cell.py:65(set_contents)
      100    0.000    0.000    0.001    0.000 earley.py:284(<listcomp>)
      100    0.000    0.000    0.073    0.001 earley_forest.py:535(visit)
      300    0.000    0.000    0.001    0.000 __init__.py:163(match)
      200    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
      100    0.000    0.000    0.001    0.000 copy.py:210(_deepcopy_tuple)
      800    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
      200    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
      102    0.000    0.000    0.000    0.000 copyreg.py:113(_slotnames)
      100    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
  300/100    0.000    0.000    0.003    0.000 visitors.py:429(visit_children)
      100    0.000    0.000    0.001    0.000 Workbook.py:912(get_cell_value)
      300    0.000    0.000    0.001    0.000 utils.py:131(check_valid_cell_location)
      200    0.000    0.000    0.000    0.000 xearley.py:85(<listcomp>)
      300    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
      100    0.000    0.000    0.000    0.000 earley_forest.py:523(__init__)
      400    0.000    0.000    0.000    0.000 <frozen codecs>:327(reset)
      600    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
      100    0.000    0.000    0.000    0.000 Graph.py:96(update_child)
      100    0.000    0.000    0.073    0.001 earley_forest.py:397(transform)
      100    0.000    0.000    0.000    0.000 Parser.py:169(add_expr)
      600    0.000    0.000    0.000    0.000 tree.py:61(__init__)
      100    0.000    0.000    0.001    0.000 Workbook.py:701(add_children_cells)
      100    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
     1200    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
      300    0.000    0.000    0.000    0.000 copyreg.py:104(__newobj__)
      400    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
      300    0.000    0.000    0.001    0.000 earley_forest.py:447(visit_intermediate_node_out)
      100    0.000    0.000    0.001    0.000 Sheet.py:104(set_cell_value)
      100    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
      700    0.000    0.000    0.000    0.000 Cell.py:123(get_value)
     1200    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
      100    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
      100    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
      400    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      900    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
      200    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
      100    0.000    0.000    0.000    0.000 {method 'update' of 'collections.OrderedDict' objects}
      500    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      100    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      100    0.000    0.000    0.000    0.000 __init__.py:178(sub)
      100    0.000    0.000    0.000    0.000 Parser.py:243(number)
      100    0.000    0.000    0.000    0.000 Workbook.py:506(num_sheets)
      500    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
      300    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
      200    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
      100    0.000    0.000    0.000    0.000 copy.py:211(<listcomp>)
      200    0.000    0.000    0.000    0.000 Cell.py:151(set_location)
      100    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
      100    0.000    0.000    0.335    0.003 lark.py:640(parse)
      100    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
      200    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
      400    0.000    0.000    0.000    0.000 Cell.py:126(get_contents)
      200    0.000    0.000    0.000    0.000 <frozen abc>:117(__instancecheck__)
      600    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
      200    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
      200    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
      100    0.000    0.000    0.004    0.000 visitors.py:415(visit)
      400    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
      100    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      300    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      400    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      400    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      400    0.000    0.000    0.000    0.000 <frozen codecs>:276(reset)
      200    0.000    0.000    0.000    0.000 Cell.py:147(get_location)
      100    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
      200    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      200    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      102    0.000    0.000    0.000    0.000 {method 'get' of 'mappingproxy' objects}
      200    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
      200    0.000    0.000    0.000    0.000 Cell.py:133(get_children)
      100    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      200    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      200    0.000    0.000    0.000    0.000 {method '__deepcopy__' of 'decimal.Decimal' objects}
      100    0.000    0.000    0.000    0.000 Sheet.py:57(get_sheet_cells)
      100    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
      100    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
      100    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
      100    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_rename_sheet... #######################
for test <function pro_rename_sheet at 0x7fbace6613a0> total time: 8.637837466999999
Total Logs
         2470992 function calls (2350192 primitive calls) in 0.906 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
100800/100400    0.082    0.000    0.314    0.000 visitors.py:111(_call_userfunc)
    12000    0.071    0.000    0.133    0.000 tree.py:137(iter_subtrees)
     4000    0.065    0.000    0.156    0.000 visitors.py:293(transform)
164200/150400    0.057    0.000    0.327    0.000 visitors.py:143(_transform_children)
197300/153200    0.051    0.000    0.080    0.000 {built-in method builtins.getattr}
     6500    0.043    0.000    0.456    0.000 visitors.py:278(transform)
   517800    0.041    0.000    0.042    0.000 {built-in method builtins.isinstance}
    85500    0.040    0.000    0.055    0.000 tree.py:147(<listcomp>)
    72500    0.024    0.000    0.036    0.000 visitors.py:171(__default__)
      100    0.020    0.000    0.837    0.008 load_grammar.py:690(compile)
    20100    0.019    0.000    0.023    0.000 tree.py:179(expand_kids_by_data)
     4100    0.016    0.000    0.031    0.000 ast.py:54(literal_eval)
    59100    0.016    0.000    0.252    0.000 visitors.py:275(_transform_tree)
94900/53400    0.016    0.000    0.025    0.000 {built-in method builtins.hash}
     6300    0.015    0.000    0.024    0.000 functools.py:35(update_wrapper)
    82300    0.014    0.000    0.014    0.000 tree.py:61(__init__)
    67200    0.014    0.000    0.019    0.000 grammar.py:25(__hash__)
     4100    0.013    0.000    0.069    0.000 load_grammar.py:566(_literal_to_pattern)
   159000    0.012    0.000    0.012    0.000 {built-in method builtins.id}
    26900    0.011    0.000    0.020    0.000 grammar.py:18(__eq__)
10500/4500    0.011    0.000    0.067    0.000 load_grammar.py:389(expansion)
    78800    0.010    0.000    0.011    0.000 tree.py:66(meta)
     2800    0.010    0.000    0.053    0.000 tree_matcher.py:106(_build_recons_rules)
     4100    0.010    0.000    0.010    0.000 {built-in method builtins.compile}
     4100    0.009    0.000    0.042    0.000 load_grammar.py:540(eval_escaping)
14600/8400    0.009    0.000    0.098    0.000 visitors.py:342(_call_userfunc)
   105100    0.008    0.000    0.008    0.000 {method 'append' of 'list' objects}
    83400    0.007    0.000    0.007    0.000 {built-in method builtins.len}
    15500    0.006    0.000    0.030    0.000 load_grammar.py:384(_flatten)
     8400    0.006    0.000    0.018    0.000 grammar.py:103(__init__)
4000/1100    0.006    0.000    0.115    0.000 visitors.py:362(visit)
     9300    0.006    0.000    0.011    0.000 visitors.py:130(_call_userfunc_token)
5800/1200    0.006    0.000    0.024    0.000 visitors.py:155(_transform_tree)
    16100    0.006    0.000    0.007    0.000 lexer.py:265(__eq__)
     3500    0.005    0.000    0.025    0.000 load_grammar.py:420(expansions)
     6300    0.005    0.000    0.034    0.000 visitors.py:481(__get__)
13900/12900    0.005    0.000    0.016    0.000 tree.py:134(__hash__)
     3500    0.005    0.000    0.011    0.000 tree_matcher.py:121(<listcomp>)
     1100    0.004    0.000    0.008    0.000 load_grammar.py:450(pattern)
     4900    0.004    0.000    0.016    0.000 tree_matcher.py:57(make_recons_rule)
     6300    0.004    0.000    0.029    0.000 visitors.py:470(__init__)
    48300    0.004    0.000    0.004    0.000 {method 'pop' of 'list' objects}
     2500    0.004    0.000    0.465    0.000 visitors.py:258(transform)
1500/1300    0.004    0.000    0.046    0.000 load_grammar.py:405(<listcomp>)
     6300    0.003    0.000    0.093    0.000 visitors.py:500(_vargs_inline)
     4100    0.003    0.000    0.073    0.000 load_grammar.py:601(literal)
      100    0.003    0.000    0.898    0.009 tree_matcher.py:89(__init__)
    31500    0.003    0.000    0.003    0.000 {built-in method builtins.setattr}
     6300    0.003    0.000    0.090    0.000 visitors.py:478(__call__)
    12300    0.003    0.000    0.005    0.000 load_grammar.py:537(<genexpr>)
      100    0.003    0.000    0.008    0.000 load_grammar.py:793(<setcomp>)
     4300    0.003    0.000    0.008    0.000 {built-in method builtins.max}
    10500    0.003    0.000    0.005    0.000 load_grammar.py:759(<genexpr>)
     4100    0.002    0.000    0.013    0.000 ast.py:33(parse)
     4100    0.002    0.000    0.009    0.000 load_grammar.py:536(_rfind)
      100    0.002    0.000    0.003    0.000 Graph.py:28(rename_sheet)
      100    0.002    0.000    0.004    0.000 tree_matcher.py:28(_best_from_group)
     4700    0.002    0.000    0.002    0.000 lexer.py:41(__init__)
     2500    0.002    0.000    0.100    0.000 load_grammar.py:674(nr_deepcopy_tree)
     5400    0.002    0.000    0.003    0.000 lexer.py:50(__hash__)
     1500    0.002    0.000    0.008    0.000 utils.py:190(<listcomp>)
     2000    0.002    0.000    0.011    0.000 load_grammar.py:631(expansions)
  300/200    0.002    0.000    0.908    0.005 Workbook.py:36(run_func)
     3500    0.002    0.000    0.006    0.000 load_grammar.py:798(<lambda>)
     4600    0.002    0.000    0.002    0.000 load_grammar.py:668(value)
      100    0.002    0.000    0.209    0.002 load_grammar.py:710(<listcomp>)
     2000    0.001    0.000    0.003    0.000 load_grammar.py:637(<lambda>)
    11300    0.001    0.000    0.001    0.000 {method 'replace' of 'str' objects}
     4100    0.001    0.000    0.002    0.000 {built-in method builtins.all}
     8200    0.001    0.000    0.001    0.000 {method 'rfind' of 'str' objects}
    12000    0.001    0.000    0.001    0.000 {method 'values' of 'collections.OrderedDict' objects}
      100    0.001    0.000    0.002    0.000 Workbook.py:1109(move_sheet)
      100    0.001    0.000    0.905    0.009 Workbook.py:1042(rename_sheet)
     5100    0.001    0.000    0.001    0.000 grammar.py:69(__init__)
      100    0.001    0.000    0.002    0.000 load_grammar.py:806(<setcomp>)
      200    0.001    0.000    0.007    0.000 utils.py:271(<listcomp>)
     2000    0.001    0.000    0.004    0.000 lexer.py:81(to_regexp)
      100    0.001    0.000    0.004    0.000 tree_matcher.py:115(<setcomp>)
     3500    0.001    0.000    0.001    0.000 load_grammar.py:621(expansion)
    11600    0.001    0.000    0.001    0.000 tree.py:175(<lambda>)
     4100    0.001    0.000    0.001    0.000 ast.py:84(_convert)
      600    0.001    0.000    0.005    0.000 {method 'sort' of 'list' objects}
     4000    0.001    0.000    0.003    0.000 {method 'add' of 'set' objects}
     6900    0.001    0.000    0.001    0.000 tree_matcher.py:12(is_discarded_terminal)
     1400    0.001    0.000    0.005    0.000 tree_matcher.py:61(make_recons_rule_to_term)
     6400    0.001    0.000    0.001    0.000 {method 'update' of 'dict' objects}
     2100    0.001    0.000    0.003    0.000 lexer.py:125(__init__)
      100    0.001    0.000    0.003    0.000 tree_matcher.py:108(<setcomp>)
     1000    0.001    0.000    0.003    0.000 load_grammar.py:346(expr)
     4800    0.001    0.000    0.001    0.000 grammar.py:42(__init__)
     2000    0.001    0.000    0.002    0.000 __init__.py:253(escape)
     3500    0.001    0.000    0.004    0.000 grammar.py:22(__ne__)
     9300    0.001    0.000    0.001    0.000 visitors.py:178(__default_token__)
     5400    0.001    0.000    0.001    0.000 grammar.py:15(__init__)
     1500    0.001    0.000    0.009    0.000 utils.py:184(dedup_list)
     1500    0.001    0.000    0.017    0.000 tree.py:169(find_pred)
     4900    0.001    0.000    0.001    0.000 tree_matcher.py:17(__init__)
     5000    0.001    0.000    0.001    0.000 {method 'startswith' of 'str' objects}
     2000    0.001    0.000    0.001    0.000 {method 'translate' of 'str' objects}
     2500    0.001    0.000    0.004    0.000 load_grammar.py:639(<genexpr>)
     8900    0.001    0.000    0.001    0.000 grammar.py:121(__hash__)
      100    0.001    0.000    0.001    0.000 tree_matcher.py:116(<setcomp>)
     4900    0.001    0.000    0.001    0.000 load_grammar.py:572(<genexpr>)
      100    0.001    0.000    0.049    0.000 load_grammar.py:693(<listcomp>)
      500    0.001    0.000    0.005    0.000 {method 'join' of 'str' objects}
     6500    0.001    0.000    0.001    0.000 typing.py:2256(cast)
     2100    0.001    0.000    0.001    0.000 lexer.py:70(_get_flags)
     3000    0.001    0.000    0.001    0.000 load_grammar.py:617(pattern)
     1500    0.001    0.000    0.018    0.000 tree.py:173(find_data)
     1500    0.001    0.000    0.001    0.000 lexer.py:53(__eq__)
    10300    0.001    0.000    0.001    0.000 {method 'items' of 'dict' objects}
     2100    0.001    0.000    0.001    0.000 <frozen abc>:117(__instancecheck__)
     3500    0.001    0.000    0.001    0.000 load_grammar.py:431(expansion)
     4100    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
     3100    0.001    0.000    0.001    0.000 visitors.py:108(__init__)
     2100    0.001    0.000    0.001    0.000 {built-in method _abc._abc_instancecheck}
     3500    0.001    0.000    0.001    0.000 {built-in method builtins.any}
     2000    0.000    0.000    0.001    0.000 lexer.py:88(max_width)
      100    0.000    0.000    0.053    0.001 load_grammar.py:694(<listcomp>)
     4100    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      100    0.000    0.000    0.001    0.000 load_grammar.py:446(<dictcomp>)
     2000    0.000    0.000    0.001    0.000 lexer.py:84(min_width)
     1200    0.000    0.000    0.024    0.000 visitors.py:159(transform)
     2500    0.000    0.000    0.001    0.000 tree_matcher.py:44(<lambda>)
     3000    0.000    0.000    0.000    0.000 load_grammar.py:663(value)
      100    0.000    0.000    0.899    0.009 reconstruct.py:80(__init__)
      100    0.000    0.000    0.001    0.000 Workbook.py:974(new_sheet)
      100    0.000    0.000    0.001    0.000 copy.py:66(copy)
      600    0.000    0.000    0.000    0.000 load_grammar.py:411(alias)
      100    0.000    0.000    0.001    0.000 load_grammar.py:246(_add_recurse_rule)
      200    0.000    0.000    0.000    0.000 utils.py:96(check_new_name)
     2100    0.000    0.000    0.000    0.000 load_grammar.py:809(<lambda>)
      500    0.000    0.000    0.000    0.000 load_grammar.py:640(<setcomp>)
      900    0.000    0.000    0.001    0.000 load_grammar.py:210(_args_as_int)
      400    0.000    0.000    0.001    0.000 grammar.py:124(__eq__)
      500    0.000    0.000    0.001    0.000 load_grammar.py:613(_make_joined_pattern)
      100    0.000    0.000    0.000    0.000 load_grammar.py:642(expr)
      100    0.000    0.000    0.003    0.000 load_grammar.py:375(maybe)
      800    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
      600    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
      100    0.000    0.000    0.000    0.000 reconstruct.py:83(<dictcomp>)
      100    0.000    0.000    0.000    0.000 copy.py:259(_reconstruct)
      300    0.000    0.000    0.000    0.000 Graph.py:128(get_sheet_parents)
     1100    0.000    0.000    0.000    0.000 tree.py:32(__init__)
      100    0.000    0.000    0.000    0.000 load_grammar.py:763(<listcomp>)
     1600    0.000    0.000    0.000    0.000 {built-in method builtins.next}
      100    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
      100    0.000    0.000    0.001    0.000 load_grammar.py:443(__init__)
      100    0.000    0.000    0.005    0.000 tree_matcher.py:42(_best_rules_from_group)
      200    0.000    0.000    0.007    0.000 utils.py:269(classify_bool)
      100    0.000    0.000    0.000    0.000 load_grammar.py:240(_add_rule)
      100    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
      200    0.000    0.000    0.000    0.000 visitors.py:263(__mul__)
     1200    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
      100    0.000    0.000    0.000    0.000 load_grammar.py:235(_name_rule)
      200    0.000    0.000    0.000    0.000 load_grammar.py:201(_will_not_get_removed)
      100    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
     1490    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
      200    0.000    0.000    0.000    0.000 visitors.py:163(__mul__)
      400    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
     1100    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
      200    0.000    0.000    0.000    0.000 Workbook.py:963(recompute_sheet_parents)
      200    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
      200    0.000    0.000    0.000    0.000 load_grammar.py:219(expansion)
      100    0.000    0.000    0.000    0.000 Parser.py:348(__init__)
      200    0.000    0.000    0.000    0.000 Workbook.py:506(num_sheets)
      100    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
      100    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
      200    0.000    0.000    0.001    0.000 load_grammar.py:222(expansions)
      400    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 copyreg.py:104(__newobj__)
      100    0.000    0.000    0.000    0.000 Sheet.py:134(set_sheet_name)
      100    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
      200    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      200    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.OrderedDict' objects}
      400    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
      100    0.000    0.000    0.000    0.000 Sheet.py:25(__init__)
      100    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
      100    0.000    0.000    0.000    0.000 Graph.py:121(has_sheet)
      100    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
      500    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
      100    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
      100    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
      100    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
      100    0.000    0.000    0.000    0.000 Graph.py:124(add_sheet)
      200    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
      100    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
      100    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
      100    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      100    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      100    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_copy_cells... #######################
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
=A1*B1
A1*B1
for test <function pro_copy_cells at 0x7fbace6614e0> total time: 22.24983443100001
Total Logs
         6180802 function calls (6047441 primitive calls) in 2.296 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      198    0.140    0.001    0.303    0.002 grammar_analysis.py:78(calculate_sets)
     2178    0.128    0.000    0.472    0.000 earley.py:78(predict_and_complete)
   261657    0.106    0.000    0.191    0.000 grammar.py:18(__eq__)
   457677    0.091    0.000    0.125    0.000 grammar.py:25(__hash__)
636570/584991    0.089    0.000    0.116    0.000 {built-in method builtins.hash}
101079/100683    0.086    0.000    0.341    0.000 visitors.py:111(_call_userfunc)
  1004952    0.084    0.000    0.086    0.000 {built-in method builtins.isinstance}
    12177    0.075    0.000    0.140    0.000 tree.py:137(iter_subtrees)
    97515    0.074    0.000    0.120    0.000 earley_common.py:9(__init__)
     3960    0.070    0.000    0.165    0.000 visitors.py:293(transform)
165528/151470    0.060    0.000    0.357    0.000 visitors.py:143(_transform_children)
      495    0.060    0.000    0.199    0.000 earley_forest.py:283(visit)
204324/160665    0.057    0.000    0.088    0.000 {built-in method builtins.getattr}
   159283    0.055    0.000    0.069    0.000 lexer.py:265(__eq__)
     6732    0.046    0.000    0.489    0.000 visitors.py:278(transform)
    85635    0.041    0.000    0.057    0.000 tree.py:147(<listcomp>)
    19998    0.035    0.000    0.109    0.000 grammar_analysis.py:187(_expand_rule)
    80586    0.033    0.000    0.051    0.000 utils.py:345(add)
341098/341091    0.027    0.000    0.027    0.000 {built-in method builtins.len}
    71874    0.026    0.000    0.038    0.000 visitors.py:171(__default__)
     4059    0.022    0.000    0.022    0.000 {built-in method builtins.compile}
    64251    0.021    0.000    0.021    0.000 grammar_analysis.py:70(update_set)
       99    0.021    0.000    0.877    0.009 load_grammar.py:690(compile)
    19899    0.020    0.000    0.025    0.000 tree.py:179(expand_kids_by_data)
   247005    0.019    0.000    0.019    0.000 {built-in method builtins.id}
   229216    0.018    0.000    0.018    0.000 {method 'append' of 'list' objects}
   170874    0.018    0.000    0.018    0.000 grammar.py:121(__hash__)
    65633    0.018    0.000    0.044    0.000 {method 'add' of 'set' objects}
    12375    0.017    0.000    0.137    0.000 utils.py:275(bfs)
    59499    0.017    0.000    0.274    0.000 visitors.py:275(_transform_tree)
    34254    0.016    0.000    0.022    0.000 grammar_analysis.py:17(__init__)
     6237    0.015    0.000    0.026    0.000 functools.py:35(update_wrapper)
    83358    0.015    0.000    0.015    0.000 tree.py:61(__init__)
     8613    0.015    0.000    0.029    0.000 earley_forest.py:50(__init__)
    33759    0.014    0.000    0.023    0.000 utils.py:342(__contains__)
     1188    0.014    0.000    0.043    0.000 xearley.py:41(scan)
    73953    0.014    0.000    0.014    0.000 earley_common.py:28(__eq__)
     4554    0.014    0.000    0.063    0.000 earley.py:135(<listcomp>)
     4059    0.014    0.000    0.077    0.000 load_grammar.py:566(_literal_to_pattern)
     7920    0.012    0.000    0.054    0.000 earley_forest.py:437(_visit_node_out_helper)
     3960    0.012    0.000    0.024    0.000 earley_forest.py:603(transform_packed_node)
    80685    0.012    0.000    0.012    0.000 tree.py:66(meta)
10395/4455    0.012    0.000    0.072    0.000 load_grammar.py:389(expansion)
   116622    0.011    0.000    0.011    0.000 earley_common.py:31(__hash__)
      396    0.011    0.000    0.024    0.000 utils.py:23(classify)
     2772    0.010    0.000    0.053    0.000 tree_matcher.py:106(_build_recons_rules)
     4059    0.010    0.000    0.048    0.000 load_grammar.py:540(eval_escaping)
    70884    0.010    0.000    0.010    0.000 {built-in method builtins.next}
14454/8316    0.009    0.000    0.103    0.000 visitors.py:342(_call_userfunc)
    34254    0.009    0.000    0.023    0.000 grammar_analysis.py:45(__hash__)
     4059    0.008    0.000    0.036    0.000 ast.py:54(literal_eval)
     7920    0.008    0.000    0.018    0.000 {built-in method builtins.sorted}
    23265    0.008    0.000    0.016    0.000 utils.py:339(__init__)
      198    0.008    0.000    0.509    0.003 earley.py:32(__init__)
     8811    0.008    0.000    0.023    0.000 earley_forest.py:64(add_family)
      495    0.007    0.000    0.770    0.002 earley.py:262(parse)
     9999    0.007    0.000    0.015    0.000 visitors.py:130(_call_userfunc_token)
      198    0.007    0.000    0.367    0.002 grammar_analysis.py:141(__init__)
     8712    0.007    0.000    0.020    0.000 grammar.py:103(__init__)
    15345    0.007    0.000    0.032    0.000 load_grammar.py:384(_flatten)
6039/1287    0.007    0.000    0.031    0.000 visitors.py:155(_transform_tree)
3960/1089    0.006    0.000    0.122    0.000 visitors.py:362(visit)
    23265    0.006    0.000    0.008    0.000 {built-in method fromkeys}
     2475    0.006    0.000    0.144    0.000 grammar_analysis.py:180(expand_rule)
     8811    0.006    0.000    0.011    0.000 earley_forest.py:131(__init__)
    23265    0.006    0.000    0.009    0.000 utils.py:348(__iter__)
     3465    0.006    0.000    0.026    0.000 load_grammar.py:420(expansions)
    33858    0.006    0.000    0.006    0.000 grammar_analysis.py:28(next)
     6237    0.006    0.000    0.036    0.000 visitors.py:481(__get__)
    56913    0.005    0.000    0.005    0.000 {method 'pop' of 'list' objects}
     7920    0.005    0.000    0.027    0.000 earley_forest.py:85(children)
     3168    0.005    0.000    0.014    0.000 earley_forest.py:581(transform_symbol_node)
13959/12969    0.005    0.000    0.016    0.000 tree.py:134(__hash__)
     8811    0.005    0.000    0.023    0.000 earley_common.py:25(advance)
     3465    0.005    0.000    0.011    0.000 tree_matcher.py:121(<listcomp>)
      495    0.005    0.000    0.023    0.000 earley.py:188(scan)
     3960    0.005    0.000    0.014    0.000 earley_forest.py:631(visit_packed_node_in)
    13064    0.005    0.000    0.005    0.000 {method 'match' of 're.Pattern' objects}
     1089    0.004    0.000    0.009    0.000 load_grammar.py:450(pattern)
     3960    0.004    0.000    0.022    0.000 earley_forest.py:422(visit_symbol_node_in)
     6237    0.004    0.000    0.031    0.000 visitors.py:470(__init__)
     4851    0.004    0.000    0.016    0.000 tree_matcher.py:57(make_recons_rule)
    12573    0.004    0.000    0.006    0.000 {method 'setdefault' of 'dict' objects}
     2475    0.004    0.000    0.487    0.000 visitors.py:258(transform)
    36036    0.004    0.000    0.004    0.000 {built-in method builtins.iter}
     3960    0.004    0.000    0.008    0.000 earley_forest.py:427(visit_packed_node_in)
1485/1287    0.004    0.000    0.049    0.000 load_grammar.py:405(<listcomp>)
     3960    0.004    0.000    0.038    0.000 earley_forest.py:638(visit_packed_node_out)
      297    0.004    0.000    0.665    0.002 tree_matcher.py:148(match_tree)
     3960    0.004    0.000    0.036    0.000 earley_forest.py:625(visit_symbol_node_in)
     6237    0.004    0.000    0.103    0.000 visitors.py:500(_vargs_inline)
     4059    0.004    0.000    0.081    0.000 load_grammar.py:601(literal)
     7920    0.004    0.000    0.005    0.000 earley_forest.py:145(sort_key)
       99    0.003    0.000    0.939    0.009 tree_matcher.py:89(__init__)
    12177    0.003    0.000    0.005    0.000 load_grammar.py:537(<genexpr>)
     6237    0.003    0.000    0.099    0.000 visitors.py:478(__call__)
      198    0.003    0.000    0.474    0.002 xearley.py:39(_parse)
    31185    0.003    0.000    0.003    0.000 {built-in method builtins.setattr}
     9108    0.003    0.000    0.006    0.000 parser_frontends.py:184(match)
     3168    0.003    0.000    0.006    0.000 earley_forest.py:556(_collapse_ambig)
     3168    0.003    0.000    0.010    0.000 tree_matcher.py:48(_match)
      297    0.003    0.000    0.005    0.000 tree_matcher.py:28(_best_from_group)
     2079    0.003    0.000    0.003    0.000 earley.py:58(<listcomp>)
     4455    0.003    0.000    0.008    0.000 {built-in method builtins.max}
     3168    0.003    0.000    0.007    0.000 earley_forest.py:565(_call_rule_func)
       99    0.003    0.000    0.008    0.000 load_grammar.py:793(<setcomp>)
    40491    0.003    0.000    0.003    0.000 {method 'append' of 'collections.deque' objects}
    35838    0.003    0.000    0.003    0.000 {method 'pop' of 'collections.deque' objects}
     4059    0.003    0.000    0.025    0.000 ast.py:33(parse)
    10395    0.003    0.000    0.006    0.000 load_grammar.py:759(<genexpr>)
      297    0.003    0.000    0.073    0.000 earley.py:171(_parse)
      990    0.003    0.000    0.005    0.000 reconstruct.py:33(__default__)
       99    0.003    0.000    2.301    0.023 Workbook.py:422(copy_cells)
     4546    0.003    0.000    0.004    0.000 __init__.py:272(_compile)
       99    0.002    0.000    2.298    0.023 Workbook.py:283(transfer_cells)
     3956    0.002    0.000    0.008    0.000 __init__.py:163(match)
     4059    0.002    0.000    0.010    0.000 load_grammar.py:536(_rfind)
     3960    0.002    0.000    0.003    0.000 earley_forest.py:155(children)
     2475    0.002    0.000    0.107    0.000 load_grammar.py:674(nr_deepcopy_tree)
     4653    0.002    0.000    0.002    0.000 lexer.py:41(__init__)
      297    0.002    0.000    0.340    0.001 Workbook.py:639(recompute_cell_and_parents)
      792    0.002    0.000    0.003    0.000 utils.py:179(convert_location_to_idx)
     3960    0.002    0.000    0.002    0.000 earley_forest.py:499(__init__)
      297    0.002    0.000    0.003    0.000 Graph.py:330(tarjans)
     7920    0.002    0.000    0.003    0.000 utils.py:357(__len__)
     5346    0.002    0.000    0.003    0.000 lexer.py:50(__hash__)
     1485    0.002    0.000    0.008    0.000 utils.py:190(<listcomp>)
    11880    0.002    0.000    0.002    0.000 {method 'remove' of 'set' objects}
      198    0.002    0.000    0.006    0.000 grammar_analysis.py:82(<setcomp>)
     3960    0.002    0.000    0.034    0.000 earley_forest.py:450(visit_packed_node_out)
     3960    0.002    0.000    0.003    0.000 earley_forest.py:70(load_paths)
     1980    0.002    0.000    0.012    0.000 load_grammar.py:631(expansions)
     1774    0.002    0.000    0.003    0.000 Sheet.py:93(get_cell_value)
      297    0.002    0.000    0.350    0.001 Workbook.py:728(set_cell_contents)
       99    0.002    0.000    0.224    0.002 load_grammar.py:710(<listcomp>)
     2178    0.002    0.000    0.006    0.000 tree_matcher.py:65(parse_rulename)
     4554    0.002    0.000    0.002    0.000 load_grammar.py:668(value)
      198    0.002    0.000    0.003    0.000 earley.py:52(<setcomp>)
      590    0.002    0.000    0.007    0.000 Parser.py:253(cell)
      198    0.002    0.000    0.002    0.000 tree_matcher.py:178(<dictcomp>)
     1980    0.002    0.000    0.003    0.000 load_grammar.py:637(<lambda>)
     8118    0.002    0.000    0.002    0.000 {method 'rfind' of 'str' objects}
     3465    0.002    0.000    0.005    0.000 load_grammar.py:798(<lambda>)
    11187    0.002    0.000    0.002    0.000 {method 'replace' of 'str' objects}
     4059    0.002    0.000    0.002    0.000 {built-in method builtins.all}
     7920    0.002    0.000    0.002    0.000 earley_forest.py:141(is_empty)
      792    0.001    0.000    0.005    0.000 {method 'sort' of 'list' objects}
    12177    0.001    0.000    0.001    0.000 {method 'values' of 'collections.OrderedDict' objects}
     1782    0.001    0.000    0.002    0.000 lexer.py:213(_future_new)
     5445    0.001    0.000    0.001    0.000 grammar.py:69(__init__)
     3168    0.001    0.000    0.021    0.000 earley_forest.py:444(visit_symbol_node_out)
     6534    0.001    0.000    0.001    0.000 grammar.py:42(__init__)
      891    0.001    0.000    0.002    0.000 utils.py:194(convert_idx_to_location)
      198    0.001    0.000    0.002    0.000 earley.py:53(<setcomp>)
     2572    0.001    0.000    0.006    0.000 {method 'join' of 'str' objects}
     7821    0.001    0.000    0.001    0.000 tree_matcher.py:12(is_discarded_terminal)
       99    0.001    0.000    0.002    0.000 load_grammar.py:806(<setcomp>)
      198    0.001    0.000    0.626    0.003 parser_frontends.py:100(parse)
     1782    0.001    0.000    0.003    0.000 lexer.py:202(__new__)
     1980    0.001    0.000    0.004    0.000 lexer.py:81(to_regexp)
      792    0.001    0.000    0.002    0.000 tree_matcher.py:21(__call__)
     1287    0.001    0.000    0.002    0.000 earley_forest.py:432(visit_token_node)
     4059    0.001    0.000    0.002    0.000 ast.py:84(_convert)
     3465    0.001    0.000    0.002    0.000 load_grammar.py:621(expansion)
      198    0.001    0.000    0.007    0.000 utils.py:271(<listcomp>)
     6831    0.001    0.000    0.001    0.000 grammar.py:15(__init__)
      392    0.001    0.000    0.014    0.000 Workbook.py:583(recompute_cell_value)
     8118    0.001    0.000    0.001    0.000 earley_forest.py:101(__hash__)
       99    0.001    0.000    0.004    0.000 tree_matcher.py:115(<setcomp>)
     7920    0.001    0.000    0.001    0.000 earley_forest.py:548(_check_cycle)
    11484    0.001    0.000    0.001    0.000 tree.py:175(<lambda>)
      295    0.001    0.000    0.329    0.001 Workbook.py:545(get_formula_value)
     3168    0.001    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
     6338    0.001    0.000    0.001    0.000 {method 'update' of 'dict' objects}
      792    0.001    0.000    0.002    0.000 earley_forest.py:591(transform_intermediate_node)
     3960    0.001    0.000    0.001    0.000 earley_forest.py:158(<listcomp>)
     8811    0.001    0.000    0.001    0.000 earley_forest.py:169(__hash__)
      592    0.001    0.000    0.002    0.000 Cell.py:81(set_cell_value)
     2079    0.001    0.000    0.003    0.000 lexer.py:125(__init__)
     8778    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
     9801    0.001    0.000    0.001    0.000 visitors.py:178(__default_token__)
     1980    0.001    0.000    0.002    0.000 __init__.py:253(escape)
     1386    0.001    0.000    0.005    0.000 tree_matcher.py:61(make_recons_rule_to_term)
       99    0.001    0.000    0.003    0.000 tree_matcher.py:108(<setcomp>)
      990    0.001    0.000    0.003    0.000 load_grammar.py:346(expr)
     1683    0.001    0.000    0.001    0.000 earley_forest.py:193(__init__)
     1485    0.001    0.000    0.009    0.000 utils.py:184(dedup_list)
     3465    0.001    0.000    0.004    0.000 grammar.py:22(__ne__)
      495    0.001    0.000    0.200    0.000 earley_forest.py:535(visit)
     1778    0.001    0.000    0.005    0.000 utils.py:131(check_valid_cell_location)
     1980    0.001    0.000    0.001    0.000 {method 'translate' of 'str' objects}
  885/295    0.001    0.000    0.014    0.000 visitors.py:421(_visit_tree)
     2561    0.001    0.000    0.001    0.000 utils.py:78(get_hidden_name)
       99    0.001    0.000    0.052    0.001 load_grammar.py:693(<listcomp>)
     4950    0.001    0.000    0.001    0.000 {method 'startswith' of 'str' objects}
     9900    0.001    0.000    0.001    0.000 {method 'popleft' of 'collections.deque' objects}
     1485    0.001    0.000    0.018    0.000 tree.py:169(find_pred)
  885/295    0.001    0.000    0.013    0.000 visitors.py:444(inner)
      590    0.001    0.000    0.004    0.000 Workbook.py:912(get_cell_value)
     4851    0.001    0.000    0.001    0.000 tree_matcher.py:17(__init__)
      495    0.001    0.000    0.003    0.000 earley.py:284(<listcomp>)
  792/396    0.001    0.000    0.680    0.002 reconstruct.py:85(_reconstruct)
      495    0.001    0.000    0.201    0.000 earley_forest.py:397(transform)
     2475    0.001    0.000    0.001    0.000 typing.py:352(inner)
     1980    0.001    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
     2475    0.001    0.000    0.005    0.000 load_grammar.py:639(<genexpr>)
      495    0.001    0.000    0.002    0.000 earley_forest.py:523(__init__)
  885/295    0.001    0.000    0.011    0.000 visitors.py:430(<listcomp>)
     6039    0.001    0.000    0.001    0.000 grammar_analysis.py:149(<lambda>)
      885    0.001    0.000    0.009    0.000 Parser.py:40(fix_formula)
     4851    0.001    0.000    0.001    0.000 load_grammar.py:572(<genexpr>)
     3366    0.001    0.000    0.001    0.000 tree_matcher.py:44(<lambda>)
      297    0.001    0.000    0.004    0.000 Sheet.py:60(set_cell_contents)
       99    0.001    0.000    0.001    0.000 tree_matcher.py:116(<setcomp>)
     4046    0.001    0.000    0.001    0.000 {method 'get' of 'dict' objects}
     2277    0.001    0.000    0.001    0.000 {built-in method _abc._abc_instancecheck}
      394    0.001    0.000    0.001    0.000 Workbook.py:688(_get_sheet_name_location)
      297    0.001    0.000    0.001    0.000 earley.py:245(<setcomp>)
      295    0.001    0.000    0.001    0.000 Parser.py:211(mul_expr)
     6039    0.001    0.000    0.001    0.000 grammar_analysis.py:172(<lambda>)
     6435    0.001    0.000    0.001    0.000 typing.py:2256(cast)
     2277    0.001    0.000    0.001    0.000 <frozen abc>:117(__instancecheck__)
     2079    0.001    0.000    0.001    0.000 lexer.py:70(_get_flags)
     1485    0.001    0.000    0.018    0.000 tree.py:173(find_data)
     4653    0.001    0.000    0.001    0.000 {method 'lstrip' of 'str' objects}
     2970    0.001    0.000    0.001    0.000 load_grammar.py:617(pattern)
  885/295    0.001    0.000    0.011    0.000 visitors.py:429(visit_children)
     1485    0.001    0.000    0.001    0.000 lexer.py:53(__eq__)
      495    0.001    0.000    0.001    0.000 earley_forest.py:390(__init__)
       99    0.001    0.000    0.056    0.001 load_grammar.py:694(<listcomp>)
      198    0.001    0.000    0.003    0.000 Parser.py:388(CELLREF_NO_ABS)
      297    0.001    0.000    0.002    0.000 Workbook.py:715(clean_children_cells)
     3465    0.001    0.000    0.001    0.000 {built-in method builtins.any}
      885    0.001    0.000    0.001    0.000 utils.py:295(get_highest_precedence_error)
     2970    0.001    0.000    0.001    0.000 visitors.py:108(__init__)
     1287    0.001    0.000    0.032    0.000 visitors.py:159(transform)
       99    0.001    0.000    0.001    0.000 load_grammar.py:446(<dictcomp>)
     3465    0.001    0.000    0.001    0.000 load_grammar.py:431(expansion)
     1881    0.001    0.000    0.001    0.000 {built-in method __new__ of type object at 0x860f60}
      198    0.001    0.000    0.012    0.000 grammar_analysis.py:175(<dictcomp>)
     1683    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
     1980    0.000    0.000    0.001    0.000 lexer.py:88(max_width)
      198    0.000    0.000    0.001    0.000 grammar_analysis.py:145(<dictcomp>)
     1980    0.000    0.000    0.001    0.000 lexer.py:84(min_width)
      295    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
      198    0.000    0.000    0.001    0.000 {built-in method builtins.print}
       99    0.000    0.000    0.001    0.000 copy.py:66(copy)
      590    0.000    0.000    0.001    0.000 __init__.py:178(sub)
      198    0.000    0.000    0.001    0.000 parser_frontends.py:96(_make_lexer_thread)
       99    0.000    0.000    0.940    0.009 reconstruct.py:80(__init__)
      297    0.000    0.000    0.350    0.001 Workbook.py:36(run_func)
      297    0.000    0.000    0.007    0.000 tree_matcher.py:42(_best_rules_from_group)
     2970    0.000    0.000    0.000    0.000 load_grammar.py:663(value)
     3267    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      594    0.000    0.000    0.001    0.000 load_grammar.py:411(alias)
      297    0.000    0.000    0.002    0.000 Cell.py:65(set_contents)
      297    0.000    0.000    0.001    0.000 Workbook.py:884(get_cell_contents)
      198    0.000    0.000    0.001    0.000 Parser.py:381(cell)
      198    0.000    0.000    0.001    0.000 grammar_analysis.py:60(__init__)
      792    0.000    0.000    0.001    0.000 reconstruct.py:15(is_iter_empty)
     2079    0.000    0.000    0.000    0.000 load_grammar.py:809(<lambda>)
     2178    0.000    0.000    0.000    0.000 tree.py:32(__init__)
      792    0.000    0.000    0.003    0.000 earley_forest.py:447(visit_intermediate_node_out)
       99    0.000    0.000    0.001    0.000 load_grammar.py:246(_add_recurse_rule)
      495    0.000    0.000    0.000    0.000 load_grammar.py:640(<setcomp>)
      986    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
       99    0.000    0.000    0.680    0.007 reconstruct.py:96(reconstruct)
      396    0.000    0.000    0.001    0.000 grammar.py:124(__eq__)
      295    0.000    0.000    0.002    0.000 Sheet.py:104(set_cell_value)
      198    0.000    0.000    0.001    0.000 grammar_analysis.py:166(<dictcomp>)
      891    0.000    0.000    0.001    0.000 load_grammar.py:210(_args_as_int)
       99    0.000    0.000    0.000    0.000 utils.py:307(error_matcher)
      394    0.000    0.000    0.001    0.000 utils.py:207(remove_exponent)
      198    0.000    0.000    0.001    0.000 grammar_analysis.py:163(<dictcomp>)
      297    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
     2178    0.000    0.000    0.000    0.000 {method 'groups' of 're.Match' objects}
       99    0.000    0.000    0.001    0.000 load_grammar.py:642(expr)
      590    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
     1881    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      392    0.000    0.000    0.001    0.000 Workbook.py:576(get_cell_from_location)
      198    0.000    0.000    0.013    0.000 grammar_analysis.py:160(<dictcomp>)
     1771    0.000    0.000    0.000    0.000 Cell.py:123(get_value)
      495    0.000    0.000    0.001    0.000 load_grammar.py:613(_make_joined_pattern)
      689    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
     1683    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
       99    0.000    0.000    0.001    0.000 Workbook.py:701(add_children_cells)
       99    0.000    0.000    0.003    0.000 load_grammar.py:375(maybe)
      396    0.000    0.000    0.000    0.000 <frozen codecs>:327(reset)
      198    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
      784    0.000    0.000    0.000    0.000 Graph.py:137(get_parents_from_cell)
     1188    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      792    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
       99    0.000    0.000    0.000    0.000 copy.py:259(_reconstruct)
       99    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
      297    0.000    0.000    0.000    0.000 Sheet.py:99(get_cell_contents)
       99    0.000    0.000    0.000    0.000 reconstruct.py:83(<dictcomp>)
      196    0.000    0.000    0.000    0.000 Graph.py:96(update_child)
      394    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
       99    0.000    0.000    0.000    0.000 load_grammar.py:763(<listcomp>)
       99    0.000    0.000    0.002    0.000 load_grammar.py:443(__init__)
      198    0.000    0.000    0.626    0.003 lark.py:640(parse)
      396    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      199    0.000    0.000    0.000    0.000 Workbook.py:541(get_sheet_name_from_hidden)
      295    0.000    0.000    0.014    0.000 visitors.py:415(visit)
     1083    0.000    0.000    0.000    0.000 Cell.py:126(get_contents)
      198    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
      891    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
      495    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
     1586    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      198    0.000    0.000    0.007    0.000 utils.py:269(classify_bool)
       99    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
       99    0.000    0.000    0.000    0.000 load_grammar.py:235(_name_rule)
      198    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
     1287    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
     1482    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
      198    0.000    0.000    0.000    0.000 visitors.py:163(__mul__)
      198    0.000    0.000    0.000    0.000 visitors.py:263(__mul__)
       99    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
      394    0.000    0.000    0.000    0.000 {method 'normalize' of 'decimal.Decimal' objects}
     1188    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
       99    0.000    0.000    0.000    0.000 load_grammar.py:240(_add_rule)
      198    0.000    0.000    0.000    0.000 common.py:83(__init__)
      198    0.000    0.000    0.000    0.000 load_grammar.py:201(_will_not_get_removed)
      396    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
     1089    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
      495    0.000    0.000    0.000    0.000 {method 'clear' of 'set' objects}
      891    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
      693    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
       99    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
      394    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
       99    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
      198    0.000    0.000    0.000    0.000 load_grammar.py:219(expansion)
      198    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
      495    0.000    0.000    0.000    0.000 earley.py:254(<setcomp>)
      694    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
       99    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
      297    0.000    0.000    0.000    0.000 tree_matcher.py:74(__init__)
      198    0.000    0.000    0.001    0.000 load_grammar.py:222(expansions)
      295    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
      490    0.000    0.000    0.000    0.000 Cell.py:133(get_children)
       99    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
       99    0.000    0.000    0.000    0.000 copyreg.py:104(__newobj__)
      211    0.000    0.000    0.000    0.000 {built-in method builtins.min}
      594    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      491    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
      4/1    0.000    0.000    0.000    0.000 _parser.py:509(_parse)
      396    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
       99    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
      196    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
      295    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
      394    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
      297    0.000    0.000    0.000    0.000 tree_matcher.py:77(lex)
      199    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      4/1    0.000    0.000    0.000    0.000 _parser.py:449(_parse_sub)
       99    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
      396    0.000    0.000    0.000    0.000 <frozen codecs>:276(reset)
      6/1    0.000    0.000    0.000    0.000 _compiler.py:37(_compile)
       99    0.000    0.000    0.000    0.000 Parser.py:377(__init__)
        1    0.000    0.000    0.000    0.000 _compiler.py:571(_code)
       99    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
       99    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
       99    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
       99    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
      8/3    0.000    0.000    0.000    0.000 _parser.py:174(getwidth)
       34    0.000    0.000    0.000    0.000 _parser.py:164(__getitem__)
        1    0.000    0.000    0.000    0.000 _parser.py:972(parse)
        1    0.000    0.000    0.000    0.000 _compiler.py:509(_compile_info)
        1    0.000    0.000    0.000    0.000 _compiler.py:738(compile)
       17    0.000    0.000    0.000    0.000 _parser.py:233(__next)
        2    0.000    0.000    0.000    0.000 enum.py:686(__call__)
        2    0.000    0.000    0.000    0.000 enum.py:1509(__and__)
        2    0.000    0.000    0.000    0.000 _parser.py:94(closegroup)
      2/1    0.000    0.000    0.000    0.000 _compiler.py:434(_get_literal_prefix)
       18    0.000    0.000    0.000    0.000 _parser.py:249(match)
       11    0.000    0.000    0.000    0.000 _parser.py:254(get)
        1    0.000    0.000    0.000    0.000 _compiler.py:241(_optimize_charset)
       11    0.000    0.000    0.000    0.000 _parser.py:286(tell)
       13    0.000    0.000    0.000    0.000 _parser.py:160(__len__)
        1    0.000    0.000    0.000    0.000 _parser.py:224(__init__)
        3    0.000    0.000    0.000    0.000 Cell.py:46(__init__)
        2    0.000    0.000    0.000    0.000 _parser.py:82(opengroup)
        7    0.000    0.000    0.000    0.000 _parser.py:172(append)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        7    0.000    0.000    0.000    0.000 _parser.py:109(__init__)
        2    0.000    0.000    0.000    0.000 enum.py:1091(__new__)
        3    0.000    0.000    0.000    0.000 _compiler.py:396(_simple)
        6    0.000    0.000    0.000    0.000 _parser.py:79(groups)
        1    0.000    0.000    0.000    0.000 _compiler.py:214(_compile_charset)
        1    0.000    0.000    0.000    0.000 _compiler.py:465(_get_charset_prefix)
        6    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
        4    0.000    0.000    0.000    0.000 _compiler.py:31(_combine_flags)
        2    0.000    0.000    0.000    0.000 _compiler.py:568(isstring)
        1    0.000    0.000    0.000    0.000 _parser.py:956(fix_flags)
        1    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
        1    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
        1    0.000    0.000    0.000    0.000 _parser.py:369(_escape)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        3    0.000    0.000    0.000    0.000 _parser.py:168(__setitem__)
        1    0.000    0.000    0.000    0.000 _parser.py:73(__init__)
        3    0.000    0.000    0.000    0.000 _compiler.py:426(_get_iscased)
        1    0.000    0.000    0.000    0.000 _parser.py:288(seek)
        1    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}



##################Running pro_copy_cells2... #######################
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
for test <function pro_copy_cells2 at 0x7fbace661620> total time: 5.544776373000001
Total Logs
         1381615 function calls (1376047 primitive calls) in 0.542 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      990    0.096    0.000    0.356    0.000 earley.py:78(predict_and_complete)
    73557    0.056    0.000    0.092    0.000 earley_common.py:9(__init__)
180177/175401    0.033    0.000    0.043    0.000 {built-in method builtins.hash}
      297    0.031    0.000    0.105    0.000 earley_forest.py:283(visit)
    54252    0.025    0.000    0.038    0.000 utils.py:345(add)
    45783    0.024    0.000    0.045    0.000 grammar.py:18(__eq__)
    97160    0.021    0.000    0.029    0.000 grammar.py:25(__hash__)
    42261    0.015    0.000    0.019    0.000 lexer.py:265(__eq__)
    28512    0.013    0.000    0.021    0.000 utils.py:342(__contains__)
    61974    0.012    0.000    0.012    0.000 earley_common.py:28(__eq__)
   120938    0.012    0.000    0.012    0.000 {built-in method builtins.isinstance}
    10791    0.009    0.000    0.010    0.000 {built-in method fromkeys}
    79281    0.009    0.000    0.009    0.000 grammar.py:121(__hash__)
     2079    0.009    0.000    0.041    0.000 earley.py:135(<listcomp>)
    82269    0.009    0.000    0.009    0.000 earley_common.py:31(__hash__)
     4059    0.007    0.000    0.021    0.000 earley_forest.py:50(__init__)
    91173    0.007    0.000    0.007    0.000 {built-in method builtins.len}
      594    0.007    0.000    0.022    0.000 xearley.py:41(scan)
    83759    0.007    0.000    0.007    0.000 {method 'append' of 'list' objects}
     3960    0.007    0.000    0.028    0.000 earley_forest.py:437(_visit_node_out_helper)
     2079    0.006    0.000    0.012    0.000 earley_forest.py:603(transform_packed_node)
    32884    0.005    0.000    0.005    0.000 {built-in method builtins.next}
    10791    0.004    0.000    0.014    0.000 utils.py:339(__init__)
     3762    0.004    0.000    0.010    0.000 {built-in method builtins.sorted}
    45249    0.004    0.000    0.004    0.000 {built-in method builtins.id}
     4257    0.004    0.000    0.012    0.000 earley_forest.py:64(add_family)
      297    0.004    0.000    0.503    0.002 earley.py:262(parse)
     4257    0.003    0.000    0.006    0.000 earley_forest.py:131(__init__)
    10593    0.003    0.000    0.004    0.000 utils.py:348(__iter__)
     1683    0.003    0.000    0.008    0.000 earley_forest.py:581(transform_symbol_node)
     2079    0.003    0.000    0.008    0.000 earley_forest.py:631(visit_packed_node_in)
     4257    0.003    0.000    0.012    0.000 earley_common.py:25(advance)
     3762    0.003    0.000    0.014    0.000 earley_forest.py:85(children)
     2079    0.002    0.000    0.005    0.000 earley_forest.py:427(visit_packed_node_in)
     2079    0.002    0.000    0.020    0.000 earley_forest.py:638(visit_packed_node_out)
     1881    0.002    0.000    0.011    0.000 earley_forest.py:422(visit_symbol_node_in)
     5940    0.002    0.000    0.003    0.000 {method 'setdefault' of 'dict' objects}
      198    0.002    0.000    0.373    0.002 xearley.py:39(_parse)
     4158    0.002    0.000    0.003    0.000 earley_forest.py:145(sort_key)
     1881    0.002    0.000    0.019    0.000 earley_forest.py:625(visit_symbol_node_in)
     1683    0.002    0.000    0.003    0.000 earley_forest.py:556(_collapse_ambig)
    10345    0.002    0.000    0.002    0.000 {method 'add' of 'set' objects}
    14495    0.002    0.000    0.002    0.000 {built-in method builtins.iter}
5141/4700    0.002    0.000    0.002    0.000 {built-in method builtins.getattr}
     1683    0.002    0.000    0.003    0.000 earley_forest.py:565(_call_rule_func)
    18216    0.002    0.000    0.002    0.000 {method 'pop' of 'collections.deque' objects}
     4459    0.002    0.000    0.002    0.000 {method 'match' of 're.Pattern' objects}
     3762    0.001    0.000    0.003    0.000 parser_frontends.py:184(match)
1206/1202    0.001    0.000    0.006    0.000 visitors.py:111(_call_userfunc)
    17164    0.001    0.000    0.001    0.000 {method 'append' of 'collections.deque' objects}
     2079    0.001    0.000    0.002    0.000 earley_forest.py:155(children)
        1    0.001    0.001    0.542    0.542 Workbook.py:283(transfer_cells)
      198    0.001    0.000    0.247    0.001 Workbook.py:639(recompute_cell_and_parents)
      219    0.001    0.000    0.002    0.000 tree.py:137(iter_subtrees)
      198    0.001    0.000    0.479    0.002 parser_frontends.py:100(parse)
       99    0.001    0.000    0.004    0.000 earley.py:188(scan)
     2079    0.001    0.000    0.017    0.000 earley_forest.py:450(visit_packed_node_out)
     5841    0.001    0.000    0.001    0.000 {method 'remove' of 'set' objects}
      198    0.001    0.000    0.252    0.001 Workbook.py:728(set_cell_contents)
2038/1900    0.001    0.000    0.006    0.000 visitors.py:143(_transform_children)
     3762    0.001    0.000    0.001    0.000 utils.py:357(__len__)
     1881    0.001    0.000    0.002    0.000 earley_forest.py:70(load_paths)
      300    0.001    0.000    0.001    0.000 utils.py:179(convert_location_to_idx)
     1881    0.001    0.000    0.001    0.000 earley_forest.py:499(__init__)
        1    0.001    0.001    0.002    0.002 grammar_analysis.py:78(calculate_sets)
     4158    0.001    0.000    0.001    0.000 earley_forest.py:141(is_empty)
       40    0.001    0.000    0.002    0.000 visitors.py:293(transform)
      164    0.001    0.000    0.008    0.000 visitors.py:278(transform)
     1683    0.001    0.000    0.012    0.000 earley_forest.py:444(visit_symbol_node_out)
      891    0.001    0.000    0.001    0.000 lexer.py:213(_future_new)
      297    0.001    0.000    0.003    0.000 earley.py:284(<listcomp>)
      198    0.001    0.000    0.003    0.000 Sheet.py:60(set_cell_contents)
       99    0.001    0.000    0.012    0.000 earley.py:171(_parse)
      496    0.001    0.000    0.001    0.000 utils.py:194(convert_idx_to_location)
      891    0.001    0.000    0.002    0.000 lexer.py:202(__new__)
      594    0.001    0.000    0.001    0.000 tree_matcher.py:48(_match)
      693    0.001    0.000    0.001    0.000 Sheet.py:93(get_cell_value)
     3960    0.001    0.000    0.001    0.000 earley_forest.py:548(_check_cycle)
     1683    0.001    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
     2079    0.001    0.000    0.001    0.000 earley_forest.py:158(<listcomp>)
     4443    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
     3762    0.001    0.000    0.001    0.000 earley_forest.py:101(__hash__)
      297    0.001    0.000    0.105    0.000 earley_forest.py:535(visit)
      796    0.001    0.000    0.001    0.000 __init__.py:272(_compile)
     4257    0.001    0.000    0.001    0.000 earley_forest.py:169(__hash__)
      495    0.001    0.000    0.001    0.000 earley_forest.py:432(visit_token_node)
      297    0.001    0.000    0.106    0.000 earley_forest.py:397(transform)
       99    0.001    0.000    0.029    0.000 tree_matcher.py:148(match_tree)
      297    0.001    0.000    0.001    0.000 earley_forest.py:523(__init__)
     1386    0.001    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
      954    0.001    0.000    0.001    0.000 tree.py:147(<listcomp>)
       99    0.000    0.000    0.243    0.002 Workbook.py:545(get_formula_value)
      697    0.000    0.000    0.002    0.000 __init__.py:163(match)
      297    0.000    0.000    0.001    0.000 Cell.py:81(set_cell_value)
       99    0.000    0.000    0.001    0.000 reconstruct.py:33(__default__)
      693    0.000    0.000    0.001    0.000 earley_forest.py:193(__init__)
      198    0.000    0.000    0.001    0.000 parser_frontends.py:96(_make_lexer_thread)
     1685    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      297    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
      198    0.000    0.000    0.001    0.000 {built-in method builtins.print}
      598    0.000    0.000    0.002    0.000 utils.py:131(check_valid_cell_location)
      725    0.000    0.000    0.000    0.000 visitors.py:171(__default__)
      803    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
       99    0.000    0.000    0.002    0.000 Parser.py:388(CELLREF_NO_ABS)
      198    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
      792    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
     2282    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
       99    0.000    0.000    0.001    0.000 Parser.py:253(cell)
      291    0.000    0.000    0.002    0.000 visitors.py:130(_call_userfunc_token)
      198    0.000    0.000    0.252    0.001 Workbook.py:36(run_func)
     1219    0.000    0.000    0.000    0.000 tree.py:61(__init__)
      198    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
  157/111    0.000    0.000    0.003    0.000 visitors.py:155(_transform_tree)
      892    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
     1085    0.000    0.000    0.000    0.000 tree.py:66(meta)
     1684    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
        1    0.000    0.000    0.010    0.010 load_grammar.py:690(compile)
       99    0.000    0.000    0.001    0.000 Parser.py:381(cell)
      396    0.000    0.000    0.000    0.000 <frozen codecs>:327(reset)
      690    0.000    0.000    0.004    0.000 visitors.py:275(_transform_tree)
       99    0.000    0.000    0.000    0.000 earley.py:245(<setcomp>)
      198    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
       99    0.000    0.000    0.032    0.000 reconstruct.py:96(reconstruct)
      201    0.000    0.000    0.000    0.000 tree.py:179(expand_kids_by_data)
       99    0.000    0.000    0.000    0.000 Workbook.py:688(_get_sheet_name_location)
       99    0.000    0.000    0.000    0.000 tree_matcher.py:21(__call__)
      693    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
      198    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
       99    0.000    0.000    0.001    0.000 Workbook.py:912(get_cell_value)
      198    0.000    0.000    0.001    0.000 Workbook.py:884(get_cell_contents)
       28    0.000    0.000    0.001    0.000 tree_matcher.py:106(_build_recons_rules)
      198    0.000    0.000    0.032    0.000 reconstruct.py:85(_reconstruct)
      742    0.000    0.000    0.000    0.000 grammar.py:42(__init__)
       63    0.000    0.000    0.000    0.000 functools.py:35(update_wrapper)
      101    0.000    0.000    0.001    0.000 grammar_analysis.py:187(_expand_rule)
      198    0.000    0.000    0.001    0.000 Cell.py:46(__init__)
      198    0.000    0.000    0.000    0.000 Workbook.py:541(get_sheet_name_from_hidden)
       99    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
      382    0.000    0.000    0.000    0.000 grammar_analysis.py:70(update_set)
      198    0.000    0.000    0.480    0.002 lark.py:640(parse)
      198    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
       99    0.000    0.000    0.001    0.000 Workbook.py:701(add_children_cells)
      396    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
       41    0.000    0.000    0.000    0.000 ast.py:54(literal_eval)
      895    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      396    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
       41    0.000    0.000    0.001    0.000 load_grammar.py:566(_literal_to_pattern)
      594    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
   105/45    0.000    0.000    0.001    0.000 load_grammar.py:389(expansion)
      693    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
      198    0.000    0.000    0.000    0.000 Sheet.py:99(get_cell_contents)
       99    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
       99    0.000    0.000    0.002    0.000 visitors.py:421(_visit_tree)
       99    0.000    0.000    0.001    0.000 Sheet.py:104(set_cell_value)
       86    0.000    0.000    0.000    0.000 grammar.py:103(__init__)
       99    0.000    0.000    0.002    0.000 visitors.py:444(inner)
      198    0.000    0.000    0.001    0.000 earley_forest.py:447(visit_intermediate_node_out)
      198    0.000    0.000    0.000    0.000 Workbook.py:715(clean_children_cells)
       41    0.000    0.000    0.000    0.000 {built-in method builtins.compile}
       99    0.000    0.000    0.000    0.000 tree_matcher.py:65(parse_rulename)
      200    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
       41    0.000    0.000    0.000    0.000 load_grammar.py:540(eval_escaping)
   146/84    0.000    0.000    0.001    0.000 visitors.py:342(_call_userfunc)
      198    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
       99    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
       99    0.000    0.000    0.002    0.000 Parser.py:40(fix_formula)
       99    0.000    0.000    0.000    0.000 __init__.py:178(sub)
      198    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
       49    0.000    0.000    0.000    0.000 tree_matcher.py:57(make_recons_rule)
       11    0.000    0.000    0.000    0.000 load_grammar.py:450(pattern)
       63    0.000    0.000    0.001    0.000 utils.py:275(bfs)
      172    0.000    0.000    0.000    0.000 grammar_analysis.py:17(__init__)
       35    0.000    0.000    0.000    0.000 tree_matcher.py:121(<listcomp>)
      355    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      297    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
       99    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
        1    0.000    0.000    0.011    0.011 tree_matcher.py:89(__init__)
      155    0.000    0.000    0.000    0.000 load_grammar.py:384(_flatten)
      496    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
      495    0.000    0.000    0.000    0.000 Cell.py:123(get_value)
       99    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
      120    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
       99    0.000    0.000    0.002    0.000 visitors.py:415(visit)
      396    0.000    0.000    0.000    0.000 Cell.py:126(get_contents)
       99    0.000    0.000    0.000    0.000 reconstruct.py:15(is_iter_empty)
    40/11    0.000    0.000    0.001    0.000 visitors.py:362(visit)
      594    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
      600    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       63    0.000    0.000    0.000    0.000 visitors.py:481(__get__)
      495    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      111    0.000    0.000    0.004    0.000 visitors.py:159(transform)
       35    0.000    0.000    0.000    0.000 load_grammar.py:420(expansions)
  139/129    0.000    0.000    0.000    0.000 tree.py:134(__hash__)
      168    0.000    0.000    0.000    0.000 tree_matcher.py:12(is_discarded_terminal)
       99    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
      437    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        2    0.000    0.000    0.000    0.000 utils.py:23(classify)
        2    0.000    0.000    0.000    0.000 tree_matcher.py:28(_best_from_group)
      120    0.000    0.000    0.000    0.000 <frozen abc>:117(__instancecheck__)
      496    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
      396    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
       99    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
       63    0.000    0.000    0.001    0.000 visitors.py:478(__call__)
       63    0.000    0.000    0.000    0.000 visitors.py:470(__init__)
      396    0.000    0.000    0.000    0.000 <frozen codecs>:276(reset)
        1    0.000    0.000    0.003    0.003 earley.py:32(__init__)
      396    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      172    0.000    0.000    0.000    0.000 grammar_analysis.py:45(__hash__)
    15/13    0.000    0.000    0.001    0.000 load_grammar.py:405(<listcomp>)
       99    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
       63    0.000    0.000    0.001    0.000 visitors.py:500(_vargs_inline)
      315    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
       99    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
       99    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
       25    0.000    0.000    0.005    0.000 visitors.py:258(transform)
       99    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
       41    0.000    0.000    0.001    0.000 load_grammar.py:601(literal)
       13    0.000    0.000    0.001    0.000 grammar_analysis.py:180(expand_rule)
      219    0.000    0.000    0.000    0.000 {method 'values' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.542    0.542 Workbook.py:422(copy_cells)
        1    0.000    0.000    0.002    0.002 grammar_analysis.py:141(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:793(<setcomp>)
       54    0.000    0.000    0.000    0.000 lexer.py:50(__hash__)
      123    0.000    0.000    0.000    0.000 load_grammar.py:537(<genexpr>)
       14    0.000    0.000    0.000    0.000 tree_matcher.py:61(make_recons_rule_to_term)
       99    0.000    0.000    0.000    0.000 {method 'groups' of 're.Match' objects}
       99    0.000    0.000    0.000    0.000 {method 'clear' of 'set' objects}
       41    0.000    0.000    0.000    0.000 load_grammar.py:536(_rfind)
      105    0.000    0.000    0.000    0.000 load_grammar.py:759(<genexpr>)
      170    0.000    0.000    0.000    0.000 grammar_analysis.py:28(next)
       99    0.000    0.000    0.000    0.000 Parser.py:377(__init__)
      198    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
       53    0.000    0.000    0.000    0.000 grammar.py:69(__init__)
       45    0.000    0.000    0.000    0.000 {built-in method builtins.max}
       41    0.000    0.000    0.000    0.000 ast.py:33(parse)
       99    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
        1    0.000    0.000    0.001    0.001 load_grammar.py:693(<listcomp>)
      110    0.000    0.000    0.000    0.000 tree.py:32(__init__)
       99    0.000    0.000    0.000    0.000 earley.py:254(<setcomp>)
      192    0.000    0.000    0.000    0.000 visitors.py:178(__default_token__)
       99    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
       99    0.000    0.000    0.000    0.000 tree_matcher.py:74(__init__)
       47    0.000    0.000    0.000    0.000 lexer.py:41(__init__)
       15    0.000    0.000    0.000    0.000 utils.py:190(<listcomp>)
       25    0.000    0.000    0.001    0.000 load_grammar.py:674(nr_deepcopy_tree)
       49    0.000    0.000    0.000    0.000 tree_matcher.py:17(__init__)
       35    0.000    0.000    0.000    0.000 load_grammar.py:798(<lambda>)
        1    0.000    0.000    0.002    0.002 load_grammar.py:710(<listcomp>)
       99    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
       99    0.000    0.000    0.000    0.000 tree_matcher.py:77(lex)
       20    0.000    0.000    0.000    0.000 load_grammar.py:631(expansions)
       15    0.000    0.000    0.000    0.000 lexer.py:53(__eq__)
       11    0.000    0.000    0.000    0.000 earley.py:58(<listcomp>)
       50    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
       46    0.000    0.000    0.000    0.000 load_grammar.py:668(value)
        1    0.000    0.000    0.000    0.000 load_grammar.py:806(<setcomp>)
       99    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
        2    0.000    0.000    0.000    0.000 utils.py:271(<listcomp>)
      113    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
       82    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
        7    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
       20    0.000    0.000    0.000    0.000 load_grammar.py:637(<lambda>)
       41    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        4    0.000    0.000    0.000    0.000 grammar.py:124(__eq__)
       65    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 tree_matcher.py:115(<setcomp>)
       10    0.000    0.000    0.000    0.000 load_grammar.py:346(expr)
       21    0.000    0.000    0.000    0.000 lexer.py:125(__init__)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:108(<setcomp>)
       41    0.000    0.000    0.000    0.000 ast.py:84(_convert)
       35    0.000    0.000    0.000    0.000 load_grammar.py:621(expansion)
       35    0.000    0.000    0.000    0.000 grammar.py:22(__ne__)
       20    0.000    0.000    0.000    0.000 lexer.py:81(to_regexp)
        1    0.000    0.000    0.001    0.001 load_grammar.py:694(<listcomp>)
      116    0.000    0.000    0.000    0.000 tree.py:175(<lambda>)
       15    0.000    0.000    0.000    0.000 utils.py:184(dedup_list)
        1    0.000    0.000    0.000    0.000 earley.py:52(<setcomp>)
       20    0.000    0.000    0.000    0.000 __init__.py:253(escape)
       15    0.000    0.000    0.000    0.000 tree.py:169(find_pred)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:82(<setcomp>)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:116(<setcomp>)
       20    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
       33    0.000    0.000    0.000    0.000 tree_matcher.py:44(<lambda>)
        1    0.000    0.000    0.000    0.000 copy.py:66(copy)
       25    0.000    0.000    0.000    0.000 load_grammar.py:639(<genexpr>)
        1    0.000    0.000    0.000    0.000 earley.py:53(<setcomp>)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:178(<dictcomp>)
        1    0.000    0.000    0.011    0.011 reconstruct.py:80(__init__)
        2    0.000    0.000    0.000    0.000 tree_matcher.py:42(_best_rules_from_group)
       65    0.000    0.000    0.000    0.000 typing.py:2256(cast)
       49    0.000    0.000    0.000    0.000 load_grammar.py:572(<genexpr>)
       35    0.000    0.000    0.000    0.000 {built-in method builtins.any}
       21    0.000    0.000    0.000    0.000 lexer.py:70(_get_flags)
       30    0.000    0.000    0.000    0.000 visitors.py:108(__init__)
       30    0.000    0.000    0.000    0.000 load_grammar.py:617(pattern)
       15    0.000    0.000    0.000    0.000 tree.py:173(find_data)
        4    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
       35    0.000    0.000    0.000    0.000 load_grammar.py:431(expansion)
       21    0.000    0.000    0.000    0.000 load_grammar.py:809(<lambda>)
       13    0.000    0.000    0.000    0.000 typing.py:352(inner)
        1    0.000    0.000    0.000    0.000 load_grammar.py:446(<dictcomp>)
        6    0.000    0.000    0.000    0.000 load_grammar.py:411(alias)
       30    0.000    0.000    0.000    0.000 load_grammar.py:663(value)
        1    0.000    0.000    0.000    0.000 copyreg.py:104(__newobj__)
       50    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
       20    0.000    0.000    0.000    0.000 lexer.py:88(max_width)
        1    0.000    0.000    0.000    0.000 load_grammar.py:246(_add_recurse_rule)
        1    0.000    0.000    0.000    0.000 copy.py:259(_reconstruct)
       20    0.000    0.000    0.000    0.000 lexer.py:84(min_width)
        1    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
       34    0.000    0.000    0.000    0.000 grammar_analysis.py:149(<lambda>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:642(expr)
        5    0.000    0.000    0.000    0.000 load_grammar.py:640(<setcomp>)
       34    0.000    0.000    0.000    0.000 grammar_analysis.py:172(<lambda>)
        9    0.000    0.000    0.000    0.000 load_grammar.py:210(_args_as_int)
        1    0.000    0.000    0.000    0.000 load_grammar.py:375(maybe)
        1    0.000    0.000    0.000    0.000 load_grammar.py:443(__init__)
        1    0.000    0.000    0.000    0.000 reconstruct.py:83(<dictcomp>)
        5    0.000    0.000    0.000    0.000 load_grammar.py:613(_make_joined_pattern)
        2    0.000    0.000    0.000    0.000 load_grammar.py:219(expansion)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:175(<dictcomp>)
        8    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
        1    0.000    0.000    0.000    0.000 load_grammar.py:763(<listcomp>)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:145(<dictcomp>)
        2    0.000    0.000    0.000    0.000 utils.py:269(classify_bool)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:60(__init__)
        2    0.000    0.000    0.000    0.000 load_grammar.py:201(_will_not_get_removed)
        2    0.000    0.000    0.000    0.000 visitors.py:163(__mul__)
        2    0.000    0.000    0.000    0.000 visitors.py:263(__mul__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:235(_name_rule)
       11    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
        4    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:166(<dictcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:240(_add_rule)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:163(<dictcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:160(<dictcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        1    0.000    0.000    0.000    0.000 common.py:83(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
        1    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        2    0.000    0.000    0.000    0.000 load_grammar.py:222(expansions)
        1    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
        1    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
        4    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        4    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
        1    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)



##################Running pro_move_cells... #######################
=A1*B1
A1*B1
for test <function pro_move_cells at 0x7fbace661760> total time: 10.217748150999999
Total Logs
         2532575 function calls (2411719 primitive calls) in 1.073 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
100813/100413    0.094    0.000    0.363    0.000 visitors.py:111(_call_userfunc)
    12003    0.081    0.000    0.152    0.000 tree.py:137(iter_subtrees)
     4000    0.077    0.000    0.181    0.000 visitors.py:293(transform)
164230/150426    0.065    0.000    0.377    0.000 visitors.py:143(_transform_children)
197403/153303    0.059    0.000    0.093    0.000 {built-in method builtins.getattr}
     6503    0.049    0.000    0.525    0.000 visitors.py:278(transform)
   524109    0.048    0.000    0.049    0.000 {built-in method builtins.isinstance}
    85510    0.046    0.000    0.063    0.000 tree.py:147(<listcomp>)
    72501    0.028    0.000    0.042    0.000 visitors.py:171(__default__)
      100    0.023    0.000    0.963    0.010 load_grammar.py:690(compile)
    20100    0.022    0.000    0.027    0.000 tree.py:179(expand_kids_by_data)
     4100    0.020    0.000    0.020    0.000 {built-in method builtins.compile}
100381/58775    0.019    0.000    0.029    0.000 {built-in method builtins.hash}
    59110    0.018    0.000    0.292    0.000 visitors.py:275(_transform_tree)
     6300    0.017    0.000    0.029    0.000 functools.py:35(update_wrapper)
    82319    0.016    0.000    0.016    0.000 tree.py:61(__init__)
    71151    0.016    0.000    0.022    0.000 grammar.py:25(__hash__)
     4100    0.015    0.000    0.080    0.000 load_grammar.py:566(_literal_to_pattern)
    29274    0.014    0.000    0.025    0.000 grammar.py:18(__eq__)
   159905    0.013    0.000    0.013    0.000 {built-in method builtins.id}
10500/4500    0.012    0.000    0.078    0.000 load_grammar.py:389(expansion)
    78827    0.012    0.000    0.012    0.000 tree.py:66(meta)
     2800    0.011    0.000    0.058    0.000 tree_matcher.py:106(_build_recons_rules)
     4100    0.011    0.000    0.049    0.000 load_grammar.py:540(eval_escaping)
14600/8400    0.010    0.000    0.113    0.000 visitors.py:342(_call_userfunc)
   108748    0.009    0.000    0.009    0.000 {method 'append' of 'list' objects}
     4100    0.009    0.000    0.036    0.000 ast.py:54(literal_eval)
    89008    0.008    0.000    0.008    0.000 {built-in method builtins.len}
    15500    0.007    0.000    0.035    0.000 load_grammar.py:384(_flatten)
4000/1100    0.007    0.000    0.133    0.000 visitors.py:362(visit)
     9308    0.007    0.000    0.012    0.000 visitors.py:130(_call_userfunc_token)
     8404    0.007    0.000    0.020    0.000 grammar.py:103(__init__)
    17556    0.007    0.000    0.009    0.000 lexer.py:265(__eq__)
5803/1201    0.007    0.000    0.027    0.000 visitors.py:155(_transform_tree)
     3500    0.006    0.000    0.028    0.000 load_grammar.py:420(expansions)
     6300    0.006    0.000    0.040    0.000 visitors.py:481(__get__)
13902/12902    0.006    0.000    0.018    0.000 tree.py:134(__hash__)
     3500    0.005    0.000    0.012    0.000 tree_matcher.py:121(<listcomp>)
     1100    0.005    0.000    0.010    0.000 load_grammar.py:450(pattern)
    49586    0.005    0.000    0.005    0.000 {method 'pop' of 'list' objects}
     4900    0.005    0.000    0.017    0.000 tree_matcher.py:57(make_recons_rule)
     6300    0.005    0.000    0.034    0.000 visitors.py:470(__init__)
     2500    0.004    0.000    0.536    0.000 visitors.py:258(transform)
1500/1300    0.004    0.000    0.053    0.000 load_grammar.py:405(<listcomp>)
      100    0.004    0.000    1.031    0.010 tree_matcher.py:89(__init__)
     6300    0.004    0.000    0.109    0.000 visitors.py:500(_vargs_inline)
     4100    0.004    0.000    0.085    0.000 load_grammar.py:601(literal)
    31500    0.004    0.000    0.004    0.000 {built-in method builtins.setattr}
     6300    0.004    0.000    0.105    0.000 visitors.py:478(__call__)
    12300    0.004    0.000    0.005    0.000 load_grammar.py:537(<genexpr>)
     4500    0.003    0.000    0.009    0.000 {built-in method builtins.max}
      100    0.003    0.000    0.009    0.000 load_grammar.py:793(<setcomp>)
    10500    0.003    0.000    0.006    0.000 load_grammar.py:759(<genexpr>)
     4100    0.003    0.000    0.024    0.000 ast.py:33(parse)
     4100    0.002    0.000    0.011    0.000 load_grammar.py:536(_rfind)
      102    0.002    0.000    0.004    0.000 tree_matcher.py:28(_best_from_group)
     4700    0.002    0.000    0.002    0.000 lexer.py:41(__init__)
     2500    0.002    0.000    0.117    0.000 load_grammar.py:674(nr_deepcopy_tree)
      600    0.002    0.000    0.003    0.000 Graph.py:330(tarjans)
      600    0.002    0.000    0.021    0.000 Workbook.py:728(set_cell_contents)
     5400    0.002    0.000    0.003    0.000 lexer.py:50(__hash__)
     1500    0.002    0.000    0.009    0.000 utils.py:190(<listcomp>)
      600    0.002    0.000    0.012    0.000 Workbook.py:639(recompute_cell_and_parents)
        2    0.002    0.001    0.004    0.002 grammar_analysis.py:78(calculate_sets)
      100    0.002    0.000    1.073    0.011 Workbook.py:283(transfer_cells)
      902    0.002    0.000    0.003    0.000 utils.py:179(convert_location_to_idx)
     2000    0.002    0.000    0.013    0.000 load_grammar.py:631(expansions)
     4600    0.002    0.000    0.002    0.000 load_grammar.py:668(value)
      100    0.002    0.000    0.241    0.002 load_grammar.py:710(<listcomp>)
     3500    0.002    0.000    0.006    0.000 load_grammar.py:798(<lambda>)
     2000    0.002    0.000    0.003    0.000 load_grammar.py:637(<lambda>)
     8200    0.002    0.000    0.002    0.000 {method 'rfind' of 'str' objects}
    11300    0.002    0.000    0.002    0.000 {method 'replace' of 'str' objects}
     4100    0.002    0.000    0.002    0.000 {built-in method builtins.all}
      100    0.002    0.000    1.074    0.011 Workbook.py:370(move_cells)
       22    0.002    0.000    0.006    0.000 earley.py:78(predict_and_complete)
    12003    0.002    0.000    0.002    0.000 {method 'values' of 'collections.OrderedDict' objects}
      100    0.001    0.000    0.002    0.000 load_grammar.py:806(<setcomp>)
     4627    0.001    0.000    0.004    0.000 {method 'add' of 'set' objects}
     5104    0.001    0.000    0.001    0.000 grammar.py:69(__init__)
     2000    0.001    0.000    0.004    0.000 lexer.py:81(to_regexp)
      200    0.001    0.000    0.008    0.000 utils.py:271(<listcomp>)
     3500    0.001    0.000    0.002    0.000 load_grammar.py:621(expansion)
      602    0.001    0.000    0.005    0.000 {method 'sort' of 'list' objects}
     4100    0.001    0.000    0.002    0.000 ast.py:84(_convert)
      100    0.001    0.000    0.005    0.000 tree_matcher.py:115(<setcomp>)
    11600    0.001    0.000    0.001    0.000 tree.py:175(<lambda>)
     2311    0.001    0.000    0.006    0.000 {method 'join' of 'str' objects}
     6402    0.001    0.000    0.001    0.000 {method 'update' of 'dict' objects}
     6910    0.001    0.000    0.001    0.000 tree_matcher.py:12(is_discarded_terminal)
      100    0.001    0.000    0.003    0.000 tree_matcher.py:108(<setcomp>)
     1400    0.001    0.000    0.006    0.000 tree_matcher.py:61(make_recons_rule_to_term)
     1000    0.001    0.000    0.003    0.000 load_grammar.py:346(expr)
     2100    0.001    0.000    0.003    0.000 lexer.py:125(__init__)
     2000    0.001    0.000    0.002    0.000 __init__.py:253(escape)
    10537    0.001    0.000    0.001    0.000 grammar.py:121(__hash__)
      702    0.001    0.000    0.001    0.000 utils.py:194(convert_idx_to_location)
     4818    0.001    0.000    0.001    0.000 grammar.py:42(__init__)
     3500    0.001    0.000    0.004    0.000 grammar.py:22(__ne__)
     1500    0.001    0.000    0.010    0.000 utils.py:184(dedup_list)
     9306    0.001    0.000    0.001    0.000 visitors.py:178(__default_token__)
     5415    0.001    0.000    0.001    0.000 grammar.py:15(__init__)
     2000    0.001    0.000    0.001    0.000 {method 'translate' of 'str' objects}
     5000    0.001    0.000    0.001    0.000 {method 'startswith' of 'str' objects}
     4900    0.001    0.000    0.001    0.000 tree_matcher.py:17(__init__)
     1500    0.001    0.000    0.019    0.000 tree.py:169(find_pred)
     1334    0.001    0.000    0.003    0.000 __init__.py:163(match)
     2500    0.001    0.000    0.005    0.000 load_grammar.py:639(<genexpr>)
      985    0.001    0.000    0.001    0.000 earley_common.py:9(__init__)
      100    0.001    0.000    0.057    0.001 load_grammar.py:693(<listcomp>)
     1344    0.001    0.000    0.001    0.000 __init__.py:272(_compile)
     1220    0.001    0.000    0.001    0.000 Sheet.py:93(get_cell_value)
     4900    0.001    0.000    0.001    0.000 load_grammar.py:572(<genexpr>)
      100    0.001    0.000    0.002    0.000 tree_matcher.py:116(<setcomp>)
      600    0.001    0.000    0.003    0.000 Sheet.py:60(set_cell_contents)
        5    0.001    0.000    0.002    0.000 earley_forest.py:283(visit)
     1426    0.001    0.000    0.001    0.000 {method 'match' of 're.Pattern' objects}
     6500    0.001    0.000    0.001    0.000 typing.py:2256(cast)
     2100    0.001    0.000    0.001    0.000 lexer.py:70(_get_flags)
     1312    0.001    0.000    0.003    0.000 utils.py:131(check_valid_cell_location)
     1500    0.001    0.000    0.020    0.000 tree.py:173(find_data)
     3000    0.001    0.000    0.001    0.000 load_grammar.py:617(pattern)
      600    0.001    0.000    0.022    0.000 Workbook.py:36(run_func)
     2106    0.001    0.000    0.001    0.000 <frozen abc>:117(__instancecheck__)
     1500    0.001    0.000    0.001    0.000 lexer.py:53(__eq__)
     1731    0.001    0.000    0.001    0.000 utils.py:78(get_hidden_name)
     4423    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
     2106    0.001    0.000    0.001    0.000 {built-in method _abc._abc_instancecheck}
     3500    0.001    0.000    0.001    0.000 {built-in method builtins.any}
     3000    0.001    0.000    0.001    0.000 visitors.py:108(__init__)
     1602    0.001    0.000    0.001    0.000 Sheet.py:120(get_cell)
     3500    0.001    0.000    0.001    0.000 load_grammar.py:431(expansion)
     4106    0.001    0.000    0.001    0.000 {method 'lstrip' of 'str' objects}
     2000    0.001    0.000    0.001    0.000 lexer.py:88(max_width)
      100    0.001    0.000    0.001    0.000 load_grammar.py:446(<dictcomp>)
     4397    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
      100    0.001    0.000    0.061    0.001 load_grammar.py:694(<listcomp>)
     3332    0.001    0.000    0.001    0.000 {method 'get' of 'dict' objects}
     1201    0.001    0.000    0.028    0.000 visitors.py:159(transform)
     2509    0.001    0.000    0.001    0.000 tree_matcher.py:44(<lambda>)
      100    0.001    0.000    1.032    0.010 reconstruct.py:80(__init__)
     2000    0.001    0.000    0.001    0.000 lexer.py:84(min_width)
     3000    0.000    0.000    0.000    0.000 load_grammar.py:663(value)
      100    0.000    0.000    0.001    0.000 copy.py:66(copy)
      300    0.000    0.000    0.002    0.000 Workbook.py:884(get_cell_contents)
      600    0.000    0.000    0.001    0.000 load_grammar.py:411(alias)
      100    0.000    0.000    0.002    0.000 load_grammar.py:246(_add_recurse_rule)
      402    0.000    0.000    0.002    0.000 Workbook.py:583(recompute_cell_value)
     2100    0.000    0.000    0.000    0.000 load_grammar.py:809(<lambda>)
      814    0.000    0.000    0.001    0.000 utils.py:345(add)
      500    0.000    0.000    0.000    0.000 load_grammar.py:640(<setcomp>)
      202    0.000    0.000    0.001    0.000 grammar_analysis.py:187(_expand_rule)
      900    0.000    0.000    0.001    0.000 load_grammar.py:210(_args_as_int)
      400    0.000    0.000    0.001    0.000 grammar.py:124(__eq__)
      600    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
      402    0.000    0.000    0.001    0.000 Workbook.py:576(get_cell_from_location)
      100    0.000    0.000    0.001    0.000 load_grammar.py:642(expr)
      600    0.000    0.000    0.001    0.000 Workbook.py:715(clean_children_cells)
      649    0.000    0.000    0.000    0.000 grammar_analysis.py:70(update_set)
     2300    0.000    0.000    0.000    0.000 {built-in method builtins.next}
      500    0.000    0.000    0.001    0.000 load_grammar.py:613(_make_joined_pattern)
      800    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
      804    0.000    0.000    0.000    0.000 Graph.py:137(get_parents_from_cell)
      100    0.000    0.000    0.003    0.000 load_grammar.py:375(maybe)
      100    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
     1606    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      100    0.000    0.000    0.000    0.000 reconstruct.py:83(<dictcomp>)
      100    0.000    0.000    0.000    0.000 copy.py:259(_reconstruct)
       87    0.000    0.000    0.000    0.000 earley_forest.py:50(__init__)
     1111    0.000    0.000    0.000    0.000 tree.py:32(__init__)
       46    0.000    0.000    0.001    0.000 earley.py:135(<listcomp>)
      100    0.000    0.000    0.001    0.000 load_grammar.py:763(<listcomp>)
     1804    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      125    0.000    0.000    0.001    0.000 utils.py:275(bfs)
       12    0.000    0.000    0.001    0.000 xearley.py:41(scan)
      102    0.000    0.000    0.006    0.000 tree_matcher.py:42(_best_rules_from_group)
      100    0.000    0.000    0.002    0.000 load_grammar.py:443(__init__)
      346    0.000    0.000    0.000    0.000 grammar_analysis.py:17(__init__)
      341    0.000    0.000    0.000    0.000 utils.py:342(__contains__)
      100    0.000    0.000    0.000    0.000 load_grammar.py:235(_name_rule)
      100    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
      200    0.000    0.000    0.008    0.000 utils.py:269(classify_bool)
      100    0.000    0.000    0.000    0.000 load_grammar.py:240(_add_rule)
      747    0.000    0.000    0.000    0.000 earley_common.py:28(__eq__)
      200    0.000    0.000    0.000    0.000 visitors.py:263(__mul__)
      200    0.000    0.000    0.000    0.000 load_grammar.py:201(_will_not_get_removed)
       80    0.000    0.000    0.001    0.000 earley_forest.py:437(_visit_node_out_helper)
      100    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
       40    0.000    0.000    0.000    0.000 earley_forest.py:603(transform_packed_node)
      300    0.000    0.000    0.000    0.000 Sheet.py:99(get_cell_contents)
      400    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
     1100    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
     1178    0.000    0.000    0.000    0.000 earley_common.py:31(__hash__)
      200    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
      702    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
      200    0.000    0.000    0.001    0.000 load_grammar.py:219(expansion)
      200    0.000    0.000    0.000    0.000 visitors.py:163(__mul__)
        4    0.000    0.000    0.000    0.000 utils.py:23(classify)
      100    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
       89    0.000    0.000    0.000    0.000 earley_forest.py:64(add_family)
      235    0.000    0.000    0.000    0.000 utils.py:339(__init__)
       80    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
      200    0.000    0.000    0.001    0.000 load_grammar.py:222(expansions)
      346    0.000    0.000    0.000    0.000 grammar_analysis.py:45(__hash__)
      100    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
      604    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
        2    0.000    0.000    0.007    0.003 earley.py:32(__init__)
      202    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      702    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
       89    0.000    0.000    0.000    0.000 earley_forest.py:131(__init__)
        5    0.000    0.000    0.010    0.002 earley.py:262(parse)
      100    0.000    0.000    0.000    0.000 copyreg.py:104(__newobj__)
      235    0.000    0.000    0.000    0.000 {built-in method fromkeys}
      235    0.000    0.000    0.000    0.000 utils.py:348(__iter__)
        2    0.000    0.000    0.005    0.003 grammar_analysis.py:141(__init__)
       89    0.000    0.000    0.000    0.000 earley_common.py:25(advance)
       25    0.000    0.000    0.002    0.000 grammar_analysis.py:180(expand_rule)
      200    0.000    0.000    0.000    0.000 {built-in method builtins.min}
      400    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
       80    0.000    0.000    0.000    0.000 earley_forest.py:85(children)
      100    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
       32    0.000    0.000    0.000    0.000 earley_forest.py:581(transform_symbol_node)
       40    0.000    0.000    0.000    0.000 earley_forest.py:631(visit_packed_node_in)
      342    0.000    0.000    0.000    0.000 grammar_analysis.py:28(next)
      100    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
      127    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
       40    0.000    0.000    0.000    0.000 earley_forest.py:427(visit_packed_node_in)
       40    0.000    0.000    0.000    0.000 earley_forest.py:422(visit_symbol_node_in)
        5    0.000    0.000    0.000    0.000 earley.py:188(scan)
        3    0.000    0.000    0.008    0.003 tree_matcher.py:148(match_tree)
      100    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
       40    0.000    0.000    0.000    0.000 earley_forest.py:638(visit_packed_node_out)
      118    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
       40    0.000    0.000    0.000    0.000 earley_forest.py:625(visit_symbol_node_in)
       10    0.000    0.000    0.000    0.000 reconstruct.py:33(__default__)
       80    0.000    0.000    0.000    0.000 earley_forest.py:145(sort_key)
        2    0.000    0.000    0.006    0.003 xearley.py:39(_parse)
       92    0.000    0.000    0.000    0.000 parser_frontends.py:184(match)
       32    0.000    0.000    0.000    0.000 earley_forest.py:565(_call_rule_func)
       32    0.000    0.000    0.000    0.000 earley_forest.py:556(_collapse_ambig)
      362    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.deque' objects}
      409    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
       32    0.000    0.000    0.000    0.000 tree_matcher.py:48(_match)
     15/5    0.000    0.000    0.000    0.000 visitors.py:444(inner)
       21    0.000    0.000    0.000    0.000 earley.py:58(<listcomp>)
       10    0.000    0.000    0.000    0.000 Parser.py:253(cell)
        3    0.000    0.000    0.001    0.000 earley.py:171(_parse)
       40    0.000    0.000    0.000    0.000 earley_forest.py:155(children)
      132    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      100    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        5    0.000    0.000    0.005    0.001 Workbook.py:545(get_formula_value)
      100    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
       80    0.000    0.000    0.000    0.000 utils.py:357(__len__)
       40    0.000    0.000    0.000    0.000 earley_forest.py:499(__init__)
       40    0.000    0.000    0.000    0.000 earley_forest.py:450(visit_packed_node_out)
      100    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
      120    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       40    0.000    0.000    0.000    0.000 earley_forest.py:70(load_paths)
        8    0.000    0.000    0.000    0.000 Cell.py:81(set_cell_value)
      106    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
       13    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
      106    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:82(<setcomp>)
      100    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
        2    0.000    0.000    0.000    0.000 earley.py:52(<setcomp>)
       80    0.000    0.000    0.000    0.000 earley_forest.py:141(is_empty)
     15/5    0.000    0.000    0.000    0.000 visitors.py:421(_visit_tree)
       22    0.000    0.000    0.000    0.000 tree_matcher.py:65(parse_rulename)
       15    0.000    0.000    0.000    0.000 Parser.py:40(fix_formula)
       18    0.000    0.000    0.000    0.000 lexer.py:213(_future_new)
        5    0.000    0.000    0.000    0.000 Parser.py:211(mul_expr)
       10    0.000    0.000    0.000    0.000 Workbook.py:912(get_cell_value)
       32    0.000    0.000    0.000    0.000 earley_forest.py:444(visit_symbol_node_out)
       82    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
        2    0.000    0.000    0.000    0.000 tree_matcher.py:178(<dictcomp>)
        2    0.000    0.000    0.000    0.000 earley.py:53(<setcomp>)
     15/5    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
        2    0.000    0.000    0.008    0.004 parser_frontends.py:100(parse)
       18    0.000    0.000    0.000    0.000 lexer.py:202(__new__)
       89    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
        8    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
       80    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
        8    0.000    0.000    0.000    0.000 tree_matcher.py:21(__call__)
        6    0.000    0.000    0.000    0.000 Sheet.py:111(_shrink_sheet)
        6    0.000    0.000    0.000    0.000 Workbook.py:688(_get_sheet_name_location)
       32    0.000    0.000    0.000    0.000 earley_forest.py:571(_call_ambig_func)
       40    0.000    0.000    0.000    0.000 earley_forest.py:158(<listcomp>)
     15/5    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
        5    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
        5    0.000    0.000    0.000    0.000 Sheet.py:104(set_cell_value)
       17    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
        6    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        5    0.000    0.000    0.002    0.000 earley_forest.py:535(visit)
      8/4    0.000    0.000    0.008    0.002 reconstruct.py:85(_reconstruct)
       20    0.000    0.000    0.000    0.000 parse_tree_builder.py:20(__call__)
       25    0.000    0.000    0.000    0.000 typing.py:352(inner)
       11    0.000    0.000    0.000    0.000 Workbook.py:541(get_sheet_name_from_hidden)
        5    0.000    0.000    0.000    0.000 earley_forest.py:523(__init__)
        5    0.000    0.000    0.000    0.000 earley.py:284(<listcomp>)
        5    0.000    0.000    0.002    0.000 earley_forest.py:397(transform)
       15    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
      100    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
       10    0.000    0.000    0.000    0.000 __init__.py:178(sub)
        9    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
       61    0.000    0.000    0.000    0.000 grammar_analysis.py:172(<lambda>)
        2    0.000    0.000    0.000    0.000 Parser.py:388(CELLREF_NO_ABS)
       61    0.000    0.000    0.000    0.000 grammar_analysis.py:149(<lambda>)
        5    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
        3    0.000    0.000    0.000    0.000 earley.py:245(<setcomp>)
       12    0.000    0.000    0.000    0.000 {built-in method _heapq.heapify}
       10    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.print}
       17    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
        2    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:175(<dictcomp>)
        1    0.000    0.000    0.000    0.000 Workbook.py:701(add_children_cells)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:60(__init__)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:145(<dictcomp>)
        1    0.000    0.000    0.000    0.000 utils.py:307(error_matcher)
        8    0.000    0.000    0.000    0.000 earley_forest.py:447(visit_intermediate_node_out)
        8    0.000    0.000    0.000    0.000 reconstruct.py:15(is_iter_empty)
        2    0.000    0.000    0.000    0.000 Parser.py:381(cell)
       23    0.000    0.000    0.000    0.000 Cell.py:123(get_value)
        4    0.000    0.000    0.000    0.000 Graph.py:96(update_child)
       16    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        6    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        5    0.000    0.000    0.000    0.000 visitors.py:415(visit)
        1    0.000    0.000    0.008    0.008 reconstruct.py:96(reconstruct)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:166(<dictcomp>)
       22    0.000    0.000    0.000    0.000 {method 'groups' of 're.Match' objects}
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:163(<dictcomp>)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:160(<dictcomp>)
        2    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
        3    0.000    0.000    0.000    0.000 Cell.py:46(__init__)
        6    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
       17    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
       12    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
        2    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
        5    0.000    0.000    0.000    0.000 earley.py:254(<setcomp>)
        4    0.000    0.000    0.000    0.000 <frozen codecs>:327(reset)
       11    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        2    0.000    0.000    0.008    0.004 lark.py:640(parse)
       13    0.000    0.000    0.000    0.000 Cell.py:126(get_contents)
        5    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
       10    0.000    0.000    0.000    0.000 Cell.py:133(get_children)
       13    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
        2    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
       12    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
        2    0.000    0.000    0.000    0.000 common.py:83(__init__)
        5    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
        4    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        9    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
       12    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        6    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        6    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
        5    0.000    0.000    0.000    0.000 {method 'clear' of 'set' objects}
        5    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        2    0.000    0.000    0.000    0.000 {method 'normalize' of 'decimal.Decimal' objects}
        3    0.000    0.000    0.000    0.000 tree_matcher.py:74(__init__)
        6    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        3    0.000    0.000    0.000    0.000 tree_matcher.py:77(lex)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        4    0.000    0.000    0.000    0.000 <frozen codecs>:276(reset)
        1    0.000    0.000    0.000    0.000 Parser.py:377(__init__)
        1    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)



##################Running pro_move_cells2... #######################
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
=A1
A1
for test <function pro_move_cells2 at 0x7fbace6618a0> total time: 4.916203581
Total Logs
         1401234 function calls (1395666 primitive calls) in 0.485 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      990    0.085    0.000    0.309    0.000 earley.py:78(predict_and_complete)
    73557    0.050    0.000    0.081    0.000 earley_common.py:9(__init__)
180177/175401    0.029    0.000    0.037    0.000 {built-in method builtins.hash}
      297    0.028    0.000    0.092    0.000 earley_forest.py:283(visit)
    54252    0.021    0.000    0.033    0.000 utils.py:345(add)
    45783    0.020    0.000    0.038    0.000 grammar.py:18(__eq__)
    97160    0.019    0.000    0.026    0.000 grammar.py:25(__hash__)
    42360    0.013    0.000    0.016    0.000 lexer.py:265(__eq__)
    28512    0.012    0.000    0.019    0.000 utils.py:342(__contains__)
    61974    0.011    0.000    0.011    0.000 earley_common.py:28(__eq__)
   122027    0.011    0.000    0.011    0.000 {built-in method builtins.isinstance}
    79281    0.008    0.000    0.008    0.000 grammar.py:121(__hash__)
     2079    0.008    0.000    0.035    0.000 earley.py:135(<listcomp>)
    82269    0.007    0.000    0.007    0.000 earley_common.py:31(__hash__)
    92756    0.007    0.000    0.007    0.000 {built-in method builtins.len}
      594    0.007    0.000    0.020    0.000 xearley.py:41(scan)
     4059    0.006    0.000    0.017    0.000 earley_forest.py:50(__init__)
    10791    0.006    0.000    0.007    0.000 {built-in method fromkeys}
    84259    0.006    0.000    0.006    0.000 {method 'append' of 'list' objects}
     3960    0.006    0.000    0.025    0.000 earley_forest.py:437(_visit_node_out_helper)
     2079    0.005    0.000    0.010    0.000 earley_forest.py:603(transform_packed_node)
    32884    0.004    0.000    0.004    0.000 {built-in method builtins.next}
     3762    0.004    0.000    0.009    0.000 {built-in method builtins.sorted}
    45249    0.004    0.000    0.004    0.000 {built-in method builtins.id}
    10791    0.003    0.000    0.010    0.000 utils.py:339(__init__)
     4257    0.003    0.000    0.010    0.000 earley_forest.py:64(add_family)
      297    0.003    0.000    0.438    0.001 earley.py:262(parse)
     4257    0.003    0.000    0.005    0.000 earley_forest.py:131(__init__)
    10593    0.003    0.000    0.004    0.000 utils.py:348(__iter__)
     1683    0.003    0.000    0.007    0.000 earley_forest.py:581(transform_symbol_node)
     2079    0.002    0.000    0.007    0.000 earley_forest.py:631(visit_packed_node_in)
     4257    0.002    0.000    0.010    0.000 earley_common.py:25(advance)
     3762    0.002    0.000    0.012    0.000 earley_forest.py:85(children)
     2079    0.002    0.000    0.004    0.000 earley_forest.py:427(visit_packed_node_in)
     2079    0.002    0.000    0.017    0.000 earley_forest.py:638(visit_packed_node_out)
     1881    0.002    0.000    0.010    0.000 earley_forest.py:422(visit_symbol_node_in)
     5940    0.002    0.000    0.003    0.000 {method 'setdefault' of 'dict' objects}
      198    0.002    0.000    0.324    0.002 xearley.py:39(_parse)
     4158    0.002    0.000    0.002    0.000 earley_forest.py:145(sort_key)
     1881    0.002    0.000    0.016    0.000 earley_forest.py:625(visit_symbol_node_in)
      396    0.002    0.000    0.230    0.001 Workbook.py:728(set_cell_contents)
      396    0.002    0.000    0.220    0.001 Workbook.py:639(recompute_cell_and_parents)
5339/4898    0.002    0.000    0.002    0.000 {built-in method builtins.getattr}
     1683    0.002    0.000    0.003    0.000 earley_forest.py:556(_collapse_ambig)
     4756    0.002    0.000    0.002    0.000 {method 'match' of 're.Pattern' objects}
    10444    0.002    0.000    0.002    0.000 {method 'add' of 'set' objects}
    14495    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
     1683    0.001    0.000    0.003    0.000 earley_forest.py:565(_call_rule_func)
    18216    0.001    0.000    0.001    0.000 {method 'pop' of 'collections.deque' objects}
     3762    0.001    0.000    0.002    0.000 parser_frontends.py:184(match)
1206/1202    0.001    0.000    0.006    0.000 visitors.py:111(_call_userfunc)
      219    0.001    0.000    0.002    0.000 tree.py:137(iter_subtrees)
        1    0.001    0.001    0.485    0.485 Workbook.py:283(transfer_cells)
      498    0.001    0.000    0.002    0.000 utils.py:179(convert_location_to_idx)
     2079    0.001    0.000    0.002    0.000 earley_forest.py:155(children)
     1386    0.001    0.000    0.002    0.000 Sheet.py:93(get_cell_value)
    17164    0.001    0.000    0.001    0.000 {method 'append' of 'collections.deque' objects}
      396    0.001    0.000    0.005    0.000 Sheet.py:60(set_cell_contents)
2038/1900    0.001    0.000    0.006    0.000 visitors.py:143(_transform_children)
       99    0.001    0.000    0.004    0.000 earley.py:188(scan)
      198    0.001    0.000    0.418    0.002 parser_frontends.py:100(parse)
     5841    0.001    0.000    0.001    0.000 {method 'remove' of 'set' objects}
     2079    0.001    0.000    0.015    0.000 earley_forest.py:450(visit_packed_node_out)
     3762    0.001    0.000    0.001    0.000 utils.py:357(__len__)
     1881    0.001    0.000    0.002    0.000 earley_forest.py:70(load_paths)
     1881    0.001    0.000    0.001    0.000 earley_forest.py:499(__init__)
       40    0.001    0.000    0.002    0.000 visitors.py:293(transform)
      164    0.001    0.000    0.008    0.000 visitors.py:278(transform)
      396    0.001    0.000    0.001    0.000 {built-in method _heapq.heapify}
     4158    0.001    0.000    0.001    0.000 earley_forest.py:141(is_empty)
     1192    0.001    0.000    0.001    0.000 __init__.py:272(_compile)
      496    0.001    0.000    0.001    0.000 utils.py:194(convert_idx_to_location)
        1    0.001    0.001    0.002    0.002 grammar_analysis.py:78(calculate_sets)
      198    0.001    0.000    0.214    0.001 Workbook.py:545(get_formula_value)
     1683    0.001    0.000    0.010    0.000 earley_forest.py:444(visit_symbol_node_out)
      891    0.001    0.000    0.001    0.000 lexer.py:213(_future_new)
      396    0.001    0.000    0.001    0.000 Graph.py:330(tarjans)
      994    0.001    0.000    0.002    0.000 __init__.py:163(match)
      297    0.001    0.000    0.002    0.000 earley.py:284(<listcomp>)
       99    0.001    0.000    0.010    0.000 earley.py:171(_parse)
      594    0.001    0.000    0.001    0.000 tree_matcher.py:48(_match)
      396    0.001    0.000    0.001    0.000 Cell.py:81(set_cell_value)
      891    0.001    0.000    0.001    0.000 lexer.py:202(__new__)
     1685    0.001    0.000    0.001    0.000 utils.py:78(get_hidden_name)
     4743    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
     3960    0.001    0.000    0.001    0.000 earley_forest.py:548(_check_cycle)
      954    0.001    0.000    0.001    0.000 tree.py:147(<listcomp>)
     1683    0.001    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
     4462    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
     2079    0.001    0.000    0.001    0.000 earley_forest.py:158(<listcomp>)
     3762    0.001    0.000    0.001    0.000 earley_forest.py:101(__hash__)
      297    0.001    0.000    0.092    0.000 earley_forest.py:535(visit)
     4257    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
      495    0.000    0.000    0.001    0.000 earley_forest.py:432(visit_token_node)
      198    0.000    0.000    0.002    0.000 Parser.py:253(cell)
      895    0.000    0.000    0.002    0.000 utils.py:131(check_valid_cell_location)
     2973    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      100    0.000    0.000    0.004    0.000 Workbook.py:583(recompute_cell_value)
       99    0.000    0.000    0.025    0.000 tree_matcher.py:148(match_tree)
      297    0.000    0.000    0.093    0.000 earley_forest.py:397(transform)
     1386    0.000    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
      396    0.000    0.000    0.231    0.001 Workbook.py:36(run_func)
      297    0.000    0.000    0.001    0.000 earley_forest.py:523(__init__)
     1298    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
      495    0.000    0.000    0.001    0.000 Workbook.py:541(get_sheet_name_from_hidden)
       99    0.000    0.000    0.001    0.000 reconstruct.py:33(__default__)
      693    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
      396    0.000    0.000    0.001    0.000 Workbook.py:715(clean_children_cells)
      198    0.000    0.000    0.001    0.000 Workbook.py:688(_get_sheet_name_location)
      198    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
      396    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
      396    0.000    0.000    0.001    0.000 Cell.py:65(set_contents)
      297    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
      198    0.000    0.000    0.001    0.000 {built-in method builtins.print}
      198    0.000    0.000    0.001    0.000 Workbook.py:912(get_cell_value)
      725    0.000    0.000    0.000    0.000 visitors.py:171(__default__)
      198    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
      892    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
       99    0.000    0.000    0.001    0.000 Parser.py:388(CELLREF_NO_ABS)
     1219    0.000    0.000    0.000    0.000 tree.py:61(__init__)
      198    0.000    0.000    0.001    0.000 Workbook.py:884(get_cell_contents)
        1    0.000    0.000    0.011    0.011 load_grammar.py:690(compile)
      291    0.000    0.000    0.002    0.000 visitors.py:130(_call_userfunc_token)
      495    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
  157/111    0.000    0.000    0.003    0.000 visitors.py:155(_transform_tree)
      690    0.000    0.000    0.004    0.000 visitors.py:275(_transform_tree)
      201    0.000    0.000    0.000    0.000 tree.py:179(expand_kids_by_data)
     1085    0.000    0.000    0.000    0.000 tree.py:66(meta)
      198    0.000    0.000    0.001    0.000 Sheet.py:111(_shrink_sheet)
      892    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
      198    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
     1684    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
       99    0.000    0.000    0.001    0.000 Parser.py:381(cell)
      198    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
      198    0.000    0.000    0.003    0.000 visitors.py:421(_visit_tree)
       99    0.000    0.000    0.000    0.000 earley.py:245(<setcomp>)
      198    0.000    0.000    0.001    0.000 Sheet.py:104(set_cell_value)
      396    0.000    0.000    0.000    0.000 <frozen codecs>:327(reset)
      693    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
       99    0.000    0.000    0.027    0.000 reconstruct.py:96(reconstruct)
       63    0.000    0.000    0.000    0.000 functools.py:35(update_wrapper)
      198    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
      198    0.000    0.000    0.003    0.000 visitors.py:444(inner)
       41    0.000    0.000    0.001    0.000 load_grammar.py:566(_literal_to_pattern)
      101    0.000    0.000    0.001    0.000 grammar_analysis.py:187(_expand_rule)
       99    0.000    0.000    0.000    0.000 tree_matcher.py:21(__call__)
      198    0.000    0.000    0.027    0.000 reconstruct.py:85(_reconstruct)
       41    0.000    0.000    0.000    0.000 ast.py:54(literal_eval)
      198    0.000    0.000    0.002    0.000 Parser.py:40(fix_formula)
     1093    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      198    0.000    0.000    0.000    0.000 __init__.py:178(sub)
      495    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
      742    0.000    0.000    0.000    0.000 grammar.py:42(__init__)
      198    0.000    0.000    0.000    0.000 Sheet.py:99(get_cell_contents)
      198    0.000    0.000    0.001    0.000 Cell.py:46(__init__)
   105/45    0.000    0.000    0.001    0.000 load_grammar.py:389(expansion)
      198    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
      198    0.000    0.000    0.418    0.002 lark.py:640(parse)
       41    0.000    0.000    0.000    0.000 {built-in method builtins.compile}
       99    0.000    0.000    0.001    0.000 Workbook.py:701(add_children_cells)
      198    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
       41    0.000    0.000    0.001    0.000 load_grammar.py:540(eval_escaping)
      891    0.000    0.000    0.000    0.000 Cell.py:123(get_value)
      594    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
   146/84    0.000    0.000    0.001    0.000 visitors.py:342(_call_userfunc)
       28    0.000    0.000    0.001    0.000 tree_matcher.py:106(_build_recons_rules)
      396    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
      382    0.000    0.000    0.000    0.000 grammar_analysis.py:70(update_set)
      198    0.000    0.000    0.004    0.000 visitors.py:415(visit)
      198    0.000    0.000    0.001    0.000 earley_forest.py:447(visit_intermediate_node_out)
      693    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
      594    0.000    0.000    0.000    0.000 Cell.py:126(get_contents)
      996    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       99    0.000    0.000    0.000    0.000 tree_matcher.py:65(parse_rulename)
      198    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
      200    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      198    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
       99    0.000    0.000    0.000    0.000 Graph.py:96(update_child)
       99    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      496    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
      219    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
      155    0.000    0.000    0.000    0.000 load_grammar.py:384(_flatten)
      198    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
       63    0.000    0.000    0.001    0.000 utils.py:275(bfs)
      100    0.000    0.000    0.000    0.000 Workbook.py:576(get_cell_from_location)
    40/11    0.000    0.000    0.002    0.000 visitors.py:362(visit)
      172    0.000    0.000    0.000    0.000 grammar_analysis.py:17(__init__)
      355    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      219    0.000    0.000    0.000    0.000 <frozen abc>:117(__instancecheck__)
       35    0.000    0.000    0.000    0.000 load_grammar.py:420(expansions)
       86    0.000    0.000    0.000    0.000 grammar.py:103(__init__)
      495    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      594    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
       63    0.000    0.000    0.000    0.000 visitors.py:481(__get__)
      297    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
  139/129    0.000    0.000    0.000    0.000 tree.py:134(__hash__)
        1    0.000    0.000    0.011    0.011 tree_matcher.py:89(__init__)
        1    0.000    0.000    0.002    0.002 grammar_analysis.py:141(__init__)
      495    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      198    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
       11    0.000    0.000    0.000    0.000 load_grammar.py:450(pattern)
        2    0.000    0.000    0.000    0.000 utils.py:23(classify)
      200    0.000    0.000    0.000    0.000 Graph.py:137(get_parents_from_cell)
      437    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
       99    0.000    0.000    0.000    0.000 reconstruct.py:15(is_iter_empty)
      496    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
       63    0.000    0.000    0.000    0.000 visitors.py:470(__init__)
      198    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
       35    0.000    0.000    0.000    0.000 tree_matcher.py:121(<listcomp>)
        1    0.000    0.000    0.485    0.485 Workbook.py:370(move_cells)
      111    0.000    0.000    0.003    0.000 visitors.py:159(transform)
      198    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
       25    0.000    0.000    0.006    0.000 visitors.py:258(transform)
      297    0.000    0.000    0.000    0.000 Cell.py:133(get_children)
       49    0.000    0.000    0.000    0.000 tree_matcher.py:57(make_recons_rule)
    15/13    0.000    0.000    0.001    0.000 load_grammar.py:405(<listcomp>)
      297    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
      396    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
      396    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
       63    0.000    0.000    0.001    0.000 visitors.py:500(_vargs_inline)
      198    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
      172    0.000    0.000    0.000    0.000 grammar_analysis.py:45(__hash__)
        1    0.000    0.000    0.003    0.003 earley.py:32(__init__)
      123    0.000    0.000    0.000    0.000 load_grammar.py:537(<genexpr>)
       63    0.000    0.000    0.001    0.000 visitors.py:478(__call__)
       41    0.000    0.000    0.001    0.000 load_grammar.py:601(literal)
      396    0.000    0.000    0.000    0.000 <frozen codecs>:276(reset)
      315    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
       45    0.000    0.000    0.000    0.000 {built-in method builtins.max}
      105    0.000    0.000    0.000    0.000 load_grammar.py:759(<genexpr>)
      219    0.000    0.000    0.000    0.000 {method 'values' of 'collections.OrderedDict' objects}
      168    0.000    0.000    0.000    0.000 tree_matcher.py:12(is_discarded_terminal)
      198    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
       13    0.000    0.000    0.001    0.000 grammar_analysis.py:180(expand_rule)
       41    0.000    0.000    0.000    0.000 ast.py:33(parse)
        1    0.000    0.000    0.000    0.000 load_grammar.py:793(<setcomp>)
       99    0.000    0.000    0.000    0.000 {method 'clear' of 'set' objects}
       41    0.000    0.000    0.000    0.000 load_grammar.py:536(_rfind)
        2    0.000    0.000    0.000    0.000 tree_matcher.py:28(_best_from_group)
      170    0.000    0.000    0.000    0.000 grammar_analysis.py:28(next)
       99    0.000    0.000    0.000    0.000 {method 'groups' of 're.Match' objects}
      198    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
       47    0.000    0.000    0.000    0.000 lexer.py:41(__init__)
       99    0.000    0.000    0.000    0.000 Parser.py:377(__init__)
       54    0.000    0.000    0.000    0.000 lexer.py:50(__hash__)
       15    0.000    0.000    0.000    0.000 utils.py:190(<listcomp>)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:116(<setcomp>)
      192    0.000    0.000    0.000    0.000 visitors.py:178(__default_token__)
       10    0.000    0.000    0.000    0.000 load_grammar.py:346(expr)
       25    0.000    0.000    0.001    0.000 load_grammar.py:674(nr_deepcopy_tree)
       99    0.000    0.000    0.000    0.000 earley.py:254(<setcomp>)
        1    0.000    0.000    0.003    0.003 load_grammar.py:710(<listcomp>)
       46    0.000    0.000    0.000    0.000 load_grammar.py:668(value)
       20    0.000    0.000    0.000    0.000 load_grammar.py:631(expansions)
       99    0.000    0.000    0.000    0.000 tree_matcher.py:74(__init__)
       20    0.000    0.000    0.000    0.000 load_grammar.py:637(<lambda>)
      110    0.000    0.000    0.000    0.000 tree.py:32(__init__)
        1    0.000    0.000    0.001    0.001 load_grammar.py:693(<listcomp>)
      113    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
       82    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
       41    0.000    0.000    0.000    0.000 {built-in method builtins.all}
       35    0.000    0.000    0.000    0.000 load_grammar.py:798(<lambda>)
       99    0.000    0.000    0.000    0.000 tree_matcher.py:77(lex)
       99    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
        7    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
       20    0.000    0.000    0.000    0.000 __init__.py:253(escape)
       41    0.000    0.000    0.000    0.000 ast.py:84(_convert)
        1    0.000    0.000    0.000    0.000 load_grammar.py:806(<setcomp>)
       53    0.000    0.000    0.000    0.000 grammar.py:69(__init__)
       35    0.000    0.000    0.000    0.000 load_grammar.py:621(expansion)
       11    0.000    0.000    0.000    0.000 earley.py:58(<listcomp>)
       65    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
       20    0.000    0.000    0.000    0.000 lexer.py:81(to_regexp)
        2    0.000    0.000    0.000    0.000 utils.py:271(<listcomp>)
       21    0.000    0.000    0.000    0.000 lexer.py:125(__init__)
       15    0.000    0.000    0.000    0.000 utils.py:184(dedup_list)
      116    0.000    0.000    0.000    0.000 tree.py:175(<lambda>)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:115(<setcomp>)
       35    0.000    0.000    0.000    0.000 grammar.py:22(__ne__)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:108(<setcomp>)
        1    0.000    0.000    0.000    0.000 earley.py:52(<setcomp>)
       50    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
       14    0.000    0.000    0.000    0.000 tree_matcher.py:61(make_recons_rule_to_term)
        1    0.000    0.000    0.000    0.000 copy.py:66(copy)
       15    0.000    0.000    0.000    0.000 tree.py:169(find_pred)
       20    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
        1    0.000    0.000    0.000    0.000 load_grammar.py:375(maybe)
       49    0.000    0.000    0.000    0.000 tree_matcher.py:17(__init__)
       25    0.000    0.000    0.000    0.000 load_grammar.py:639(<genexpr>)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:82(<setcomp>)
       49    0.000    0.000    0.000    0.000 load_grammar.py:572(<genexpr>)
       35    0.000    0.000    0.000    0.000 load_grammar.py:431(expansion)
        1    0.000    0.000    0.000    0.000 earley.py:53(<setcomp>)
       65    0.000    0.000    0.000    0.000 typing.py:2256(cast)
       35    0.000    0.000    0.000    0.000 {built-in method builtins.any}
        1    0.000    0.000    0.000    0.000 tree_matcher.py:178(<dictcomp>)
       15    0.000    0.000    0.000    0.000 lexer.py:53(__eq__)
       30    0.000    0.000    0.000    0.000 load_grammar.py:617(pattern)
        1    0.000    0.000    0.000    0.000 load_grammar.py:446(<dictcomp>)
       21    0.000    0.000    0.000    0.000 lexer.py:70(_get_flags)
       33    0.000    0.000    0.000    0.000 tree_matcher.py:44(<lambda>)
        1    0.000    0.000    0.001    0.001 load_grammar.py:694(<listcomp>)
        1    0.000    0.000    0.011    0.011 reconstruct.py:80(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:246(_add_recurse_rule)
       30    0.000    0.000    0.000    0.000 visitors.py:108(__init__)
       15    0.000    0.000    0.000    0.000 tree.py:173(find_data)
       30    0.000    0.000    0.000    0.000 load_grammar.py:663(value)
        6    0.000    0.000    0.000    0.000 load_grammar.py:411(alias)
       21    0.000    0.000    0.000    0.000 load_grammar.py:809(<lambda>)
       20    0.000    0.000    0.000    0.000 lexer.py:88(max_width)
       13    0.000    0.000    0.000    0.000 typing.py:352(inner)
        1    0.000    0.000    0.000    0.000 copyreg.py:104(__newobj__)
       20    0.000    0.000    0.000    0.000 lexer.py:84(min_width)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:145(<dictcomp>)
        1    0.000    0.000    0.000    0.000 copy.py:259(_reconstruct)
        9    0.000    0.000    0.000    0.000 load_grammar.py:210(_args_as_int)
        1    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
        2    0.000    0.000    0.000    0.000 tree_matcher.py:42(_best_rules_from_group)
        1    0.000    0.000    0.000    0.000 load_grammar.py:642(expr)
        5    0.000    0.000    0.000    0.000 load_grammar.py:640(<setcomp>)
       34    0.000    0.000    0.000    0.000 grammar_analysis.py:149(<lambda>)
       50    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
        8    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
        2    0.000    0.000    0.000    0.000 load_grammar.py:219(expansion)
        2    0.000    0.000    0.000    0.000 load_grammar.py:201(_will_not_get_removed)
       34    0.000    0.000    0.000    0.000 grammar_analysis.py:172(<lambda>)
        4    0.000    0.000    0.000    0.000 grammar.py:124(__eq__)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        5    0.000    0.000    0.000    0.000 load_grammar.py:613(_make_joined_pattern)
        1    0.000    0.000    0.000    0.000 load_grammar.py:443(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:763(<listcomp>)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:175(<dictcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:235(_name_rule)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:60(__init__)
        1    0.000    0.000    0.000    0.000 reconstruct.py:83(<dictcomp>)
        2    0.000    0.000    0.000    0.000 utils.py:269(classify_bool)
        2    0.000    0.000    0.000    0.000 visitors.py:263(__mul__)
        2    0.000    0.000    0.000    0.000 visitors.py:163(__mul__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:240(_add_rule)
        1    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        1    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:166(<dictcomp>)
       11    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:163(<dictcomp>)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:160(<dictcomp>)
        2    0.000    0.000    0.000    0.000 load_grammar.py:222(expansions)
        4    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
        4    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
        1    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        4    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
        1    0.000    0.000    0.000    0.000 common.py:83(__init__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
        1    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
        4    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
        1    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}



##################Running pro_create_sheets... #######################
for test <function pro_create_sheets at 0x7fbace6619e0> total time: 0.03507833500000001
Total Logs
         41855 function calls in 0.009 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     5000    0.002    0.000    0.005    0.000 random.py:367(choice)
     5000    0.002    0.000    0.003    0.000 random.py:235(_randbelow_with_getrandbits)
     5100    0.001    0.000    0.007    0.000 profiler.py:46(<genexpr>)
      100    0.001    0.000    0.001    0.000 utils.py:96(check_new_name)
    10100    0.001    0.000    0.001    0.000 {built-in method builtins.len}
      100    0.000    0.000    0.007    0.000 {method 'join' of 'str' objects}
     5153    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
     5000    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
     5000    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
      100    0.000    0.000    0.002    0.000 Workbook.py:974(new_sheet)
      100    0.000    0.000    0.007    0.000 profiler.py:43(generate_random_string)
      100    0.000    0.000    0.002    0.000 Workbook.py:36(run_func)
      100    0.000    0.000    0.000    0.000 Workbook.py:506(num_sheets)
      100    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
      100    0.000    0.000    0.000    0.000 Graph.py:128(get_sheet_parents)
      100    0.000    0.000    0.000    0.000 Workbook.py:963(recompute_sheet_parents)
      100    0.000    0.000    0.000    0.000 Graph.py:121(has_sheet)
      100    0.000    0.000    0.000    0.000 Sheet.py:25(__init__)
      100    0.000    0.000    0.000    0.000 Graph.py:124(add_sheet)
      100    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_set_cell_contents... #######################
for test <function pro_set_cell_contents at 0x7fbace661b20> total time: 29.885431733999997
Total Logs
         35968690 function calls in 7.127 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  4999500    2.291    0.000    5.108    0.000 random.py:367(choice)
  4999500    1.741    0.000    2.337    0.000 random.py:235(_randbelow_with_getrandbits)
  5009499    1.258    0.000    6.366    0.000 profiler.py:46(<genexpr>)
 10068993    0.486    0.000    0.486    0.000 {built-in method builtins.len}
    29997    0.411    0.000    6.777    0.000 {method 'join' of 'str' objects}
  5161769    0.325    0.000    0.325    0.000 {method 'getrandbits' of '_random.Random' objects}
  4999500    0.271    0.000    0.271    0.000 {method 'bit_length' of 'int' objects}
     9999    0.041    0.000    0.325    0.000 Workbook.py:728(set_cell_contents)
   189981    0.033    0.000    0.033    0.000 {method 'lower' of 'str' objects}
     9999    0.027    0.000    0.054    0.000 utils.py:307(error_matcher)
     9999    0.026    0.000    0.170    0.000 Sheet.py:60(set_cell_contents)
     9999    0.024    0.000    0.039    0.000 Workbook.py:639(recompute_cell_and_parents)
     9999    0.021    0.000    0.080    0.000 Cell.py:81(set_cell_value)
     9999    0.019    0.000    0.029    0.000 utils.py:179(convert_location_to_idx)
    19998    0.014    0.000    0.024    0.000 Sheet.py:93(get_cell_value)
     9999    0.011    0.000    6.781    0.001 profiler.py:43(generate_random_string)
     9999    0.010    0.000    0.092    0.000 Cell.py:65(set_contents)
     9999    0.010    0.000    0.012    0.000 profiler.py:25(convert_to_excel_coordinates)
     9999    0.009    0.000    0.334    0.000 Workbook.py:36(run_func)
    39996    0.008    0.000    0.008    0.000 {method 'get' of 'dict' objects}
     9999    0.008    0.000    0.010    0.000 Sheet.py:124(update_extent)
    79992    0.007    0.000    0.007    0.000 {method 'strip' of 'str' objects}
     9999    0.006    0.000    0.011    0.000 Workbook.py:541(get_sheet_name_from_hidden)
     9999    0.006    0.000    0.019    0.000 __init__.py:163(match)
     9999    0.006    0.000    0.009    0.000 __init__.py:272(_compile)
    19998    0.006    0.000    0.009    0.000 Sheet.py:120(get_cell)
     9999    0.006    0.000    0.098    0.000 Cell.py:46(__init__)
    19998    0.006    0.000    0.006    0.000 {built-in method _heapq.heappush}
    19998    0.006    0.000    0.008    0.000 utils.py:78(get_hidden_name)
     9999    0.005    0.000    0.024    0.000 utils.py:131(check_valid_cell_location)
     9999    0.004    0.000    0.008    0.000 Workbook.py:715(clean_children_cells)
     9999    0.004    0.000    0.004    0.000 Graph.py:330(tarjans)
    19998    0.004    0.000    0.004    0.000 {built-in method builtins.isinstance}
     9999    0.004    0.000    0.004    0.000 {method 'match' of 're.Pattern' objects}
     9999    0.003    0.000    0.004    0.000 utils.py:212(is_formula)
    19998    0.002    0.000    0.002    0.000 {built-in method builtins.ord}
     9999    0.001    0.000    0.001    0.000 Cell.py:123(get_value)
     9999    0.001    0.000    0.001    0.000 Sheet.py:54(get_sheet_name)
     9999    0.001    0.000    0.001    0.000 {method 'upper' of 'str' objects}
     9999    0.001    0.000    0.001    0.000 {built-in method builtins.divmod}
     9999    0.001    0.000    0.001    0.000 {method 'lstrip' of 'str' objects}
     9999    0.001    0.000    0.001    0.000 {method 'rstrip' of 'str' objects}
     9999    0.001    0.000    0.001    0.000 {built-in method builtins.chr}
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_update_formula_chain... #######################
for test <function pro_update_formula_chain at 0x7fbace661da0> total time: 16.676555792000006
Total Logs
         860016 function calls in 3.680 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    3.168    3.168    3.187    3.187 Graph.py:330(tarjans)
    10000    0.057    0.000    0.475    0.000 Workbook.py:583(recompute_cell_value)
    69995    0.047    0.000    0.047    0.000 {built-in method builtins.isinstance}
    29999    0.030    0.000    0.046    0.000 Sheet.py:93(get_cell_value)
     9999    0.027    0.000    0.279    0.000 Workbook.py:545(get_formula_value)
     9999    0.026    0.000    0.152    0.000 Parser.py:253(cell)
    10000    0.019    0.000    0.038    0.000 Cell.py:81(set_cell_value)
    40000    0.017    0.000    0.023    0.000 utils.py:78(get_hidden_name)
     9999    0.017    0.000    0.101    0.000 Workbook.py:912(get_cell_value)
    19998    0.014    0.000    0.022    0.000 {built-in method builtins.getattr}
        1    0.014    0.014    3.678    3.678 Workbook.py:639(recompute_cell_and_parents)
    20000    0.013    0.000    0.013    0.000 Graph.py:137(get_parents_from_cell)
     9999    0.013    0.000    0.228    0.000 visitors.py:421(_visit_tree)
    90012    0.013    0.000    0.013    0.000 {method 'lower' of 'str' objects}
    19999    0.012    0.000    0.052    0.000 __init__.py:272(_compile)
     9999    0.012    0.000    0.053    0.000 Sheet.py:104(set_cell_value)
    50000    0.012    0.000    0.012    0.000 {method 'get' of 'dict' objects}
     9999    0.010    0.000    0.193    0.000 visitors.py:444(inner)
    10000    0.010    0.000    0.024    0.000 Workbook.py:576(get_cell_from_location)
     9999    0.010    0.000    0.010    0.000 Parser.py:97(__init__)
    10000    0.009    0.000    0.014    0.000 utils.py:207(remove_exponent)
    10000    0.009    0.000    0.016    0.000 Workbook.py:541(get_sheet_name_from_hidden)
     9999    0.008    0.000    0.167    0.000 Parser.py:40(fix_formula)
     9999    0.008    0.000    0.016    0.000 visitors.py:429(visit_children)
     9999    0.008    0.000    0.020    0.000 __init__.py:178(sub)
     9999    0.007    0.000    0.009    0.000 visitors.py:430(<listcomp>)
    10000    0.007    0.000    0.055    0.000 __init__.py:163(match)
     9999    0.006    0.000    0.008    0.000 lexer.py:265(__eq__)
    10000    0.006    0.000    0.061    0.000 utils.py:131(check_valid_cell_location)
    29999    0.006    0.000    0.006    0.000 Cell.py:123(get_value)
     9999    0.006    0.000    0.233    0.000 visitors.py:415(visit)
    40004    0.005    0.000    0.005    0.000 {built-in method builtins.len}
     9999    0.005    0.000    0.006    0.000 utils.py:295(get_highest_precedence_error)
    10001    0.005    0.000    0.007    0.000 utils.py:212(is_formula)
    10002    0.005    0.000    0.009    0.000 Sheet.py:120(get_cell)
    10000    0.005    0.000    0.005    0.000 {method 'match' of 're.Pattern' objects}
    19999    0.004    0.000    0.004    0.000 Cell.py:126(get_contents)
    19998    0.004    0.000    0.004    0.000 Cell.py:62(get_cached_formula)
     9999    0.004    0.000    0.004    0.000 {method 'sub' of 're.Pattern' objects}
    50000    0.003    0.000    0.003    0.000 {method 'append' of 'list' objects}
    30000    0.003    0.000    0.003    0.000 {method 'pop' of 'list' objects}
    10000    0.003    0.000    0.003    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
    10000    0.002    0.000    0.002    0.000 {method 'quantize' of 'decimal.Decimal' objects}
    10000    0.002    0.000    0.002    0.000 Cell.py:133(get_children)
     9999    0.002    0.000    0.002    0.000 Cell.py:129(set_children)
     9999    0.002    0.000    0.002    0.000 Parser.py:108(get_cell_refs)
    10000    0.002    0.000    0.002    0.000 Sheet.py:54(get_sheet_name)
     9999    0.002    0.000    0.002    0.000 {method 'add' of 'set' objects}
    10000    0.001    0.000    0.001    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.001    0.001    3.680    3.680 Workbook.py:728(set_cell_contents)
        1    0.001    0.001    3.680    3.680 Workbook.py:36(run_func)
        1    0.000    0.000    0.000    0.000 utils.py:179(convert_location_to_idx)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 Sheet.py:60(set_cell_contents)
        1    0.000    0.000    0.000    0.000 utils.py:307(error_matcher)
        1    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
        1    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        1    0.000    0.000    0.000    0.000 Workbook.py:715(clean_children_cells)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        9    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        1    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}



##################Running pro_write_formula_chain... #######################
for test <function pro_write_formula_chain at 0x7fbace661d00> total time: 663.5083694369999
Total Logs
         175371371 function calls (174551453 primitive calls) in 63.422 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
   158874   11.590    0.000   43.058    0.000 earley.py:78(predict_and_complete)
  9029097    6.634    0.000   11.361    0.000 earley_common.py:9(__init__)
22497750/21877812    4.459    0.000    5.599    0.000 {built-in method builtins.hash}
     9999    4.033    0.000   13.263    0.001 earley_forest.py:283(visit)
  7289271    3.032    0.000    4.607    0.000 utils.py:345(add)
  5629437    2.652    0.000    5.170    0.000 grammar.py:18(__eq__)
 12198780    2.500    0.000    3.456    0.000 grammar.py:25(__hash__)
   148875    1.743    0.000    5.028    0.000 xearley.py:41(scan)
  5269473    1.705    0.000    2.168    0.000 lexer.py:265(__eq__)
  3429657    1.505    0.000    2.383    0.000 utils.py:342(__contains__)
  7359264    1.392    0.000    1.415    0.000 earley_common.py:28(__eq__)
 14698530    1.350    0.000    1.350    0.000 {built-in method builtins.isinstance}
   299970    1.080    0.000    5.106    0.000 earley.py:135(<listcomp>)
 11288871    1.065    0.000    1.065    0.000 earley_common.py:31(__hash__)
  9759024    0.984    0.000    0.984    0.000 grammar.py:121(__hash__)
   579942    0.975    0.000    2.303    0.000 earley_forest.py:50(__init__)
 11108889    0.861    0.000    0.861    0.000 {built-in method builtins.len}
   559944    0.854    0.000    3.478    0.000 earley_forest.py:437(_visit_node_out_helper)
 10516728    0.814    0.000    0.814    0.000 {method 'append' of 'list' objects}
   279972    0.797    0.000    1.495    0.000 earley_forest.py:603(transform_packed_node)
  1626507    0.762    0.000    0.919    0.000 {built-in method fromkeys}
  1626507    0.685    0.000    1.604    0.000 utils.py:339(__init__)
  4779522    0.616    0.000    0.616    0.000 {built-in method builtins.next}
   559944    0.542    0.000    1.286    0.000 {built-in method builtins.sorted}
  6229377    0.538    0.000    0.538    0.000 {built-in method builtins.id}
   599940    0.523    0.000    1.581    0.000 earley_forest.py:64(add_family)
  1666503    0.437    0.000    0.612    0.000 utils.py:348(__iter__)
  1318758    0.431    0.000    0.759    0.000 parser_frontends.py:184(match)
   599940    0.414    0.000    0.754    0.000 earley_forest.py:131(__init__)
   599940    0.348    0.000    1.751    0.000 earley_common.py:25(advance)
  1338756    0.342    0.000    0.342    0.000 {method 'match' of 're.Pattern' objects}
   559944    0.339    0.000    1.853    0.000 earley_forest.py:85(children)
     9999    0.335    0.000   48.422    0.005 xearley.py:39(_parse)
   209979    0.331    0.000    0.812    0.000 earley_forest.py:581(transform_symbol_node)
   279972    0.318    0.000    0.945    0.000 earley_forest.py:631(visit_packed_node_in)
   279972    0.286    0.000    1.496    0.000 earley_forest.py:422(visit_symbol_node_in)
   859914    0.280    0.000    0.397    0.000 {method 'setdefault' of 'dict' objects}
   279972    0.276    0.000    0.577    0.000 earley_forest.py:427(visit_packed_node_in)
   279972    0.274    0.000    2.472    0.000 earley_forest.py:638(visit_packed_node_out)
   559944    0.269    0.000    0.371    0.000 earley_forest.py:145(sort_key)
  2226447    0.241    0.000    0.241    0.000 {built-in method builtins.iter}
   279972    0.229    0.000    2.439    0.000 earley_forest.py:625(visit_symbol_node_in)
  2579742    0.202    0.000    0.202    0.000 {method 'pop' of 'collections.deque' objects}
  1409859    0.194    0.000    0.194    0.000 {method 'add' of 'set' objects}
   209979    0.179    0.000    0.300    0.000 earley_forest.py:556(_collapse_ambig)
   209979    0.177    0.000    0.335    0.000 earley_forest.py:565(_call_rule_func)
  2489751    0.169    0.000    0.169    0.000 {method 'append' of 'collections.deque' objects}
   279972    0.151    0.000    0.227    0.000 earley_forest.py:155(children)
   559944    0.133    0.000    0.193    0.000 utils.py:357(__len__)
   839916    0.133    0.000    0.133    0.000 {method 'remove' of 'set' objects}
   279972    0.129    0.000    0.135    0.000 earley_forest.py:499(__init__)
   279972    0.121    0.000    0.228    0.000 earley_forest.py:70(load_paths)
   279972    0.119    0.000    2.145    0.000 earley_forest.py:450(visit_packed_node_out)
   559944    0.102    0.000    0.102    0.000 earley_forest.py:141(is_empty)
     9999    0.096    0.000   62.038    0.006 earley.py:262(parse)
    69993    0.094    0.000    0.132    0.000 earley_forest.py:591(transform_intermediate_node)
     9999    0.088    0.000   63.130    0.006 Workbook.py:639(recompute_cell_and_parents)
     9999    0.086    0.000   62.160    0.006 parser_frontends.py:100(parse)
   209979    0.086    0.000    1.273    0.000 earley_forest.py:444(visit_symbol_node_out)
   599940    0.085    0.000    0.085    0.000 earley_forest.py:101(__hash__)
    89991    0.078    0.000    0.105    0.000 lexer.py:213(_future_new)
   559944    0.077    0.000    0.077    0.000 earley_forest.py:548(_check_cycle)
   199980    0.077    0.000    0.094    0.000 {built-in method builtins.getattr}
   279972    0.075    0.000    0.075    0.000 earley_forest.py:158(<listcomp>)
   599940    0.073    0.000    0.073    0.000 earley_forest.py:169(__hash__)
    79992    0.069    0.000    0.087    0.000 earley_forest.py:432(visit_token_node)
   209979    0.069    0.000    0.090    0.000 earley_forest.py:571(_call_ambig_func)
   169983    0.068    0.000    0.089    0.000 parse_tree_builder.py:20(__call__)
   559944    0.066    0.000    0.066    0.000 {method 'pop' of 'list' objects}
    89991    0.066    0.000    0.171    0.000 lexer.py:202(__new__)
59994/9999    0.055    0.000    0.591    0.000 visitors.py:421(_visit_tree)
    89991    0.052    0.000    0.062    0.000 earley_forest.py:193(__init__)
59994/9999    0.052    0.000    0.491    0.000 visitors.py:430(<listcomp>)
59994/9999    0.051    0.000    0.551    0.000 visitors.py:444(inner)
    59994    0.047    0.000    0.304    0.000 Parser.py:40(fix_formula)
    49995    0.046    0.000    0.076    0.000 Sheet.py:93(get_cell_value)
     9999    0.045    0.000   63.387    0.006 Workbook.py:728(set_cell_contents)
     9999    0.045    0.000   62.835    0.006 Workbook.py:545(get_formula_value)
   178872    0.044    0.000    0.044    0.000 utils.py:354(__bool__)
59994/9999    0.037    0.000    0.499    0.000 visitors.py:429(visit_children)
     9999    0.035    0.000    0.138    0.000 Sheet.py:60(set_cell_contents)
    29997    0.034    0.000    0.102    0.000 xearley.py:88(<listcomp>)
    59994    0.032    0.000    0.045    0.000 utils.py:295(get_highest_precedence_error)
    69993    0.032    0.000    0.297    0.000 earley_forest.py:447(visit_intermediate_node_out)
     9999    0.032    0.000    0.148    0.000 Parser.py:253(cell)
     9999    0.031    0.000    0.048    0.000 utils.py:179(convert_location_to_idx)
    29997    0.030    0.000    0.030    0.000 xearley.py:85(<listcomp>)
     9999    0.029    0.000   13.292    0.001 earley_forest.py:535(visit)
    19998    0.029    0.000    0.052    0.000 Cell.py:81(set_cell_value)
    89991    0.027    0.000    0.027    0.000 {built-in method __new__ of type object at 0x860f60}
   209979    0.027    0.000    0.027    0.000 {built-in method builtins.hasattr}
    19998    0.024    0.000    0.032    0.000 parse_tree_builder.py:145(__call__)
     9999    0.024    0.000    0.092    0.000 earley.py:284(<listcomp>)
    89991    0.023    0.000    0.023    0.000 {method 'get' of 'dict' objects}
    29997    0.023    0.000    0.030    0.000 __init__.py:272(_compile)
     9999    0.021    0.000    0.033    0.000 Workbook.py:688(_get_sheet_name_location)
     9999    0.020    0.000    0.027    0.000 parser_frontends.py:96(_make_lexer_thread)
     9999    0.020    0.000    0.078    0.000 Workbook.py:912(get_cell_value)
     9999    0.020    0.000    0.025    0.000 Parser.py:211(mul_expr)
     9999    0.019    0.000    0.034    0.000 earley_forest.py:523(__init__)
   139986    0.019    0.000    0.019    0.000 {method 'lower' of 'str' objects}
     9999    0.017    0.000   13.311    0.001 earley_forest.py:397(transform)
     9999    0.017    0.000    0.020    0.000 profiler.py:25(convert_to_excel_coordinates)
     9999    0.016    0.000    0.022    0.000 Parser.py:169(add_expr)
   149985    0.016    0.000    0.016    0.000 {method 'end' of 're.Match' objects}
    19998    0.016    0.000    0.016    0.000 Parser.py:243(number)
    59994    0.016    0.000    0.016    0.000 tree.py:61(__init__)
    89991    0.016    0.000    0.016    0.000 {method 'group' of 're.Match' objects}
    39996    0.016    0.000    0.021    0.000 utils.py:78(get_hidden_name)
     9999    0.015    0.000   63.402    0.006 Workbook.py:36(run_func)
     9999    0.015    0.000    0.015    0.000 Parser.py:97(__init__)
     9999    0.015    0.000    0.019    0.000 Graph.py:68(add_connection)
     9999    0.015    0.000    0.067    0.000 Workbook.py:701(add_children_cells)
    29997    0.014    0.000    0.014    0.000 {method 'join' of 'str' objects}
    19998    0.014    0.000    0.046    0.000 __init__.py:163(match)
    89991    0.014    0.000    0.014    0.000 earley_forest.py:207(__hash__)
    19998    0.013    0.000    0.059    0.000 utils.py:131(check_valid_cell_location)
     9999    0.013    0.000    0.015    0.000 earley_forest.py:390(__init__)
     9999    0.012    0.000    0.022    0.000 Cell.py:65(set_contents)
     9999    0.012    0.000    0.061    0.000 Sheet.py:104(set_cell_value)
     9999    0.012    0.000    0.014    0.000 Sheet.py:124(update_extent)
     9999    0.011    0.000    0.018    0.000 utils.py:207(remove_exponent)
     9999    0.011    0.000    0.032    0.000 __init__.py:178(sub)
    59994    0.010    0.000    0.010    0.000 {method 'extend' of 'list' objects}
    19998    0.009    0.000    0.009    0.000 {built-in method _heapq.heappush}
    79992    0.009    0.000    0.009    0.000 earley_forest.py:418(transform_token_node)
     9999    0.009    0.000    0.016    0.000 Workbook.py:541(get_sheet_name_from_hidden)
     9999    0.009    0.000    0.009    0.000 Graph.py:330(tarjans)
     9999    0.008    0.000    0.009    0.000 parser_frontends.py:86(_verify_start)
     9999    0.008    0.000   62.168    0.006 lark.py:640(parse)
     9999    0.008    0.000    0.008    0.000 {method 'sub' of 're.Pattern' objects}
     9999    0.008    0.000    0.030    0.000 Cell.py:46(__init__)
    19998    0.007    0.000    0.009    0.000 Sheet.py:120(get_cell)
     9999    0.007    0.000    0.007    0.000 {built-in method _abc._abc_instancecheck}
     9999    0.006    0.000    0.597    0.000 visitors.py:415(visit)
    39996    0.006    0.000    0.006    0.000 Cell.py:123(get_value)
     9999    0.005    0.000    0.005    0.000 lark.py:220(__getattr__)
     9999    0.005    0.000    0.010    0.000 Workbook.py:715(clean_children_cells)
     9999    0.005    0.000    0.006    0.000 utils.py:212(is_formula)
     9999    0.004    0.000    0.004    0.000 {method 'update' of 'dict' objects}
    19998    0.004    0.000    0.004    0.000 Cell.py:126(get_contents)
     9999    0.004    0.000    0.004    0.000 {method 'split' of 'str' objects}
     9999    0.004    0.000    0.004    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
     9999    0.004    0.000    0.011    0.000 <frozen abc>:117(__instancecheck__)
     9909    0.004    0.000    0.004    0.000 {method 'quantize' of 'decimal.Decimal' objects}
     9999    0.003    0.000    0.003    0.000 Cell.py:129(set_children)
    19998    0.003    0.000    0.003    0.000 {method 'strip' of 'str' objects}
     9999    0.003    0.000    0.003    0.000 grammar.py:15(__init__)
    19998    0.002    0.000    0.002    0.000 {built-in method builtins.ord}
     9999    0.002    0.000    0.002    0.000 {built-in method builtins.divmod}
     9999    0.002    0.000    0.002    0.000 Cell.py:59(cache_formula)
     9999    0.002    0.000    0.002    0.000 Parser.py:108(get_cell_refs)
     9999    0.002    0.000    0.002    0.000 earley_forest.py:232(__init__)
     9999    0.002    0.000    0.002    0.000 {method 'upper' of 'str' objects}
     9999    0.002    0.000    0.002    0.000 Parser.py:111(parens)
     9999    0.002    0.000    0.002    0.000 {method 'lstrip' of 'str' objects}
     9999    0.002    0.000    0.002    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
     9999    0.002    0.000    0.002    0.000 Sheet.py:54(get_sheet_name)
     9999    0.002    0.000    0.002    0.000 {built-in method builtins.chr}
     9999    0.001    0.000    0.001    0.000 Cell.py:62(get_cached_formula)
     9999    0.001    0.000    0.001    0.000 {method 'rstrip' of 'str' objects}
       90    0.000    0.000    0.000    0.000 {method 'normalize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_cyle_formula_chain... #######################
for test <function pro_cyle_formula_chain at 0x7fbace661ee0> total time: 12.847067198999992
Total Logs
         286521 function calls (286500 primitive calls) in 3.191 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    3.113    3.113    3.133    3.133 Graph.py:330(tarjans)
        1    0.020    0.020    0.054    0.054 Workbook.py:617(_set_cycle_detected)
    20000    0.011    0.000    0.011    0.000 Graph.py:137(get_parents_from_cell)
    20005    0.006    0.000    0.007    0.000 utils.py:78(get_hidden_name)
    10000    0.005    0.000    0.014    0.000 Workbook.py:576(get_cell_from_location)
    10002    0.005    0.000    0.009    0.000 Workbook.py:541(get_sheet_name_from_hidden)
    30001    0.005    0.000    0.005    0.000 {built-in method builtins.min}
    10002    0.005    0.000    0.006    0.000 Cell.py:81(set_cell_value)
    10002    0.002    0.000    0.004    0.000 Sheet.py:120(get_cell)
    30019    0.002    0.000    0.002    0.000 {method 'pop' of 'list' objects}
    10005    0.002    0.000    0.002    0.000 Cell.py:123(get_value)
    10009    0.002    0.000    0.002    0.000 {method 'get' of 'dict' objects}
    30544    0.002    0.000    0.002    0.000 {built-in method builtins.isinstance}
    40407    0.002    0.000    0.002    0.000 {method 'append' of 'list' objects}
    10000    0.002    0.000    0.002    0.000 CellError.py:11(__init__)
    10002    0.002    0.000    0.002    0.000 Cell.py:126(get_contents)
    20015    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
    10002    0.001    0.000    0.001    0.000 Sheet.py:54(get_sheet_name)
        1    0.001    0.001    3.190    3.190 Workbook.py:639(recompute_cell_and_parents)
        4    0.000    0.000    0.001    0.000 earley.py:78(predict_and_complete)
        1    0.000    0.000    3.191    3.191 Workbook.py:36(run_func)
        1    0.000    0.000    3.191    3.191 Workbook.py:728(set_cell_contents)
      362    0.000    0.000    0.000    0.000 earley_common.py:9(__init__)
        1    0.000    0.000    0.001    0.001 earley_forest.py:283(visit)
  865/844    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
      264    0.000    0.000    0.000    0.000 utils.py:345(add)
      215    0.000    0.000    0.000    0.000 grammar.py:18(__eq__)
      459    0.000    0.000    0.000    0.000 grammar.py:25(__hash__)
      203    0.000    0.000    0.000    0.000 lexer.py:265(__eq__)
      144    0.000    0.000    0.000    0.000 utils.py:342(__contains__)
      309    0.000    0.000    0.000    0.000 earley_common.py:28(__eq__)
       10    0.000    0.000    0.000    0.000 earley.py:135(<listcomp>)
       20    0.000    0.000    0.000    0.000 earley_forest.py:50(__init__)
        3    0.000    0.000    0.000    0.000 xearley.py:41(scan)
      389    0.000    0.000    0.000    0.000 grammar.py:121(__hash__)
      403    0.000    0.000    0.000    0.000 earley_common.py:31(__hash__)
       19    0.000    0.000    0.000    0.000 earley_forest.py:437(_visit_node_out_helper)
      439    0.000    0.000    0.000    0.000 {built-in method builtins.len}
       10    0.000    0.000    0.000    0.000 earley_forest.py:603(transform_packed_node)
      156    0.000    0.000    0.000    0.000 {built-in method builtins.next}
      209    0.000    0.000    0.000    0.000 {built-in method builtins.id}
       18    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
       51    0.000    0.000    0.000    0.000 utils.py:339(__init__)
       21    0.000    0.000    0.000    0.000 earley_forest.py:64(add_family)
        8    0.000    0.000    0.000    0.000 earley_forest.py:581(transform_symbol_node)
       21    0.000    0.000    0.000    0.000 earley_forest.py:131(__init__)
       18    0.000    0.000    0.000    0.000 earley_forest.py:85(children)
       48    0.000    0.000    0.000    0.000 utils.py:348(__iter__)
       10    0.000    0.000    0.000    0.000 earley_forest.py:631(visit_packed_node_in)
        1    0.000    0.000    0.002    0.002 earley.py:262(parse)
       51    0.000    0.000    0.000    0.000 {built-in method fromkeys}
       21    0.000    0.000    0.000    0.000 earley_common.py:25(advance)
        1    0.000    0.000    0.002    0.002 xearley.py:39(_parse)
        9    0.000    0.000    0.000    0.000 earley_forest.py:422(visit_symbol_node_in)
       10    0.000    0.000    0.000    0.000 earley_forest.py:638(visit_packed_node_out)
       10    0.000    0.000    0.000    0.000 earley_forest.py:427(visit_packed_node_in)
       20    0.000    0.000    0.000    0.000 earley_forest.py:145(sort_key)
       29    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
        8    0.000    0.000    0.000    0.000 earley_forest.py:556(_collapse_ambig)
        9    0.000    0.000    0.000    0.000 earley_forest.py:625(visit_symbol_node_in)
        8    0.000    0.000    0.000    0.000 earley_forest.py:565(_call_rule_func)
       49    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
       66    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
       86    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.deque' objects}
        1    0.000    0.000    0.002    0.002 parser_frontends.py:100(parse)
       10    0.000    0.000    0.000    0.000 earley_forest.py:155(children)
        5    0.000    0.000    0.000    0.000 Sheet.py:93(get_cell_value)
       21    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
       19    0.000    0.000    0.000    0.000 parser_frontends.py:184(match)
        1    0.000    0.000    0.002    0.002 Workbook.py:545(get_formula_value)
       83    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
        1    0.000    0.000    0.000    0.000 utils.py:179(convert_location_to_idx)
        3    0.000    0.000    0.000    0.000 lexer.py:213(_future_new)
        9    0.000    0.000    0.000    0.000 earley_forest.py:70(load_paths)
       28    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       18    0.000    0.000    0.000    0.000 utils.py:357(__len__)
       10    0.000    0.000    0.000    0.000 earley_forest.py:450(visit_packed_node_out)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        9    0.000    0.000    0.000    0.000 earley_forest.py:499(__init__)
        3    0.000    0.000    0.000    0.000 __init__.py:272(_compile)
        1    0.000    0.000    0.000    0.000 Parser.py:253(cell)
       20    0.000    0.000    0.000    0.000 earley_forest.py:141(is_empty)
        8    0.000    0.000    0.000    0.000 earley_forest.py:444(visit_symbol_node_out)
        1    0.000    0.000    0.000    0.000 Workbook.py:688(_get_sheet_name_location)
        1    0.000    0.000    0.000    0.000 Sheet.py:60(set_cell_contents)
       10    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
        1    0.000    0.000    0.000    0.000 earley.py:284(<listcomp>)
       19    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
        2    0.000    0.000    0.000    0.000 __init__.py:163(match)
        8    0.000    0.000    0.000    0.000 earley_forest.py:571(_call_ambig_func)
       10    0.000    0.000    0.000    0.000 earley_forest.py:158(<listcomp>)
        2    0.000    0.000    0.000    0.000 utils.py:131(check_valid_cell_location)
        1    0.000    0.000    0.000    0.000 earley_forest.py:523(__init__)
        1    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
        1    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
        3    0.000    0.000    0.000    0.000 lexer.py:202(__new__)
       19    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
        2    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
        1    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        1    0.000    0.000    0.000    0.000 Workbook.py:701(add_children_cells)
       21    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
        7    0.000    0.000    0.000    0.000 parse_tree_builder.py:20(__call__)
        1    0.000    0.000    0.001    0.001 earley_forest.py:535(visit)
        1    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        1    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
        1    0.000    0.000    0.001    0.001 earley_forest.py:397(transform)
        3    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
        1    0.000    0.000    0.000    0.000 Workbook.py:912(get_cell_value)
        1    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
        1    0.000    0.000    0.000    0.000 __init__.py:178(sub)
        2    0.000    0.000    0.000    0.000 <frozen abc>:117(__instancecheck__)
        1    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
        1    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
        1    0.000    0.000    0.000    0.000 Workbook.py:715(clean_children_cells)
        1    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
        1    0.000    0.000    0.000    0.000 visitors.py:421(_visit_tree)
        1    0.000    0.000    0.000    0.000 Parser.py:40(fix_formula)
        1    0.000    0.000    0.000    0.000 Sheet.py:104(set_cell_value)
        1    0.000    0.000    0.000    0.000 visitors.py:444(inner)
        8    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
        1    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
        3    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
        3    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        3    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
        1    0.000    0.000    0.000    0.000 earley_forest.py:447(visit_intermediate_node_out)
        1    0.000    0.000    0.000    0.000 visitors.py:415(visit)
        1    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        2    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000    0.002    0.002 lark.py:640(parse)
        1    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
        1    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
        3    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
        1    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
        3    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
        1    0.000    0.000    0.000    0.000 tree.py:61(__init__)
        1    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
        1    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        3    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
        3    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
        1    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
        1    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
        2    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
        1    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        1    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        1    0.000    0.000    0.000    0.000 Cell.py:133(get_children)
        1    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}



##################Running pro_update_formula_pyramid... #######################
for test <function pro_update_formula_pyramid at 0x7fbace662020> total time: 0.0011383149999999998
Total Logs
         229 function calls (217 primitive calls) in 0.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
        2    0.000    0.000    0.000    0.000 Cell.py:81(set_cell_value)
        1    0.000    0.000    0.000    0.000 Workbook.py:728(set_cell_contents)
        2    0.000    0.000    0.000    0.000 Workbook.py:583(recompute_cell_value)
        1    0.000    0.000    0.000    0.000 Workbook.py:639(recompute_cell_and_parents)
        8    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
      4/1    0.000    0.000    0.000    0.000 visitors.py:421(_visit_tree)
        5    0.000    0.000    0.000    0.000 Sheet.py:93(get_cell_value)
        3    0.000    0.000    0.000    0.000 __init__.py:272(_compile)
        4    0.000    0.000    0.000    0.000 Parser.py:40(fix_formula)
        1    0.000    0.000    0.000    0.000 utils.py:179(convert_location_to_idx)
        1    0.000    0.000    0.000    0.000 Parser.py:253(cell)
        1    0.000    0.000    0.000    0.000 Workbook.py:545(get_formula_value)
      4/1    0.000    0.000    0.000    0.000 visitors.py:444(inner)
        1    0.000    0.000    0.000    0.000 Sheet.py:60(set_cell_contents)
      4/1    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
        2    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        2    0.000    0.000    0.000    0.000 __init__.py:163(match)
        1    0.000    0.000    0.000    0.000 Parser.py:211(mul_expr)
        1    0.000    0.000    0.000    0.000 utils.py:307(error_matcher)
       21    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
       30    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
      4/1    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
        8    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
        1    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        1    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
        4    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
        1    0.000    0.000    0.000    0.000 Workbook.py:36(run_func)
        2    0.000    0.000    0.000    0.000 utils.py:131(check_valid_cell_location)
        3    0.000    0.000    0.000    0.000 lexer.py:265(__eq__)
        1    0.000    0.000    0.000    0.000 __init__.py:178(sub)
        1    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
        1    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        2    0.000    0.000    0.000    0.000 Workbook.py:541(get_sheet_name_from_hidden)
        2    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 Workbook.py:912(get_cell_value)
        2    0.000    0.000    0.000    0.000 Workbook.py:576(get_cell_from_location)
       10    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 Workbook.py:715(clean_children_cells)
        4    0.000    0.000    0.000    0.000 Graph.py:137(get_parents_from_cell)
        3    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
       10    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        4    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
        6    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
       12    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        2    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        5    0.000    0.000    0.000    0.000 Cell.py:123(get_value)
        2    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 visitors.py:415(visit)
        1    0.000    0.000    0.000    0.000 Sheet.py:104(set_cell_value)
        1    0.000    0.000    0.000    0.000 Parser.py:243(number)
        9    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        2    0.000    0.000    0.000    0.000 Cell.py:133(get_children)
        3    0.000    0.000    0.000    0.000 Cell.py:126(get_contents)
        2    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
        2    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
        2    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        1    0.000    0.000    0.000    0.000 Parser.py:111(parens)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        1    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
        1    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}



##################Running pro_write_formula_pyramid... #######################
for test <function pro_write_formula_pyramid at 0x7fbace773d80> total time: 2.5978334230000004
Total Logs
         792235 function calls (791977 primitive calls) in 0.265 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      401    0.072    0.000    0.233    0.001 earley.py:78(predict_and_complete)
    68211    0.047    0.000    0.076    0.000 earley_common.py:9(__init__)
149508/149262    0.024    0.000    0.031    0.000 {built-in method builtins.hash}
    45585    0.019    0.000    0.030    0.000 utils.py:345(add)
    79530    0.015    0.000    0.021    0.000 grammar.py:25(__hash__)
    26767    0.011    0.000    0.018    0.000 utils.py:342(__contains__)
    61023    0.011    0.000    0.011    0.000 earley_common.py:28(__eq__)
     2862    0.009    0.000    0.011    0.000 utils.py:339(__init__)
    75516    0.007    0.000    0.007    0.000 earley_common.py:31(__hash__)
    70326    0.007    0.000    0.007    0.000 grammar.py:121(__hash__)
      400    0.005    0.000    0.016    0.000 xearley.py:41(scan)
     9786    0.005    0.000    0.008    0.000 grammar.py:18(__eq__)
    70044    0.005    0.000    0.005    0.000 {built-in method builtins.len}
    68615    0.005    0.000    0.005    0.000 {method 'append' of 'list' objects}
     5836    0.002    0.000    0.003    0.000 lexer.py:265(__eq__)
    17294    0.002    0.000    0.002    0.000 {built-in method builtins.isinstance}
     2862    0.002    0.000    0.002    0.000 {built-in method fromkeys}
      732    0.001    0.000    0.003    0.000 earley_forest.py:50(__init__)
     3906    0.001    0.000    0.002    0.000 parser_frontends.py:184(match)
     4006    0.001    0.000    0.001    0.000 {method 'match' of 're.Pattern' objects}
       99    0.001    0.000    0.250    0.003 xearley.py:39(_parse)
      734    0.001    0.000    0.002    0.000 earley_forest.py:64(add_family)
       99    0.001    0.000    0.262    0.003 Workbook.py:639(recompute_cell_and_parents)
      122    0.001    0.000    0.003    0.000 earley.py:135(<listcomp>)
      734    0.001    0.000    0.001    0.000 earley_forest.py:131(__init__)
     1784    0.000    0.000    0.001    0.000 utils.py:348(__iter__)
       99    0.000    0.000    0.261    0.003 Workbook.py:545(get_formula_value)
       99    0.000    0.000    0.260    0.003 earley.py:262(parse)
      734    0.000    0.000    0.002    0.000 earley_common.py:25(advance)
       99    0.000    0.000    0.265    0.003 Workbook.py:728(set_cell_contents)
        1    0.000    0.000    0.001    0.001 earley_forest.py:283(visit)
      397    0.000    0.000    0.000    0.000 Sheet.py:93(get_cell_value)
       98    0.000    0.000    0.000    0.000 exceptions.py:55(get_context)
     3833    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.deque' objects}
       99    0.000    0.000    0.001    0.000 Sheet.py:60(set_cell_contents)
      301    0.000    0.000    0.000    0.000 lexer.py:213(_future_new)
       98    0.000    0.000    0.001    0.000 exceptions.py:179(__init__)
      754    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
      142    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
       99    0.000    0.000    0.000    0.000 utils.py:179(convert_location_to_idx)
     3532    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      301    0.000    0.000    0.001    0.000 lexer.py:202(__new__)
     1828    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
       99    0.000    0.000    0.260    0.003 parser_frontends.py:100(parse)
       99    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
      301    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
      198    0.000    0.000    0.000    0.000 Cell.py:81(set_cell_value)
      298    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
      499    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
       99    0.000    0.000    0.000    0.000 profiler.py:25(convert_to_excel_coordinates)
       99    0.000    0.000    0.000    0.000 Sheet.py:104(set_cell_value)
       99    0.000    0.000    0.265    0.003 Workbook.py:36(run_func)
      793    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
       99    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
       99    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
      101    0.000    0.000    0.000    0.000 __init__.py:272(_compile)
      700    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
      301    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
      734    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
       99    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
       99    0.000    0.000    0.000    0.000 Workbook.py:541(get_sheet_name_from_hidden)
       23    0.000    0.000    0.000    0.000 earley_forest.py:603(transform_packed_node)
      200    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
      100    0.000    0.000    0.000    0.000 __init__.py:163(match)
      490    0.000    0.000    0.000    0.000 xearley.py:126(<genexpr>)
       45    0.000    0.000    0.000    0.000 earley_forest.py:437(_visit_node_out_helper)
      392    0.000    0.000    0.000    0.000 xearley.py:124(<lambda>)
       99    0.000    0.000    0.000    0.000 Cell.py:46(__init__)
       99    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
      439    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
      100    0.000    0.000    0.000    0.000 utils.py:131(check_valid_cell_location)
       98    0.000    0.000    0.000    0.000 xearley.py:125(<setcomp>)
      198    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
       99    0.000    0.000    0.260    0.003 lark.py:640(parse)
       99    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
      198    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
      301    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      380    0.000    0.000    0.000    0.000 {built-in method builtins.next}
       99    0.000    0.000    0.000    0.000 Workbook.py:715(clean_children_cells)
      296    0.000    0.000    0.000    0.000 Cell.py:126(get_contents)
      301    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
       99    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      298    0.000    0.000    0.000    0.000 Cell.py:123(get_value)
       99    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
      499    0.000    0.000    0.000    0.000 {built-in method builtins.id}
      142    0.000    0.000    0.000    0.000 utils.py:357(__len__)
      303    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
       98    0.000    0.000    0.000    0.000 {built-in method builtins.max}
       98    0.000    0.000    0.000    0.000 CellError.py:11(__init__)
       44    0.000    0.000    0.000    0.000 earley_forest.py:85(children)
       17    0.000    0.000    0.000    0.000 earley_forest.py:581(transform_symbol_node)
       23    0.000    0.000    0.000    0.000 earley_forest.py:631(visit_packed_node_in)
       98    0.000    0.000    0.000    0.000 {method 'rsplit' of 'str' objects}
       22    0.000    0.000    0.000    0.000 earley_forest.py:499(__init__)
      198    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
       22    0.000    0.000    0.000    0.000 earley_forest.py:422(visit_symbol_node_in)
       99    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
       23    0.000    0.000    0.000    0.000 earley_forest.py:638(visit_packed_node_out)
       99    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
       23    0.000    0.000    0.000    0.000 earley_forest.py:427(visit_packed_node_in)
       46    0.000    0.000    0.000    0.000 earley_forest.py:145(sort_key)
      198    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       22    0.000    0.000    0.000    0.000 earley_forest.py:625(visit_symbol_node_in)
       99    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
       17    0.000    0.000    0.000    0.000 earley_forest.py:565(_call_rule_func)
       17    0.000    0.000    0.000    0.000 earley_forest.py:556(_collapse_ambig)
       99    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      114    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
       98    0.000    0.000    0.000    0.000 {method 'expandtabs' of 'str' objects}
       99    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
       99    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
       99    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
       99    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
       23    0.000    0.000    0.000    0.000 earley_forest.py:155(children)
       99    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
       99    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
       67    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
        1    0.000    0.000    0.001    0.001 earley_forest.py:535(visit)
       22    0.000    0.000    0.000    0.000 earley_forest.py:70(load_paths)
       23    0.000    0.000    0.000    0.000 earley_forest.py:450(visit_packed_node_out)
       16    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
       46    0.000    0.000    0.000    0.000 earley_forest.py:141(is_empty)
        1    0.000    0.000    0.000    0.000 Workbook.py:701(add_children_cells)
       17    0.000    0.000    0.000    0.000 earley_forest.py:444(visit_symbol_node_out)
        5    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
       45    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
       14    0.000    0.000    0.000    0.000 parse_tree_builder.py:20(__call__)
        6    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
       23    0.000    0.000    0.000    0.000 earley_forest.py:158(<listcomp>)
       17    0.000    0.000    0.000    0.000 earley_forest.py:571(_call_ambig_func)
       45    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
      4/1    0.000    0.000    0.000    0.000 visitors.py:421(_visit_tree)
        4    0.000    0.000    0.000    0.000 Parser.py:40(fix_formula)
      4/1    0.000    0.000    0.000    0.000 visitors.py:444(inner)
        1    0.000    0.000    0.000    0.000 Parser.py:253(cell)
      4/1    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
        1    0.000    0.000    0.000    0.000 earley.py:284(<listcomp>)
        2    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
        1    0.000    0.000    0.000    0.000 Workbook.py:688(_get_sheet_name_location)
        1    0.000    0.000    0.000    0.000 earley_forest.py:523(__init__)
        5    0.000    0.000    0.000    0.000 earley_forest.py:447(visit_intermediate_node_out)
      4/1    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
        1    0.000    0.000    0.000    0.000 Parser.py:211(mul_expr)
        1    0.000    0.000    0.001    0.001 earley_forest.py:397(transform)
        1    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        1    0.000    0.000    0.000    0.000 __init__.py:178(sub)
        1    0.000    0.000    0.000    0.000 Workbook.py:912(get_cell_value)
       17    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
        4    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
        1    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000    0.000    0.000 Parser.py:243(number)
        1    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
        1    0.000    0.000    0.000    0.000 <frozen abc>:117(__instancecheck__)
        4    0.000    0.000    0.000    0.000 tree.py:61(__init__)
        1    0.000    0.000    0.000    0.000 xearley.py:85(<listcomp>)
        1    0.000    0.000    0.000    0.000 visitors.py:415(visit)
        1    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        6    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
        1    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
        1    0.000    0.000    0.000    0.000 xearley.py:88(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        2    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
        1    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        1    0.000    0.000    0.000    0.000 Parser.py:111(parens)



##################Running pro_cycle_formula_pyramid... #######################
for test <function pro_cycle_formula_pyramid at 0x7fbace7737e0> total time: 1.3627456579999997
Total Logs
         357932 function calls (355494 primitive calls) in 0.142 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.021    0.021    0.023    0.023 Graph.py:330(tarjans)
      400    0.018    0.000    0.072    0.000 earley.py:78(predict_and_complete)
        1    0.010    0.010    0.032    0.032 earley_forest.py:283(visit)
    12865    0.010    0.000    0.016    0.000 earley_common.py:9(__init__)
35778/34144    0.006    0.000    0.008    0.000 {built-in method builtins.hash}
    12158    0.005    0.000    0.011    0.000 grammar.py:18(__eq__)
    12186    0.005    0.000    0.007    0.000 utils.py:345(add)
    18951    0.004    0.000    0.005    0.000 grammar.py:25(__hash__)
    11930    0.004    0.000    0.005    0.000 lexer.py:265(__eq__)
      399    0.004    0.000    0.011    0.000 xearley.py:41(scan)
    34782    0.003    0.000    0.003    0.000 {built-in method builtins.isinstance}
     1828    0.003    0.000    0.007    0.000 earley_forest.py:50(__init__)
     4855    0.003    0.000    0.003    0.000 {built-in method fromkeys}
      816    0.002    0.000    0.012    0.000 earley.py:135(<listcomp>)
    20101    0.002    0.000    0.002    0.000 {built-in method builtins.min}
     1430    0.002    0.000    0.008    0.000 earley_forest.py:437(_visit_node_out_helper)
      715    0.002    0.000    0.003    0.000 earley_forest.py:603(transform_packed_node)
    15595    0.002    0.000    0.002    0.000 grammar.py:121(__hash__)
     3970    0.002    0.000    0.003    0.000 utils.py:342(__contains__)
    16778    0.002    0.000    0.002    0.000 earley_common.py:31(__hash__)
     8674    0.002    0.000    0.002    0.000 earley_common.py:28(__eq__)
    12254    0.002    0.000    0.002    0.000 {built-in method builtins.next}
     4855    0.002    0.000    0.005    0.000 utils.py:339(__init__)
    18279    0.001    0.000    0.001    0.000 {built-in method builtins.len}
     1830    0.001    0.000    0.004    0.000 earley_forest.py:64(add_family)
     1430    0.001    0.000    0.003    0.000 {built-in method builtins.sorted}
    16929    0.001    0.000    0.001    0.000 {method 'append' of 'list' objects}
    15933    0.001    0.000    0.001    0.000 {built-in method builtins.id}
     1830    0.001    0.000    0.002    0.000 earley_forest.py:131(__init__)
     4162    0.001    0.000    0.002    0.000 utils.py:348(__iter__)
     1830    0.001    0.000    0.004    0.000 earley_common.py:25(advance)
     2851    0.001    0.000    0.002    0.000 parser_frontends.py:184(match)
     1430    0.001    0.000    0.005    0.000 earley_forest.py:85(children)
     2543    0.001    0.000    0.001    0.000 {method 'setdefault' of 'dict' objects}
      715    0.001    0.000    0.002    0.000 earley_forest.py:631(visit_packed_node_in)
        1    0.001    0.001    0.084    0.084 xearley.py:39(_parse)
      512    0.001    0.000    0.002    0.000 earley_forest.py:581(transform_symbol_node)
     2952    0.001    0.000    0.001    0.000 {method 'match' of 're.Pattern' objects}
      715    0.001    0.000    0.004    0.000 earley_forest.py:422(visit_symbol_node_in)
      715    0.001    0.000    0.006    0.000 earley_forest.py:638(visit_packed_node_out)
      715    0.001    0.000    0.001    0.000 earley_forest.py:427(visit_packed_node_in)
     1430    0.001    0.000    0.001    0.000 earley_forest.py:145(sort_key)
     5592    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
      715    0.001    0.000    0.006    0.000 earley_forest.py:625(visit_symbol_node_in)
        1    0.000    0.000    0.001    0.001 Workbook.py:617(_set_cycle_detected)
     6244    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.deque' objects}
     3675    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      512    0.000    0.000    0.001    0.000 earley_forest.py:556(_collapse_ambig)
     5940    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      512    0.000    0.000    0.001    0.000 earley_forest.py:565(_call_rule_func)
      715    0.000    0.000    0.001    0.000 earley_forest.py:155(children)
     1430    0.000    0.000    0.000    0.000 utils.py:357(__len__)
     2145    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
      715    0.000    0.000    0.000    0.000 earley_forest.py:499(__init__)
      715    0.000    0.000    0.001    0.000 earley_forest.py:70(load_paths)
      715    0.000    0.000    0.005    0.000 earley_forest.py:450(visit_packed_node_out)
     1430    0.000    0.000    0.000    0.000 earley_forest.py:141(is_empty)
     1829    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
      203    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
      304    0.000    0.000    0.000    0.000 lexer.py:213(_future_new)
     1830    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
      512    0.000    0.000    0.003    0.000 earley_forest.py:444(visit_symbol_node_out)
     1430    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
     1730    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
      304    0.000    0.000    0.000    0.000 lexer.py:202(__new__)
      410    0.000    0.000    0.000    0.000 parse_tree_builder.py:20(__call__)
      403    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
      100    0.000    0.000    0.001    0.000 Parser.py:253(cell)
      512    0.000    0.000    0.000    0.000 earley_forest.py:571(_call_ambig_func)
      204    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
      715    0.000    0.000    0.000    0.000 earley_forest.py:158(<listcomp>)
      304    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
    202/1    0.000    0.000    0.002    0.002 visitors.py:430(<listcomp>)
      412    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
    202/1    0.000    0.000    0.002    0.002 visitors.py:421(_visit_tree)
        1    0.000    0.000    0.115    0.115 parser_frontends.py:100(parse)
    202/1    0.000    0.000    0.002    0.002 visitors.py:444(inner)
      102    0.000    0.000    0.000    0.000 Cell.py:81(set_cell_value)
    202/1    0.000    0.000    0.002    0.002 visitors.py:429(visit_children)
      100    0.000    0.000    0.000    0.000 Workbook.py:576(get_cell_from_location)
      102    0.000    0.000    0.000    0.000 Workbook.py:541(get_sheet_name_from_hidden)
      202    0.000    0.000    0.001    0.000 Parser.py:40(fix_formula)
      100    0.000    0.000    0.000    0.000 Workbook.py:912(get_cell_value)
      400    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
      908    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
      100    0.000    0.000    0.000    0.000 Workbook.py:688(_get_sheet_name_location)
      202    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
      203    0.000    0.000    0.001    0.000 earley_forest.py:447(visit_intermediate_node_out)
      104    0.000    0.000    0.000    0.000 Sheet.py:93(get_cell_value)
      201    0.000    0.000    0.000    0.000 __init__.py:272(_compile)
      304    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
       99    0.000    0.000    0.000    0.000 Parser.py:169(add_expr)
      200    0.000    0.000    0.000    0.000 Graph.py:137(get_parents_from_cell)
      102    0.000    0.000    0.000    0.000 Cell.py:126(get_contents)
      208    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      512    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      102    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
      100    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
        1    0.000    0.000    0.000    0.000 Workbook.py:701(add_children_cells)
      100    0.000    0.000    0.000    0.000 __init__.py:178(sub)
      202    0.000    0.000    0.000    0.000 tree.py:61(__init__)
      101    0.000    0.000    0.000    0.000 __init__.py:163(match)
      204    0.000    0.000    0.000    0.000 Cell.py:123(get_value)
      304    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      304    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
      100    0.000    0.000    0.000    0.000 CellError.py:11(__init__)
      101    0.000    0.000    0.000    0.000 utils.py:131(check_valid_cell_location)
        1    0.000    0.000    0.032    0.032 earley_forest.py:535(visit)
      306    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
        1    0.000    0.000    0.142    0.142 Workbook.py:639(recompute_cell_and_parents)
      204    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      102    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
        1    0.000    0.000    0.142    0.142 Workbook.py:36(run_func)
      100    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        1    0.000    0.000    0.115    0.115 earley.py:262(parse)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.142    0.142 Workbook.py:728(set_cell_contents)
      100    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        1    0.000    0.000    0.000    0.000 earley_forest.py:523(__init__)
      103    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.117    0.117 Workbook.py:545(get_formula_value)
        1    0.000    0.000    0.000    0.000 utils.py:179(convert_location_to_idx)
        1    0.000    0.000    0.000    0.000 Sheet.py:60(set_cell_contents)
        2    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
        1    0.000    0.000    0.000    0.000 earley.py:284(<listcomp>)
        1    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
        1    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
        1    0.000    0.000    0.000    0.000 Parser.py:211(mul_expr)
        1    0.000    0.000    0.032    0.032 earley_forest.py:397(transform)
        1    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        2    0.000    0.000    0.000    0.000 <frozen abc>:117(__instancecheck__)
        1    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
        1    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        1    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
        1    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
        1    0.000    0.000    0.115    0.115 lark.py:640(parse)
        2    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000    0.000    0.000 Sheet.py:104(set_cell_value)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 Workbook.py:715(clean_children_cells)
        1    0.000    0.000    0.000    0.000 xearley.py:85(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'normalize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.002    0.002 visitors.py:415(visit)
        1    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
        1    0.000    0.000    0.000    0.000 Parser.py:243(number)
        1    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
        1    0.000    0.000    0.000    0.000 xearley.py:88(<listcomp>)
        1    0.000    0.000    0.000    0.000 Cell.py:129(set_children)
        2    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
        1    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
        1    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
        1    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
        1    0.000    0.000    0.000    0.000 Cell.py:133(get_children)
        3    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        1    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 Parser.py:111(parens)
        1    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}



##################Running pro_cycle_break_unbreak... #######################
for test <function pro_cycle_break_unbreak at 0x7fbace7739c0> total time: 53.158982243999986
Total Logs
         12724872 function calls (12721108 primitive calls) in 9.825 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      198    5.502    0.028    5.741    0.029 Graph.py:330(tarjans)
    99000    0.399    0.000    2.971    0.000 Workbook.py:583(recompute_cell_value)
   297792    0.202    0.000    0.307    0.000 Sheet.py:93(get_cell_value)
       99    0.192    0.002    0.541    0.005 Workbook.py:617(_set_cycle_detected)
    99198    0.191    0.000    2.064    0.000 Workbook.py:545(get_formula_value)
   198396    0.179    0.000    0.315    0.000 Cell.py:81(set_cell_value)
    99000    0.177    0.000    0.777    0.000 Parser.py:253(cell)
   594693    0.172    0.000    0.225    0.000 utils.py:78(get_hidden_name)
   396000    0.121    0.000    0.121    0.000 Graph.py:137(get_parents_from_cell)
   198000    0.119    0.000    0.284    0.000 Workbook.py:576(get_cell_from_location)
   198297    0.112    0.000    0.202    0.000 Workbook.py:541(get_sheet_name_from_hidden)
    99000    0.111    0.000    0.435    0.000 Workbook.py:912(get_cell_value)
  1086921    0.108    0.000    0.108    0.000 {built-in method builtins.isinstance}
  1091079    0.100    0.000    0.100    0.000 {method 'lower' of 'str' objects}
   199980    0.094    0.000    0.146    0.000 {built-in method builtins.getattr}
      198    0.094    0.000    9.806    0.050 Workbook.py:639(recompute_cell_and_parents)
      990    0.086    0.000    0.310    0.000 earley.py:78(predict_and_complete)
    99198    0.082    0.000    1.279    0.000 visitors.py:421(_visit_tree)
   198198    0.080    0.000    0.109    0.000 __init__.py:272(_compile)
    99198    0.077    0.000    0.349    0.000 Sheet.py:104(set_cell_value)
   595584    0.077    0.000    0.077    0.000 {method 'get' of 'dict' objects}
    99198    0.069    0.000    1.051    0.000 visitors.py:444(inner)
    99198    0.065    0.000    0.065    0.000 Parser.py:97(__init__)
    99198    0.062    0.000    0.095    0.000 utils.py:207(remove_exponent)
    99198    0.059    0.000    0.878    0.000 Parser.py:40(fix_formula)
   396792    0.055    0.000    0.055    0.000 Cell.py:123(get_value)
   198396    0.054    0.000    0.083    0.000 Sheet.py:120(get_cell)
   971288    0.054    0.000    0.054    0.000 {method 'append' of 'list' objects}
   134442    0.054    0.000    0.067    0.000 lexer.py:265(__eq__)
    71082    0.052    0.000    0.084    0.000 earley_common.py:9(__init__)
    99000    0.052    0.000    0.133    0.000 __init__.py:178(sub)
    99198    0.050    0.000    0.135    0.000 __init__.py:163(match)
    99198    0.049    0.000    0.104    0.000 visitors.py:429(visit_children)
    99198    0.044    0.000    0.055    0.000 visitors.py:430(<listcomp>)
   480843    0.043    0.000    0.043    0.000 {built-in method builtins.len}
    99198    0.040    0.000    1.319    0.000 visitors.py:415(visit)
    99198    0.039    0.000    0.174    0.000 utils.py:131(check_valid_cell_location)
   297396    0.037    0.000    0.037    0.000 Cell.py:126(get_contents)
   297099    0.036    0.000    0.036    0.000 {built-in method builtins.min}
   597564    0.034    0.000    0.034    0.000 {method 'pop' of 'list' objects}
   103158    0.032    0.000    0.032    0.000 {method 'match' of 're.Pattern' objects}
    99198    0.032    0.000    0.042    0.000 utils.py:295(get_highest_precedence_error)
    99198    0.032    0.000    0.043    0.000 utils.py:212(is_formula)
168003/164241    0.029    0.000    0.038    0.000 {built-in method builtins.hash}
      198    0.027    0.000    0.089    0.000 earley_forest.py:283(visit)
    99000    0.026    0.000    0.026    0.000 {method 'sub' of 're.Pattern' objects}
   198198    0.023    0.000    0.023    0.000 Cell.py:62(get_cached_formula)
    99297    0.023    0.000    0.042    0.000 <frozen abc>:117(__instancecheck__)
    51084    0.022    0.000    0.033    0.000 utils.py:345(add)
   198297    0.022    0.000    0.022    0.000 Sheet.py:54(get_sheet_name)
    38511    0.019    0.000    0.036    0.000 grammar.py:18(__eq__)
    89496    0.018    0.000    0.025    0.000 grammar.py:25(__hash__)
    99297    0.018    0.000    0.018    0.000 {built-in method _abc._abc_instancecheck}
    99198    0.017    0.000    0.017    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
    99000    0.017    0.000    0.017    0.000 CellError.py:11(__init__)
    99198    0.016    0.000    0.016    0.000 {method 'quantize' of 'decimal.Decimal' objects}
    99198    0.015    0.000    0.015    0.000 Parser.py:108(get_cell_refs)
    99198    0.015    0.000    0.015    0.000 Cell.py:129(set_children)
    99198    0.014    0.000    0.014    0.000 Cell.py:133(get_children)
   108009    0.013    0.000    0.013    0.000 {method 'add' of 'set' objects}
    28413    0.012    0.000    0.020    0.000 utils.py:342(__contains__)
    61182    0.011    0.000    0.011    0.000 earley_common.py:28(__eq__)
    99198    0.009    0.000    0.009    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
      792    0.008    0.000    0.023    0.000 xearley.py:41(scan)
    75339    0.008    0.000    0.008    0.000 grammar.py:121(__hash__)
    79101    0.007    0.000    0.007    0.000 earley_common.py:31(__hash__)
     1782    0.007    0.000    0.033    0.000 earley.py:135(<listcomp>)
      198    0.007    0.000    9.825    0.050 Workbook.py:36(run_func)
      198    0.006    0.000    9.818    0.050 Workbook.py:728(set_cell_contents)
     3366    0.006    0.000    0.012    0.000 earley_forest.py:50(__init__)
     3564    0.006    0.000    0.023    0.000 earley_forest.py:437(_visit_node_out_helper)
     1881    0.005    0.000    0.010    0.000 earley_forest.py:603(transform_packed_node)
    29304    0.004    0.000    0.004    0.000 {built-in method builtins.next}
     3366    0.004    0.000    0.009    0.000 {built-in method builtins.sorted}
     9504    0.003    0.000    0.006    0.000 utils.py:339(__init__)
    39204    0.003    0.000    0.003    0.000 {built-in method builtins.id}
     3564    0.003    0.000    0.010    0.000 earley_forest.py:64(add_family)
     3564    0.003    0.000    0.005    0.000 earley_forest.py:131(__init__)
     9603    0.003    0.000    0.004    0.000 utils.py:348(__iter__)
      198    0.003    0.000    0.434    0.002 earley.py:262(parse)
     9504    0.003    0.000    0.003    0.000 {built-in method fromkeys}
     1485    0.002    0.000    0.006    0.000 earley_forest.py:581(transform_symbol_node)
      198    0.002    0.000    0.335    0.002 xearley.py:39(_parse)
     3366    0.002    0.000    0.013    0.000 earley_forest.py:85(children)
     1881    0.002    0.000    0.007    0.000 earley_forest.py:631(visit_packed_node_in)
     3564    0.002    0.000    0.010    0.000 earley_common.py:25(advance)
     1881    0.002    0.000    0.004    0.000 earley_forest.py:427(visit_packed_node_in)
     1683    0.002    0.000    0.010    0.000 earley_forest.py:422(visit_symbol_node_in)
     1881    0.002    0.000    0.017    0.000 earley_forest.py:638(visit_packed_node_out)
     3960    0.002    0.000    0.003    0.000 parser_frontends.py:184(match)
     5049    0.002    0.000    0.002    0.000 {method 'setdefault' of 'dict' objects}
     3762    0.002    0.000    0.002    0.000 earley_forest.py:145(sort_key)
     1485    0.002    0.000    0.003    0.000 earley_forest.py:565(_call_rule_func)
     1683    0.002    0.000    0.016    0.000 earley_forest.py:625(visit_symbol_node_in)
    12969    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
    16236    0.001    0.000    0.001    0.000 {method 'pop' of 'collections.deque' objects}
     1485    0.001    0.000    0.002    0.000 earley_forest.py:556(_collapse_ambig)
      198    0.001    0.000    0.436    0.002 parser_frontends.py:100(parse)
     1881    0.001    0.000    0.002    0.000 earley_forest.py:155(children)
    15741    0.001    0.000    0.001    0.000 {method 'append' of 'collections.deque' objects}
      198    0.001    0.000    0.001    0.000 utils.py:179(convert_location_to_idx)
     1881    0.001    0.000    0.015    0.000 earley_forest.py:450(visit_packed_node_out)
     5247    0.001    0.000    0.001    0.000 {method 'remove' of 'set' objects}
     3366    0.001    0.000    0.001    0.000 utils.py:357(__len__)
     1683    0.001    0.000    0.001    0.000 earley_forest.py:499(__init__)
     1683    0.001    0.000    0.001    0.000 earley_forest.py:70(load_paths)
     3762    0.001    0.000    0.001    0.000 earley_forest.py:141(is_empty)
     1485    0.001    0.000    0.009    0.000 earley_forest.py:444(visit_symbol_node_out)
      198    0.001    0.000    0.001    0.000 parser_frontends.py:96(_make_lexer_thread)
     1881    0.001    0.000    0.001    0.000 earley_forest.py:158(<listcomp>)
      198    0.001    0.000    0.002    0.000 earley.py:284(<listcomp>)
      198    0.001    0.000    0.003    0.000 Sheet.py:60(set_cell_contents)
      495    0.001    0.000    0.001    0.000 lexer.py:213(_future_new)
     3564    0.001    0.000    0.001    0.000 earley_forest.py:548(_check_cycle)
      396    0.001    0.000    0.001    0.000 earley_forest.py:432(visit_token_node)
      198    0.001    0.000    0.001    0.000 Workbook.py:688(_get_sheet_name_location)
      495    0.000    0.000    0.001    0.000 lexer.py:202(__new__)
     1485    0.000    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
      198    0.000    0.000    0.090    0.000 earley_forest.py:535(visit)
      198    0.000    0.000    0.001    0.000 earley_forest.py:523(__init__)
     3267    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
     1287    0.000    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
     3564    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
      198    0.000    0.000    0.001    0.000 Workbook.py:715(clean_children_cells)
      495    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
      198    0.000    0.000    0.090    0.000 earley_forest.py:397(transform)
      198    0.000    0.000    0.000    0.000 Parser.py:243(number)
      594    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
      198    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
      198    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
      198    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
      198    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
      198    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
      198    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
      198    0.000    0.000    0.436    0.002 lark.py:640(parse)
      792    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
     1485    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      495    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x860f60}
       99    0.000    0.000    0.001    0.000 Workbook.py:701(add_children_cells)
       99    0.000    0.000    0.000    0.000 Graph.py:96(update_child)
      198    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
      198    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      198    0.000    0.000    0.001    0.000 earley_forest.py:447(visit_intermediate_node_out)
      495    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
       99    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      198    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      198    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      198    0.000    0.000    0.000    0.000 tree.py:61(__init__)
      495    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
      495    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
      594    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
      396    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       99    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
      198    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
      396    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      198    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      198    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      198    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      2/1    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
      2/1    0.000    0.000    0.000    0.000 <frozen abc>:121(__subclasscheck__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}



##################Running pro_copy_massive_sheet... #######################
new_parents after computing {'test_sheet': {}}
for test <function pro_copy_massive_sheet at 0x7fbace773920> total time: 35.423112462000006
Total Logs
         18900153 function calls (16800138 primitive calls) in 6.644 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
1600015/1    1.404    0.000    3.422    3.422 copy.py:128(deepcopy)
 200002/1    0.703    0.000    3.422    3.422 copy.py:227(_deepcopy_dict)
  2000007    0.608    0.000    0.608    0.000 {method 'lower' of 'str' objects}
  3700031    0.468    0.000    0.468    0.000 {method 'get' of 'dict' objects}
   100000    0.276    0.000    2.997    0.000 Workbook.py:850(set_cell_contents_copy_sheet)
   100000    0.253    0.000    0.723    0.000 utils.py:307(error_matcher)
   100000    0.237    0.000    0.427    0.000 Workbook.py:815(recompute_cell_and_parents_copy_sheet)
 100001/1    0.219    0.000    3.422    3.422 copy.py:259(_reconstruct)
   100000    0.200    0.000    1.049    0.000 Cell.py:81(set_cell_value)
  2200027    0.163    0.000    0.163    0.000 {built-in method builtins.id}
   100000    0.149    0.000    1.620    0.000 Sheet.py:60(set_cell_contents)
   100000    0.148    0.000    0.230    0.000 utils.py:179(convert_location_to_idx)
   200000    0.137    0.000    0.247    0.000 Sheet.py:93(get_cell_value)
   300005    0.119    0.000    0.165    0.000 copy.py:243(_keep_alive)
 200001/1    0.110    0.000    6.644    6.644 Workbook.py:36(run_func)
  1300008    0.086    0.000    0.086    0.000 copy.py:182(_deepcopy_atomic)
        1    0.081    0.081    6.644    6.644 Workbook.py:1144(copy_sheet)
   100000    0.081    0.000    1.146    0.000 Cell.py:65(set_contents)
   300003    0.075    0.000    0.101    0.000 utils.py:78(get_hidden_name)
   100001    0.072    0.000    0.072    0.000 {method '__reduce_ex__' of 'object' objects}
   900000    0.063    0.000    0.063    0.000 {method 'strip' of 'str' objects}
   100000    0.063    0.000    0.078    0.000 Sheet.py:124(update_extent)
        2    0.061    0.031    0.266    0.133 copy.py:201(_deepcopy_list)
   100000    0.061    0.000    0.111    0.000 Workbook.py:715(clean_children_cells)
   200000    0.055    0.000    0.078    0.000 Sheet.py:120(get_cell)
   200000    0.053    0.000    0.053    0.000 {method 'join' of 'str' objects}
   400002    0.051    0.000    0.051    0.000 {built-in method builtins.isinstance}
   100000    0.050    0.000    0.142    0.000 __init__.py:163(match)
   700001    0.048    0.000    0.048    0.000 {built-in method builtins.len}
        1    0.047    0.047    0.080    0.080 Sheet.py:134(set_sheet_name)
   100000    0.043    0.000    0.062    0.000 __init__.py:272(_compile)
   200002    0.038    0.000    0.148    0.000 copy.py:264(<genexpr>)
   100000    0.038    0.000    0.180    0.000 utils.py:131(check_valid_cell_location)
   500004    0.035    0.000    0.035    0.000 {method 'append' of 'list' objects}
   100000    0.031    0.000    0.041    0.000 utils.py:212(is_formula)
   100000    0.030    0.000    0.030    0.000 {method 'match' of 're.Pattern' objects}
   100001    0.027    0.000    0.042    0.000 copyreg.py:104(__newobj__)
   200000    0.024    0.000    0.024    0.000 Cell.py:123(get_value)
   200003    0.023    0.000    0.023    0.000 {built-in method builtins.getattr}
   100000    0.022    0.000    0.022    0.000 {method 'rstrip' of 'str' objects}
   200003    0.020    0.000    0.020    0.000 {method 'items' of 'dict' objects}
   100001    0.019    0.000    0.019    0.000 {method 'update' of 'dict' objects}
   100000    0.019    0.000    0.019    0.000 Graph.py:330(tarjans)
   100000    0.016    0.000    0.016    0.000 Cell.py:151(set_location)
   200000    0.016    0.000    0.016    0.000 {built-in method builtins.ord}
   100001    0.015    0.000    0.015    0.000 {built-in method __new__ of type object at 0x860f60}
   100000    0.013    0.000    0.013    0.000 {method 'upper' of 'str' objects}
   100000    0.012    0.000    0.012    0.000 Cell.py:126(get_contents)
   100000    0.011    0.000    0.011    0.000 Cell.py:133(get_children)
   100000    0.010    0.000    0.010    0.000 {method 'lstrip' of 'str' objects}
   100001    0.010    0.000    0.010    0.000 {built-in method builtins.hasattr}
   100002    0.010    0.000    0.010    0.000 {built-in method builtins.issubclass}
   100000    0.009    0.000    0.009    0.000 {method 'split' of 'str' objects}
   100000    0.008    0.000    0.008    0.000 Cell.py:147(get_location)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        1    0.000    0.000    0.000    0.000 copy.py:210(_deepcopy_tuple)
        1    0.000    0.000    0.000    0.000 {method 'update' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        4    0.000    0.000    0.000    0.000 <frozen codecs>:327(reset)
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        3    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 copy.py:211(<listcomp>)
        1    0.000    0.000    0.000    0.000 Workbook.py:541(get_sheet_name_from_hidden)
        1    0.000    0.000    0.000    0.000 Workbook.py:506(num_sheets)
        1    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
        1    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 Sheet.py:57(get_sheet_cells)
        1    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        4    0.000    0.000    0.000    0.000 <frozen codecs>:276(reset)
        1    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method '__deepcopy__' of 'decimal.Decimal' objects}



##################Running pro_pascals_triangle_speed... #######################
Total Logs
         2469018 function calls in 0.969 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
    27448    0.098    0.000    0.773    0.000 Workbook.py:583(recompute_cell_value)
     1275    0.094    0.000    0.123    0.000 Graph.py:330(tarjans)
    82122    0.055    0.000    0.083    0.000 Sheet.py:93(get_cell_value)
    26524    0.049    0.000    0.433    0.000 Workbook.py:545(get_formula_value)
    26524    0.047    0.000    0.206    0.000 Parser.py:253(cell)
    27799    0.037    0.000    0.077    0.000 Cell.py:81(set_cell_value)
   111644    0.030    0.000    0.041    0.000 utils.py:78(get_hidden_name)
    26524    0.030    0.000    0.115    0.000 Workbook.py:912(get_cell_value)
     1275    0.025    0.000    0.927    0.001 Workbook.py:639(recompute_cell_and_parents)
   241266    0.025    0.000    0.025    0.000 {built-in method builtins.isinstance}
   268389    0.024    0.000    0.024    0.000 {method 'lower' of 'str' objects}
    53048    0.024    0.000    0.037    0.000 {built-in method builtins.getattr}
    54323    0.022    0.000    0.030    0.000 __init__.py:272(_compile)
    26524    0.020    0.000    0.344    0.000 visitors.py:421(_visit_tree)
    26524    0.020    0.000    0.093    0.000 Sheet.py:104(set_cell_value)
   138644    0.019    0.000    0.019    0.000 {method 'get' of 'dict' objects}
    27448    0.018    0.000    0.040    0.000 Workbook.py:576(get_cell_from_location)
    27799    0.017    0.000    0.027    0.000 utils.py:207(remove_exponent)
    26524    0.017    0.000    0.286    0.000 visitors.py:444(inner)
    26524    0.017    0.000    0.017    0.000 Parser.py:97(__init__)
    27724    0.016    0.000    0.029    0.000 Workbook.py:541(get_sheet_name_from_hidden)
    54896    0.015    0.000    0.015    0.000 Graph.py:137(get_parents_from_cell)
    26524    0.015    0.000    0.237    0.000 Parser.py:40(fix_formula)
    26524    0.014    0.000    0.019    0.000 visitors.py:430(<listcomp>)
    26524    0.014    0.000    0.035    0.000 __init__.py:178(sub)
    27799    0.013    0.000    0.037    0.000 __init__.py:163(match)
    26524    0.013    0.000    0.032    0.000 visitors.py:429(visit_children)
    26524    0.012    0.000    0.016    0.000 utils.py:295(get_highest_precedence_error)
    27799    0.011    0.000    0.048    0.000 utils.py:131(check_valid_cell_location)
    26524    0.011    0.000    0.013    0.000 lexer.py:265(__eq__)
    82122    0.010    0.000    0.010    0.000 Cell.py:123(get_value)
   115945    0.010    0.000    0.010    0.000 {built-in method builtins.len}
    26524    0.010    0.000    0.354    0.000 visitors.py:415(visit)
    28723    0.009    0.000    0.012    0.000 utils.py:212(is_formula)
    29998    0.009    0.000    0.014    0.000 Sheet.py:120(get_cell)
   137240    0.009    0.000    0.009    0.000 {method 'append' of 'list' objects}
    27799    0.009    0.000    0.009    0.000 {method 'match' of 're.Pattern' objects}
    53972    0.007    0.000    0.007    0.000 Cell.py:126(get_contents)
    26524    0.007    0.000    0.007    0.000 {method 'sub' of 're.Pattern' objects}
    82344    0.006    0.000    0.006    0.000 {method 'pop' of 'list' objects}
     1275    0.006    0.000    0.967    0.001 Workbook.py:728(set_cell_contents)
    53048    0.006    0.000    0.006    0.000 Cell.py:62(get_cached_formula)
    27799    0.005    0.000    0.005    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
    27799    0.004    0.000    0.004    0.000 {method 'quantize' of 'decimal.Decimal' objects}
    26524    0.004    0.000    0.004    0.000 Cell.py:129(set_children)
    26524    0.004    0.000    0.004    0.000 Parser.py:108(get_cell_refs)
    27799    0.004    0.000    0.004    0.000 Cell.py:133(get_children)
     1275    0.003    0.000    0.005    0.000 utils.py:307(error_matcher)
    27724    0.003    0.000    0.003    0.000 Sheet.py:54(get_sheet_name)
    26524    0.003    0.000    0.003    0.000 {method 'add' of 'set' objects}
     1275    0.003    0.000    0.004    0.000 utils.py:179(convert_location_to_idx)
    27799    0.003    0.000    0.003    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
     1275    0.002    0.000    0.019    0.000 Sheet.py:60(set_cell_contents)
     1275    0.002    0.000    0.007    0.000 Workbook.py:715(clean_children_cells)
     1225    0.002    0.000    0.003    0.000 Workbook.py:688(_get_sheet_name_location)
     1275    0.002    0.000    0.968    0.001 Workbook.py:36(run_func)
     1275    0.001    0.000    0.011    0.000 Cell.py:65(set_contents)
     1225    0.001    0.000    0.001    0.000 Graph.py:96(update_child)
     1275    0.001    0.000    0.001    0.000 Sheet.py:124(update_extent)
     3775    0.001    0.000    0.001    0.000 {method 'join' of 'str' objects}
    11475    0.001    0.000    0.001    0.000 {method 'strip' of 'str' objects}
     4725    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
     1225    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
     1225    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
     1575    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
     1575    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
     1275    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
     1275    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:118(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



beginning of profiler log written on 2024-03-13 15:15:59.889178 ran on the computer of kevinnn

##################Running pro_load_workbook... #######################
for test <function pro_load_workbook at 0x000002B4D81EA160> total time: 17.976625899999995
Total Logs
         2252602 function calls (2241402 primitive calls) in 1.597 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     2100    0.290    0.000    1.007    0.000 earley.py:78(predict_and_complete)
   103200    0.154    0.000    0.234    0.000 earley_common.py:9(__init__)
      200    0.094    0.000    0.316    0.002 earley_forest.py:283(visit)
267800/259000    0.080    0.000    0.103    0.000 {built-in method builtins.hash}
    89700    0.067    0.000    0.105    0.000 utils.py:345(add)
    76800    0.066    0.000    0.123    0.000 grammar.py:18(__eq__)
     1900    0.054    0.000    0.171    0.000 xearley.py:41(scan)
   146700    0.047    0.000    0.069    0.000 grammar.py:25(__hash__)
    72500    0.041    0.000    0.051    0.000 lexer.py:265(__eq__)
     8200    0.037    0.000    0.090    0.000 earley_forest.py:50(__init__)
    81700    0.036    0.000    0.037    0.000 earley_common.py:28(__eq__)
     4600    0.035    0.000    0.129    0.000 earley.py:135(<listcomp>)
    23500    0.033    0.000    0.040    0.000 typing.py:868(__new__)
   201100    0.031    0.000    0.031    0.000 {built-in method builtins.isinstance}
    38400    0.029    0.000    0.048    0.000 utils.py:342(__contains__)
   137100    0.021    0.000    0.021    0.000 earley_common.py:31(__hash__)
     7200    0.020    0.000    0.085    0.000 earley_forest.py:437(_visit_node_out_helper)
   113200    0.020    0.000    0.020    0.000 grammar.py:121(__hash__)
     3600    0.018    0.000    0.038    0.000 earley_forest.py:603(transform_packed_node)
    22500    0.017    0.000    0.021    0.000 {built-in method fromkeys}
   121800    0.017    0.000    0.017    0.000 {method 'append' of 'list' objects}
   132500    0.016    0.000    0.016    0.000 {built-in method builtins.len}
    61200    0.016    0.000    0.016    0.000 {built-in method builtins.next}
    20100    0.014    0.000    0.014    0.000 {method 'match' of 're.Pattern' objects}
    22500    0.014    0.000    0.035    0.000 utils.py:339(__init__)
     7200    0.014    0.000    0.029    0.000 {built-in method builtins.sorted}
     8400    0.014    0.000    0.042    0.000 earley_forest.py:64(add_family)
     8400    0.012    0.000    0.021    0.000 earley_forest.py:131(__init__)
    80000    0.012    0.000    0.012    0.000 {built-in method builtins.id}
    19300    0.012    0.000    0.025    0.000 parser_frontends.py:184(match)
     8400    0.010    0.000    0.041    0.000 earley_common.py:25(advance)
      200    0.010    0.000    1.188    0.006 xearley.py:39(_parse)
    22700    0.009    0.000    0.014    0.000 utils.py:348(__iter__)
     3600    0.008    0.000    0.022    0.000 earley_forest.py:631(visit_packed_node_in)
     7200    0.008    0.000    0.043    0.000 earley_forest.py:85(children)
    24800    0.008    0.000    0.008    0.000 {built-in method __new__ of type object at 0x00007FFB3714DCB0}
     2800    0.008    0.000    0.020    0.000 earley_forest.py:581(transform_symbol_node)
    11800    0.007    0.000    0.010    0.000 {method 'setdefault' of 'dict' objects}
     3600    0.007    0.000    0.062    0.000 earley_forest.py:638(visit_packed_node_out)
     3600    0.006    0.000    0.034    0.000 earley_forest.py:422(visit_symbol_node_in)
     3600    0.006    0.000    0.057    0.000 earley_forest.py:625(visit_symbol_node_in)
     3600    0.006    0.000    0.013    0.000 earley_forest.py:427(visit_packed_node_in)
      100    0.006    0.000    0.006    0.000 {method 'read' of '_io.TextIOWrapper' objects}
    29900    0.005    0.000    0.005    0.000 {built-in method builtins.iter}
     7200    0.005    0.000    0.008    0.000 earley_forest.py:145(sort_key)
     2800    0.005    0.000    0.011    0.000 earley_forest.py:565(_call_rule_func)
    33300    0.005    0.000    0.005    0.000 {method 'pop' of 'collections.deque' objects}
    18300    0.005    0.000    0.005    0.000 {method 'add' of 'set' objects}
      300    0.005    0.000    1.564    0.005 Workbook.py:649(recompute_cell_and_parents)
     2800    0.004    0.000    0.008    0.000 earley_forest.py:556(_collapse_ambig)
    31700    0.004    0.000    0.004    0.000 {method 'append' of 'collections.deque' objects}
      200    0.004    0.000    1.519    0.008 earley.py:262(parse)
     3600    0.004    0.000    0.004    0.000 earley_forest.py:499(__init__)
     3600    0.004    0.000    0.005    0.000 earley_forest.py:155(children)
     3600    0.003    0.000    0.054    0.000 earley_forest.py:450(visit_packed_node_out)
     3600    0.003    0.000    0.005    0.000 earley_forest.py:70(load_paths)
      300    0.003    0.000    1.581    0.005 Workbook.py:738(set_cell_contents)
      200    0.003    0.000    1.523    0.008 parser_frontends.py:100(parse)
    10800    0.003    0.000    0.003    0.000 {method 'remove' of 'set' objects}
     7200    0.003    0.000    0.004    0.000 utils.py:357(__len__)
     3200    0.003    0.000    0.003    0.000 {built-in method builtins.getattr}
     1300    0.002    0.000    0.004    0.000 lexer.py:213(_future_new)
     7200    0.002    0.000    0.002    0.000 earley_forest.py:141(is_empty)
      500    0.002    0.000    0.005    0.000 Cell.py:81(set_cell_value)
     2800    0.002    0.000    0.031    0.000 earley_forest.py:444(visit_symbol_node_out)
     8300    0.002    0.000    0.002    0.000 earley_forest.py:101(__hash__)
      200    0.002    0.000    1.550    0.008 Workbook.py:555(get_formula_value)
      300    0.002    0.000    0.008    0.000 Parser.py:253(cell)
     1300    0.002    0.000    0.003    0.000 Sheet.py:93(get_cell_value)
      600    0.002    0.000    0.007    0.000 xearley.py:88(<listcomp>)
      800    0.002    0.000    0.003    0.000 earley_forest.py:591(transform_intermediate_node)
      100    0.002    0.000    1.597    0.016 Workbook.py:76(load_workbook)
      300    0.002    0.000    0.003    0.000 utils.py:179(convert_location_to_idx)
     2300    0.002    0.000    0.003    0.000 parse_tree_builder.py:20(__call__)
     1300    0.002    0.000    0.005    0.000 lexer.py:202(__new__)
      300    0.002    0.000    0.009    0.000 Sheet.py:60(set_cell_contents)
     8400    0.002    0.000    0.002    0.000 earley_forest.py:169(__hash__)
     1300    0.002    0.000    0.002    0.000 earley_forest.py:193(__init__)
     3600    0.002    0.000    0.002    0.000 earley_forest.py:158(<listcomp>)
      100    0.002    0.000    0.002    0.000 {method 'seek' of '_io.TextIOWrapper' objects}
     7200    0.002    0.000    0.002    0.000 earley_forest.py:548(_check_cycle)
     1000    0.002    0.000    0.002    0.000 earley_forest.py:432(visit_token_node)
     2800    0.002    0.000    0.002    0.000 earley_forest.py:571(_call_ambig_func)
     7200    0.002    0.000    0.002    0.000 {method 'pop' of 'list' objects}
  800/200    0.002    0.000    0.022    0.000 visitors.py:421(_visit_tree)
  800/200    0.002    0.000    0.020    0.000 visitors.py:444(inner)
      800    0.001    0.000    0.013    0.000 Parser.py:40(fix_formula)
  800/200    0.001    0.000    0.018    0.000 visitors.py:430(<listcomp>)
     5900    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
     2200    0.001    0.000    0.001    0.000 utils.py:354(__bool__)
      900    0.001    0.000    0.002    0.000 re.py:289(_compile)
      300    0.001    0.000    0.004    0.000 Workbook.py:817(get_cell_value)
      200    0.001    0.000    0.317    0.002 earley_forest.py:535(visit)
      300    0.001    0.000    0.002    0.000 Workbook.py:698(_get_sheet_name_location)
      200    0.001    0.000    0.002    0.000 earley_forest.py:523(__init__)
      600    0.001    0.000    0.001    0.000 xearley.py:85(<listcomp>)
      200    0.001    0.000    0.003    0.000 earley.py:284(<listcomp>)
     1300    0.001    0.000    0.001    0.000 utils.py:78(get_hidden_name)
  800/200    0.001    0.000    0.018    0.000 visitors.py:429(visit_children)
      400    0.001    0.000    1.584    0.004 Workbook.py:37(run_func)
      200    0.001    0.000    0.001    0.000 parser_frontends.py:96(_make_lexer_thread)
      100    0.001    0.000    0.003    0.000 Workbook.py:879(new_sheet)
      200    0.001    0.000    0.003    0.000 Workbook.py:711(add_children_cells)
      100    0.001    0.000    0.001    0.000 decoder.py:343(raw_decode)
      600    0.001    0.000    0.003    0.000 utils.py:131(check_valid_cell_location)
      200    0.001    0.000    0.001    0.000 Parser.py:243(number)
      200    0.001    0.000    0.001    0.000 Parser.py:97(__init__)
     1300    0.001    0.000    0.001    0.000 {method 'group' of 're.Match' objects}
     2800    0.001    0.000    0.001    0.000 {built-in method builtins.hasattr}
      800    0.001    0.000    0.001    0.000 utils.py:295(get_highest_precedence_error)
      600    0.001    0.000    0.003    0.000 re.py:188(match)
      900    0.001    0.000    0.001    0.000 {method 'join' of 'str' objects}
      300    0.001    0.000    0.001    0.000 Workbook.py:551(get_sheet_name_from_hidden)
      300    0.001    0.000    0.001    0.000 utils.py:207(remove_exponent)
      200    0.001    0.000    0.318    0.002 earley_forest.py:397(transform)
     2300    0.001    0.000    0.001    0.000 {method 'get' of 'dict' objects}
      800    0.001    0.000    0.006    0.000 earley_forest.py:447(visit_intermediate_node_out)
      200    0.001    0.000    0.001    0.000 earley_forest.py:390(__init__)
      100    0.001    0.000    0.001    0.000 Parser.py:211(mul_expr)
      800    0.001    0.000    0.001    0.000 tree.py:61(__init__)
      300    0.001    0.000    0.001    0.000 Graph.py:68(add_connection)
      300    0.001    0.000    0.003    0.000 Cell.py:65(set_contents)
      300    0.001    0.000    0.001    0.000 Sheet.py:124(update_extent)
      200    0.001    0.000    0.001    0.000 Parser.py:169(add_expr)
     2700    0.001    0.000    0.001    0.000 {method 'end' of 're.Match' objects}
      100    0.001    0.000    0.002    0.000 decoder.py:332(decode)
      300    0.001    0.000    0.004    0.000 Cell.py:46(__init__)
      100    0.001    0.000    0.001    0.000 utils.py:307(error_matcher)
      300    0.001    0.000    0.001    0.000 {method 'sub' of 're.Pattern' objects}
      200    0.001    0.000    0.003    0.000 Sheet.py:104(set_cell_value)
      300    0.000    0.000    0.002    0.000 re.py:203(sub)
      200    0.000    0.000    1.524    0.008 lark.py:640(parse)
      300    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
      100    0.000    0.000    0.001    0.000 utils.py:96(check_new_name)
      100    0.000    0.000    0.001    0.000 Workbook.py:58(__init__)
      200    0.000    0.000    0.001    0.000 parse_tree_builder.py:145(__call__)
      100    0.000    0.000    0.003    0.000 __init__.py:299(loads)
     1300    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
     1200    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
      600    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
      300    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
      300    0.000    0.000    0.001    0.000 Workbook.py:725(clean_children_cells)
      200    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
      100    0.000    0.000    0.001    0.000 cp1252.py:22(decode)
      300    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
     1000    0.000    0.000    0.000    0.000 Cell.py:125(get_value)
     1600    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
      100    0.000    0.000    0.000    0.000 {built-in method _codecs.charmap_decode}
      300    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
      600    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
      300    0.000    0.000    0.001    0.000 abc.py:96(__instancecheck__)
      200    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      300    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
      200    0.000    0.000    0.022    0.000 visitors.py:415(visit)
      100    0.000    0.000    0.000    0.000 Sheet.py:25(__init__)
      300    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
      200    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
     1000    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      100    0.000    0.000    0.000    0.000 Workbook.py:868(recompute_sheet_parents)
      100    0.000    0.000    0.000    0.000 Graph.py:128(get_sheet_parents)
      100    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
      100    0.000    0.000    0.000    0.000 Workbook.py:516(num_sheets)
      200    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
      600    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
      600    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      200    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      100    0.000    0.000    0.000    0.000 Graph.py:121(has_sheet)
      200    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
      400    0.000    0.000    0.000    0.000 Cell.py:128(get_contents)
      200    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
      300    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      300    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      300    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      300    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      200    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
      100    0.000    0.000    0.000    0.000 Graph.py:15(__init__)
      100    0.000    0.000    0.000    0.000 Graph.py:124(add_sheet)
      300    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
      200    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
      100    0.000    0.000    0.000    0.000 codecs.py:276(reset)
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_copy_sheet... #######################
for test <function pro_copy_sheet at 0x000002B4D81EA280> total time: 6.8345349
Total Logs
         993194 function calls (988594 primitive calls) in 0.624 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      800    0.105    0.000    0.386    0.000 earley.py:78(predict_and_complete)
    47800    0.062    0.000    0.094    0.000 earley_common.py:9(__init__)
      100    0.036    0.000    0.120    0.001 earley_forest.py:283(visit)
120300/116800    0.032    0.000    0.040    0.000 {built-in method builtins.hash}
    39400    0.026    0.000    0.041    0.000 utils.py:345(add)
    32300    0.024    0.000    0.045    0.000 grammar.py:18(__eq__)
      100    0.021    0.000    0.624    0.006 Workbook.py:1049(copy_sheet)
    65500    0.018    0.000    0.027    0.000 grammar.py:25(__hash__)
      700    0.017    0.000    0.055    0.000 xearley.py:41(scan)
    30300    0.015    0.000    0.019    0.000 lexer.py:265(__eq__)
    39000    0.015    0.000    0.015    0.000 earley_common.py:28(__eq__)
     3200    0.013    0.000    0.035    0.000 earley_forest.py:50(__init__)
     1800    0.013    0.000    0.047    0.000 earley.py:135(<listcomp>)
     9100    0.012    0.000    0.015    0.000 typing.py:868(__new__)
    18100    0.012    0.000    0.020    0.000 utils.py:342(__contains__)
    83400    0.011    0.000    0.011    0.000 {built-in method builtins.isinstance}
     8700    0.009    0.000    0.010    0.000 {built-in method fromkeys}
    60600    0.008    0.000    0.008    0.000 earley_common.py:31(__hash__)
     3000    0.007    0.000    0.032    0.000 earley_forest.py:437(_visit_node_out_helper)
    51700    0.007    0.000    0.007    0.000 grammar.py:121(__hash__)
    55500    0.007    0.000    0.007    0.000 {method 'append' of 'list' objects}
     1500    0.007    0.000    0.014    0.000 earley_forest.py:603(transform_packed_node)
    60500    0.006    0.000    0.006    0.000 {built-in method builtins.len}
    25400    0.006    0.000    0.006    0.000 {built-in method builtins.next}
     3000    0.006    0.000    0.011    0.000 {built-in method builtins.sorted}
     8700    0.005    0.000    0.015    0.000 utils.py:339(__init__)
     7400    0.005    0.000    0.005    0.000 {method 'match' of 're.Pattern' objects}
     3300    0.005    0.000    0.014    0.000 earley_forest.py:64(add_family)
    33300    0.005    0.000    0.005    0.000 {built-in method builtins.id}
     3300    0.004    0.000    0.007    0.000 earley_forest.py:131(__init__)
     7100    0.004    0.000    0.008    0.000 parser_frontends.py:184(match)
      100    0.004    0.000    0.445    0.004 xearley.py:39(_parse)
     9000    0.003    0.000    0.005    0.000 utils.py:348(__iter__)
     3300    0.003    0.000    0.014    0.000 earley_common.py:25(advance)
     1500    0.003    0.000    0.008    0.000 earley_forest.py:631(visit_packed_node_in)
     3000    0.003    0.000    0.017    0.000 earley_forest.py:85(children)
     1200    0.003    0.000    0.007    0.000 earley_forest.py:581(transform_symbol_node)
     9600    0.003    0.000    0.003    0.000 {built-in method __new__ of type object at 0x00007FFB3714DCB0}
     1500    0.003    0.000    0.023    0.000 earley_forest.py:638(visit_packed_node_out)
     1500    0.002    0.000    0.014    0.000 earley_forest.py:422(visit_symbol_node_in)
     4700    0.002    0.000    0.003    0.000 {method 'setdefault' of 'dict' objects}
     1500    0.002    0.000    0.022    0.000 earley_forest.py:625(visit_symbol_node_in)
     1500    0.002    0.000    0.005    0.000 earley_forest.py:427(visit_packed_node_in)
      200    0.002    0.000    0.590    0.003 Workbook.py:649(recompute_cell_and_parents)
     1200    0.002    0.000    0.004    0.000 earley_forest.py:565(_call_rule_func)
    12000    0.002    0.000    0.002    0.000 {built-in method builtins.iter}
     3000    0.002    0.000    0.003    0.000 earley_forest.py:145(sort_key)
      100    0.002    0.000    0.572    0.006 earley.py:262(parse)
    13900    0.002    0.000    0.002    0.000 {method 'pop' of 'collections.deque' objects}
     7600    0.002    0.000    0.002    0.000 {method 'add' of 'set' objects}
     1200    0.002    0.000    0.003    0.000 earley_forest.py:556(_collapse_ambig)
    13300    0.002    0.000    0.002    0.000 {method 'append' of 'collections.deque' objects}
      200    0.002    0.000    0.599    0.003 Workbook.py:738(set_cell_contents)
     1500    0.001    0.000    0.002    0.000 earley_forest.py:499(__init__)
     1500    0.001    0.000    0.002    0.000 earley_forest.py:155(children)
     9050    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
      300    0.001    0.000    0.003    0.000 Cell.py:81(set_cell_value)
      100    0.001    0.000    0.574    0.006 parser_frontends.py:100(parse)
     1400    0.001    0.000    0.001    0.000 {built-in method builtins.getattr}
     4500    0.001    0.000    0.001    0.000 {method 'remove' of 'set' objects}
     1500    0.001    0.000    0.002    0.000 earley_forest.py:70(load_paths)
     1500    0.001    0.000    0.020    0.000 earley_forest.py:450(visit_packed_node_out)
      200    0.001    0.000    0.005    0.000 Sheet.py:60(set_cell_contents)
      200    0.001    0.000    0.001    0.000 utils.py:179(convert_location_to_idx)
     3000    0.001    0.000    0.001    0.000 utils.py:357(__len__)
      100    0.001    0.000    0.584    0.006 Workbook.py:555(get_formula_value)
     3000    0.001    0.000    0.001    0.000 earley_forest.py:141(is_empty)
      500    0.001    0.000    0.001    0.000 lexer.py:213(_future_new)
      700    0.001    0.000    0.001    0.000 Sheet.py:93(get_cell_value)
     1200    0.001    0.000    0.012    0.000 earley_forest.py:444(visit_symbol_node_out)
     3200    0.001    0.000    0.001    0.000 earley_forest.py:101(__hash__)
     1000    0.001    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
  400/100    0.001    0.000    0.624    0.006 Workbook.py:37(run_func)
      100    0.001    0.000    0.003    0.000 Parser.py:253(cell)
      300    0.001    0.000    0.001    0.000 earley_forest.py:591(transform_intermediate_node)
      500    0.001    0.000    0.002    0.000 lexer.py:202(__new__)
      100    0.001    0.000    0.002    0.000 Workbook.py:879(new_sheet)
      200    0.001    0.000    0.002    0.000 xearley.py:88(<listcomp>)
     1500    0.001    0.000    0.001    0.000 earley_forest.py:158(<listcomp>)
      400    0.001    0.000    0.001    0.000 earley_forest.py:432(visit_token_node)
     3000    0.001    0.000    0.001    0.000 earley_forest.py:548(_check_cycle)
     1200    0.001    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
     5350    0.001    0.000    0.001    0.000 {method 'keys' of 'collections.OrderedDict' objects}
     3300    0.001    0.000    0.001    0.000 earley_forest.py:169(__hash__)
     1000    0.001    0.000    0.001    0.000 utils.py:78(get_hidden_name)
     3000    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
  300/100    0.001    0.000    0.008    0.000 visitors.py:421(_visit_tree)
      500    0.001    0.000    0.001    0.000 earley_forest.py:193(__init__)
  300/100    0.001    0.000    0.007    0.000 visitors.py:444(inner)
      400    0.000    0.000    0.001    0.000 re.py:289(_compile)
      300    0.000    0.000    0.002    0.000 utils.py:131(check_valid_cell_location)
      300    0.000    0.000    0.005    0.000 Parser.py:40(fix_formula)
  300/100    0.000    0.000    0.006    0.000 visitors.py:430(<listcomp>)
      100    0.000    0.000    0.001    0.000 earley.py:284(<listcomp>)
      100    0.000    0.000    0.001    0.000 utils.py:96(check_new_name)
      300    0.000    0.000    0.001    0.000 Workbook.py:551(get_sheet_name_from_hidden)
      100    0.000    0.000    0.001    0.000 parser_frontends.py:96(_make_lexer_thread)
      100    0.000    0.000    0.121    0.001 earley_forest.py:535(visit)
      100    0.000    0.000    0.002    0.000 Workbook.py:817(get_cell_value)
      100    0.000    0.000    0.001    0.000 earley_forest.py:523(__init__)
      100    0.000    0.000    0.001    0.000 utils.py:307(error_matcher)
      200    0.000    0.000    0.001    0.000 utils.py:207(remove_exponent)
      100    0.000    0.000    0.000    0.000 Parser.py:243(number)
      800    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
      500    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
      100    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
      100    0.000    0.000    0.001    0.000 Workbook.py:698(_get_sheet_name_location)
      200    0.000    0.000    0.002    0.000 Cell.py:65(set_contents)
  300/100    0.000    0.000    0.006    0.000 visitors.py:429(visit_children)
      300    0.000    0.000    0.001    0.000 re.py:188(match)
      100    0.000    0.000    0.001    0.000 Workbook.py:711(add_children_cells)
      200    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
     1300    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      200    0.000    0.000    0.000    0.000 xearley.py:85(<listcomp>)
      100    0.000    0.000    0.000    0.000 Parser.py:169(add_expr)
     1200    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      200    0.000    0.000    0.002    0.000 Cell.py:46(__init__)
      100    0.000    0.000    0.121    0.001 earley_forest.py:397(transform)
      100    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
      100    0.000    0.000    0.574    0.006 lark.py:640(parse)
      500    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      300    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
      100    0.000    0.000    0.001    0.000 Sheet.py:104(set_cell_value)
      300    0.000    0.000    0.002    0.000 earley_forest.py:447(visit_intermediate_node_out)
      300    0.000    0.000    0.000    0.000 tree.py:61(__init__)
      100    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      200    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
      100    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
      100    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
      900    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
      200    0.000    0.000    0.000    0.000 Workbook.py:516(num_sheets)
      400    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
      200    0.000    0.000    0.000    0.000 Workbook.py:725(clean_children_cells)
      200    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
      100    0.000    0.000    0.001    0.000 re.py:203(sub)
     1200    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
      100    0.000    0.000    0.000    0.000 Sheet.py:25(__init__)
      100    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
      100    0.000    0.000    0.000    0.000 Graph.py:128(get_sheet_parents)
      792    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
      500    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
      200    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
      200    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
      200    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
      400    0.000    0.000    0.000    0.000 Cell.py:128(get_contents)
      100    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      400    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
      100    0.000    0.000    0.008    0.000 visitors.py:415(visit)
      200    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
      400    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
      500    0.000    0.000    0.000    0.000 Cell.py:125(get_value)
      100    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      100    0.000    0.000    0.000    0.000 Workbook.py:868(recompute_sheet_parents)
      100    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 Graph.py:121(has_sheet)
      300    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      400    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      400    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      100    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
      100    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      100    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
      100    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
      100    0.000    0.000    0.000    0.000 Graph.py:124(add_sheet)
      200    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      200    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      100    0.000    0.000    0.000    0.000 Sheet.py:57(get_sheet_cells)
      200    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
      200    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      100    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
      100    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_rename_sheet... #######################
for test <function pro_rename_sheet at 0x000002B4D81EA3A0> total time: 19.103060799999984
Total Logs
         2642192 function calls (2521392 primitive calls) in 1.964 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
100800/100400    0.174    0.000    0.802    0.000 visitors.py:111(_call_userfunc)
    12000    0.143    0.000    0.248    0.000 tree.py:137(iter_subtrees)
     4000    0.124    0.000    0.352    0.000 visitors.py:293(transform)
    86500    0.107    0.000    0.128    0.000 typing.py:868(__new__)
     6500    0.100    0.000    1.026    0.000 visitors.py:278(transform)
197300/153200    0.099    0.000    0.154    0.000 {built-in method builtins.getattr}
164200/150400    0.098    0.000    0.752    0.000 visitors.py:143(_transform_children)
    72500    0.080    0.000    0.215    0.000 visitors.py:171(__default__)
   517800    0.073    0.000    0.076    0.000 {built-in method builtins.isinstance}
    85500    0.063    0.000    0.089    0.000 tree.py:147(<listcomp>)
      100    0.041    0.000    1.830    0.018 load_grammar.py:690(compile)
    20100    0.038    0.000    0.045    0.000 tree.py:179(expand_kids_by_data)
    82300    0.038    0.000    0.038    0.000 tree.py:61(__init__)
    59100    0.034    0.000    0.633    0.000 visitors.py:275(_transform_tree)
     4100    0.030    0.000    0.030    0.000 {built-in method builtins.compile}
94900/53400    0.029    0.000    0.043    0.000 {built-in method builtins.hash}
     4100    0.027    0.000    0.148    0.000 load_grammar.py:566(_literal_to_pattern)
     6300    0.025    0.000    0.045    0.000 functools.py:34(update_wrapper)
     4100    0.023    0.000    0.037    0.000 load_grammar.py:536(_rfind)
    86600    0.022    0.000    0.022    0.000 {built-in method __new__ of type object at 0x00007FFB3714DCB0}
    67200    0.022    0.000    0.031    0.000 grammar.py:25(__hash__)
    78800    0.021    0.000    0.022    0.000 tree.py:66(meta)
   159000    0.021    0.000    0.021    0.000 {built-in method builtins.id}
10500/4500    0.019    0.000    0.140    0.000 load_grammar.py:389(expansion)
    26900    0.019    0.000    0.034    0.000 grammar.py:18(__eq__)
     2800    0.019    0.000    0.096    0.000 tree_matcher.py:106(_build_recons_rules)
     4100    0.019    0.000    0.073    0.000 load_grammar.py:540(eval_escaping)
14600/8400    0.018    0.000    0.199    0.000 visitors.py:342(_call_userfunc)
   105100    0.015    0.000    0.015    0.000 {method 'append' of 'list' objects}
     9300    0.013    0.000    0.022    0.000 visitors.py:130(_call_userfunc_token)
5800/1200    0.013    0.000    0.045    0.000 visitors.py:155(_transform_tree)
4000/1100    0.013    0.000    0.233    0.000 visitors.py:362(visit)
    15500    0.013    0.000    0.058    0.000 load_grammar.py:384(_flatten)
     8400    0.012    0.000    0.034    0.000 grammar.py:103(__init__)
     4100    0.012    0.000    0.051    0.000 ast.py:51(literal_eval)
     6300    0.011    0.000    0.066    0.000 visitors.py:481(__get__)
     3500    0.011    0.000    0.048    0.000 load_grammar.py:420(expansions)
    83400    0.011    0.000    0.011    0.000 {built-in method builtins.len}
13900/12900    0.010    0.000    0.030    0.000 tree.py:134(__hash__)
1500/1300    0.010    0.000    0.098    0.000 load_grammar.py:405(<listcomp>)
     1100    0.010    0.000    0.018    0.000 load_grammar.py:450(pattern)
    16100    0.010    0.000    0.012    0.000 lexer.py:265(__eq__)
    48300    0.009    0.000    0.009    0.000 {method 'pop' of 'list' objects}
     3500    0.009    0.000    0.019    0.000 tree_matcher.py:121(<listcomp>)
      100    0.008    0.000    1.944    0.019 tree_matcher.py:89(__init__)
     4100    0.008    0.000    0.167    0.000 load_grammar.py:601(literal)
     6300    0.008    0.000    0.054    0.000 visitors.py:470(__init__)
     4900    0.008    0.000    0.030    0.000 tree_matcher.py:57(make_recons_rule)
     2500    0.008    0.000    1.016    0.000 visitors.py:258(transform)
     6300    0.007    0.000    0.216    0.000 visitors.py:500(_vargs_inline)
     6300    0.006    0.000    0.209    0.000 visitors.py:478(__call__)
    31500    0.006    0.000    0.006    0.000 {built-in method builtins.setattr}
     4700    0.006    0.000    0.006    0.000 lexer.py:41(__init__)
     2500    0.006    0.000    0.258    0.000 load_grammar.py:674(nr_deepcopy_tree)
     4300    0.006    0.000    0.016    0.000 {built-in method builtins.max}
      100    0.005    0.000    0.015    0.000 load_grammar.py:793(<setcomp>)
    12300    0.005    0.000    0.009    0.000 load_grammar.py:537(<genexpr>)
    10500    0.005    0.000    0.009    0.000 load_grammar.py:759(<genexpr>)
     4100    0.004    0.000    0.035    0.000 ast.py:30(parse)
      100    0.004    0.000    0.005    0.000 Graph.py:28(rename_sheet)
     8200    0.004    0.000    0.004    0.000 {method 'rfind' of 'str' objects}
      100    0.004    0.000    0.007    0.000 tree_matcher.py:28(_best_from_group)
  300/200    0.004    0.000    1.966    0.010 Workbook.py:37(run_func)
     1500    0.004    0.000    0.015    0.000 utils.py:190(<listcomp>)
     3500    0.004    0.000    0.011    0.000 load_grammar.py:798(<lambda>)
     5400    0.003    0.000    0.005    0.000 lexer.py:50(__hash__)
     5100    0.003    0.000    0.003    0.000 grammar.py:69(__init__)
     2000    0.003    0.000    0.022    0.000 load_grammar.py:631(expansions)
      100    0.003    0.000    1.960    0.020 Workbook.py:947(rename_sheet)
     1000    0.003    0.000    0.011    0.000 load_grammar.py:346(expr)
      100    0.003    0.000    0.433    0.004 load_grammar.py:710(<listcomp>)
    12000    0.003    0.000    0.003    0.000 {method 'values' of 'collections.OrderedDict' objects}
      100    0.003    0.000    0.003    0.000 Workbook.py:1014(move_sheet)
     6400    0.003    0.000    0.003    0.000 {method 'update' of 'dict' objects}
     2000    0.003    0.000    0.005    0.000 load_grammar.py:637(<lambda>)
    11300    0.003    0.000    0.003    0.000 {method 'replace' of 'str' objects}
     4100    0.003    0.000    0.004    0.000 {built-in method builtins.all}
      200    0.002    0.000    0.014    0.000 utils.py:271(<listcomp>)
     4600    0.002    0.000    0.003    0.000 load_grammar.py:668(value)
      100    0.002    0.000    0.003    0.000 load_grammar.py:806(<setcomp>)
      100    0.002    0.000    0.007    0.000 tree_matcher.py:115(<setcomp>)
      600    0.002    0.000    0.008    0.000 {method 'sort' of 'list' objects}
    11600    0.002    0.000    0.002    0.000 tree.py:175(<lambda>)
     1500    0.002    0.000    0.032    0.000 tree.py:169(find_pred)
     2000    0.002    0.000    0.007    0.000 lexer.py:81(to_regexp)
     4900    0.002    0.000    0.002    0.000 tree_matcher.py:17(__init__)
     2100    0.002    0.000    0.007    0.000 lexer.py:125(__init__)
     4000    0.002    0.000    0.007    0.000 {method 'add' of 'set' objects}
     4800    0.002    0.000    0.002    0.000 grammar.py:42(__init__)
     5000    0.002    0.000    0.002    0.000 {method 'startswith' of 'str' objects}
      100    0.002    0.000    0.006    0.000 tree_matcher.py:108(<setcomp>)
     3500    0.002    0.000    0.002    0.000 load_grammar.py:621(expansion)
     2000    0.002    0.000    0.002    0.000 {method 'translate' of 'str' objects}
     1500    0.002    0.000    0.017    0.000 utils.py:184(dedup_list)
     3500    0.002    0.000    0.007    0.000 grammar.py:22(__ne__)
     1400    0.002    0.000    0.010    0.000 tree_matcher.py:61(make_recons_rule_to_term)
     6900    0.002    0.000    0.002    0.000 tree_matcher.py:12(is_discarded_terminal)
     4100    0.002    0.000    0.002    0.000 ast.py:76(_convert)
     2100    0.002    0.000    0.002    0.000 {built-in method _abc._abc_instancecheck}
     2000    0.002    0.000    0.004    0.000 re.py:270(escape)
     9300    0.002    0.000    0.002    0.000 visitors.py:178(__default_token__)
      100    0.002    0.000    0.127    0.001 load_grammar.py:693(<listcomp>)
     5400    0.002    0.000    0.002    0.000 grammar.py:15(__init__)
     2500    0.001    0.000    0.009    0.000 load_grammar.py:639(<genexpr>)
      500    0.001    0.000    0.010    0.000 {method 'join' of 'str' objects}
     2100    0.001    0.000    0.001    0.000 lexer.py:70(_get_flags)
     3100    0.001    0.000    0.001    0.000 visitors.py:108(__init__)
     1500    0.001    0.000    0.001    0.000 lexer.py:53(__eq__)
      100    0.001    0.000    0.002    0.000 tree_matcher.py:116(<setcomp>)
     8900    0.001    0.000    0.001    0.000 grammar.py:121(__hash__)
     4900    0.001    0.000    0.001    0.000 load_grammar.py:572(<genexpr>)
     1500    0.001    0.000    0.033    0.000 tree.py:173(find_data)
     3500    0.001    0.000    0.001    0.000 {built-in method builtins.any}
     2100    0.001    0.000    0.003    0.000 abc.py:96(__instancecheck__)
      100    0.001    0.000    0.004    0.000 load_grammar.py:246(_add_recurse_rule)
    10300    0.001    0.000    0.001    0.000 {method 'items' of 'dict' objects}
     6500    0.001    0.000    0.001    0.000 typing.py:1149(cast)
      100    0.001    0.000    0.133    0.001 load_grammar.py:694(<listcomp>)
      100    0.001    0.000    1.946    0.019 reconstruct.py:80(__init__)
      100    0.001    0.000    0.003    0.000 Workbook.py:879(new_sheet)
      100    0.001    0.000    0.002    0.000 load_grammar.py:446(<dictcomp>)
      100    0.001    0.000    0.003    0.000 copy.py:66(copy)
     1200    0.001    0.000    0.046    0.000 visitors.py:159(transform)
      600    0.001    0.000    0.002    0.000 load_grammar.py:411(alias)
     2000    0.001    0.000    0.001    0.000 lexer.py:88(max_width)
     4100    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
      200    0.001    0.000    0.001    0.000 utils.py:96(check_new_name)
     2000    0.001    0.000    0.001    0.000 lexer.py:84(min_width)
     2100    0.001    0.000    0.001    0.000 load_grammar.py:809(<lambda>)
     3500    0.001    0.000    0.001    0.000 load_grammar.py:431(expansion)
      100    0.001    0.000    0.007    0.000 load_grammar.py:375(maybe)
     3000    0.001    0.000    0.001    0.000 load_grammar.py:663(value)
     3000    0.001    0.000    0.001    0.000 load_grammar.py:617(pattern)
      400    0.001    0.000    0.002    0.000 grammar.py:124(__eq__)
     2500    0.001    0.000    0.001    0.000 tree_matcher.py:44(<lambda>)
      100    0.001    0.000    0.001    0.000 load_grammar.py:642(expr)
      500    0.001    0.000    0.001    0.000 load_grammar.py:613(_make_joined_pattern)
      500    0.001    0.000    0.001    0.000 load_grammar.py:640(<setcomp>)
      900    0.001    0.000    0.001    0.000 load_grammar.py:210(_args_as_int)
      300    0.000    0.000    0.000    0.000 Graph.py:128(get_sheet_parents)
      100    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
     1100    0.000    0.000    0.000    0.000 tree.py:32(__init__)
      600    0.000    0.000    0.001    0.000 utils.py:78(get_hidden_name)
      200    0.000    0.000    0.001    0.000 visitors.py:163(__mul__)
      100    0.000    0.000    0.003    0.000 load_grammar.py:443(__init__)
      100    0.000    0.000    0.000    0.000 reconstruct.py:83(<dictcomp>)
      100    0.000    0.000    0.000    0.000 load_grammar.py:235(_name_rule)
      100    0.000    0.000    0.001    0.000 load_grammar.py:763(<listcomp>)
      100    0.000    0.000    0.001    0.000 copy.py:258(_reconstruct)
      200    0.000    0.000    0.001    0.000 visitors.py:263(__mul__)
     1490    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
      800    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
     2700    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
      100    0.000    0.000    0.001    0.000 load_grammar.py:240(_add_rule)
      100    0.000    0.000    0.001    0.000 load_grammar.py:516(__init__)
      100    0.000    0.000    0.009    0.000 tree_matcher.py:42(_best_rules_from_group)
     1600    0.000    0.000    0.000    0.000 {built-in method builtins.next}
      100    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
      100    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
      200    0.000    0.000    0.000    0.000 load_grammar.py:201(_will_not_get_removed)
     1200    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
     1100    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
      200    0.000    0.000    0.014    0.000 utils.py:269(classify_bool)
      100    0.000    0.000    0.000    0.000 Parser.py:349(__init__)
      400    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 Sheet.py:25(__init__)
      200    0.000    0.000    0.001    0.000 load_grammar.py:219(expansion)
      200    0.000    0.000    0.001    0.000 {built-in method builtins.sum}
      200    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.OrderedDict' objects}
      200    0.000    0.000    0.000    0.000 Workbook.py:516(num_sheets)
      200    0.000    0.000    0.000    0.000 Workbook.py:868(recompute_sheet_parents)
      200    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      100    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
      200    0.000    0.000    0.001    0.000 load_grammar.py:222(expansions)
      400    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
      100    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
      100    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
      100    0.000    0.000    0.000    0.000 Sheet.py:134(set_sheet_name)
      100    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
      100    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
      100    0.000    0.000    0.000    0.000 copyreg.py:90(__newobj__)
      100    0.000    0.000    0.000    0.000 Graph.py:121(has_sheet)
      500    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
      100    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
      100    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
      100    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
      100    0.000    0.000    0.000    0.000 Graph.py:124(add_sheet)
      200    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
      100    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      100    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
      100    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_copy_cells... #######################
for test <function pro_copy_cells at 0x000002B4D81EA4C0> total time: 38.36283289999998
Total Logs
         5536003 function calls (5401157 primitive calls) in 3.865 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      198    0.248    0.001    0.522    0.003 grammar_analysis.py:78(calculate_sets)
101079/100683    0.171    0.000    0.792    0.000 visitors.py:111(_call_userfunc)
   224334    0.154    0.000    0.269    0.000 grammar.py:18(__eq__)
    12177    0.142    0.000    0.243    0.000 tree.py:137(iter_subtrees)
     1485    0.136    0.000    0.526    0.000 earley.py:78(predict_and_complete)
   101572    0.129    0.000    0.155    0.000 typing.py:868(__new__)
   917829    0.127    0.000    0.130    0.000 {built-in method builtins.isinstance}
   399069    0.122    0.000    0.177    0.000 grammar.py:25(__hash__)
528858/481140    0.121    0.000    0.156    0.000 {built-in method builtins.hash}
     3960    0.117    0.000    0.335    0.000 visitors.py:293(transform)
205116/161457    0.103    0.000    0.157    0.000 {built-in method builtins.getattr}
     6732    0.101    0.000    1.024    0.000 visitors.py:278(transform)
165528/151470    0.100    0.000    0.756    0.000 visitors.py:143(_transform_children)
    54153    0.081    0.000    0.123    0.000 earley_common.py:9(__init__)
    71874    0.077    0.000    0.210    0.000 visitors.py:171(__default__)
   128395    0.075    0.000    0.095    0.000 lexer.py:265(__eq__)
      396    0.068    0.000    0.232    0.001 earley_forest.py:283(visit)
    19998    0.061    0.000    0.180    0.000 grammar_analysis.py:187(_expand_rule)
    85635    0.061    0.000    0.087    0.000 tree.py:147(<listcomp>)
     4851    0.048    0.000    0.081    0.000 earley_forest.py:50(__init__)
     4059    0.047    0.000    0.047    0.000 {built-in method builtins.compile}
    64251    0.043    0.000    0.043    0.000 grammar_analysis.py:70(update_set)
       99    0.040    0.000    1.776    0.018 load_grammar.py:690(compile)
    83358    0.038    0.000    0.038    0.000 tree.py:61(__init__)
    19899    0.036    0.000    0.044    0.000 tree.py:179(expand_kids_by_data)
    59499    0.034    0.000    0.627    0.000 visitors.py:275(_transform_tree)
    46035    0.034    0.000    0.054    0.000 utils.py:345(add)
286252/286245    0.033    0.000    0.033    0.000 {built-in method builtins.len}
    12375    0.032    0.000    0.230    0.000 utils.py:275(bfs)
   222453    0.030    0.000    0.030    0.000 {built-in method builtins.id}
    58208    0.028    0.000    0.073    0.000 {method 'add' of 'set' objects}
   103453    0.027    0.000    0.027    0.000 {built-in method __new__ of type object at 0x00007FFB3714DCB0}
     4059    0.026    0.000    0.142    0.000 load_grammar.py:566(_literal_to_pattern)
   181201    0.026    0.000    0.026    0.000 {method 'append' of 'list' objects}
    34254    0.024    0.000    0.032    0.000 grammar_analysis.py:17(__init__)
     6237    0.024    0.000    0.043    0.000 functools.py:34(update_wrapper)
    80685    0.023    0.000    0.024    0.000 tree.py:66(meta)
   122661    0.022    0.000    0.022    0.000 grammar.py:121(__hash__)
      396    0.020    0.000    0.040    0.000 utils.py:23(classify)
10395/4455    0.019    0.000    0.138    0.000 load_grammar.py:389(expansion)
     2772    0.019    0.000    0.095    0.000 tree_matcher.py:106(_build_recons_rules)
     2673    0.018    0.000    0.065    0.000 earley.py:135(<listcomp>)
     4059    0.018    0.000    0.088    0.000 load_grammar.py:540(eval_escaping)
    39699    0.018    0.000    0.018    0.000 earley_common.py:28(__eq__)
14454/8316    0.017    0.000    0.196    0.000 visitors.py:342(_call_userfunc)
      198    0.017    0.000    0.881    0.004 earley.py:32(__init__)
     9999    0.016    0.000    0.031    0.000 visitors.py:130(_call_userfunc_token)
    34254    0.016    0.000    0.038    0.000 grammar_analysis.py:45(__hash__)
      594    0.015    0.000    0.050    0.000 xearley.py:41(scan)
     4950    0.014    0.000    0.066    0.000 earley_forest.py:437(_visit_node_out_helper)
      198    0.014    0.000    0.635    0.003 grammar_analysis.py:141(__init__)
6039/1287    0.014    0.000    0.056    0.000 visitors.py:155(_transform_tree)
     2475    0.013    0.000    0.249    0.000 grammar_analysis.py:180(expand_rule)
     8712    0.013    0.000    0.036    0.000 grammar.py:103(__init__)
      396    0.013    0.000    0.910    0.002 earley.py:262(parse)
     2475    0.013    0.000    0.033    0.000 earley_forest.py:603(transform_packed_node)
    17325    0.013    0.000    0.021    0.000 utils.py:342(__contains__)
    15345    0.013    0.000    0.057    0.000 load_grammar.py:384(_flatten)
3960/1089    0.012    0.000    0.228    0.000 visitors.py:362(visit)
    45738    0.012    0.000    0.012    0.000 {built-in method builtins.next}
     4059    0.012    0.000    0.067    0.000 ast.py:51(literal_eval)
 4950/297    0.012    0.000    0.030    0.000 copy.py:128(deepcopy)
     6237    0.011    0.000    0.063    0.000 visitors.py:481(__get__)
    33858    0.011    0.000    0.011    0.000 grammar_analysis.py:28(next)
13959/12969    0.010    0.000    0.030    0.000 tree.py:134(__hash__)
    65538    0.010    0.000    0.010    0.000 earley_common.py:31(__hash__)
     3465    0.010    0.000    0.047    0.000 load_grammar.py:420(expansions)
     4950    0.010    0.000    0.021    0.000 {built-in method builtins.sorted}
      495    0.010    0.000    0.049    0.000 earley.py:188(scan)
    13761    0.010    0.000    0.012    0.000 {built-in method fromkeys}
    53943    0.010    0.000    0.010    0.000 {method 'pop' of 'list' objects}
1485/1287    0.010    0.000    0.096    0.000 load_grammar.py:405(<listcomp>)
    13761    0.009    0.000    0.021    0.000 utils.py:339(__init__)
     1089    0.009    0.000    0.017    0.000 load_grammar.py:450(pattern)
       99    0.009    0.000    1.890    0.019 tree_matcher.py:89(__init__)
     4950    0.008    0.000    0.025    0.000 earley_forest.py:64(add_family)
     3465    0.008    0.000    0.018    0.000 tree_matcher.py:121(<listcomp>)
     8213    0.008    0.000    0.008    0.000 {method 'match' of 're.Pattern' objects}
     4059    0.008    0.000    0.161    0.000 load_grammar.py:601(literal)
     4851    0.008    0.000    0.029    0.000 tree_matcher.py:57(make_recons_rule)
     6237    0.008    0.000    0.052    0.000 visitors.py:470(__init__)
      297    0.008    0.000    1.173    0.004 tree_matcher.py:148(match_tree)
     2475    0.007    0.000    0.984    0.000 visitors.py:258(transform)
     4950    0.007    0.000    0.012    0.000 earley_forest.py:131(__init__)
    14949    0.007    0.000    0.010    0.000 utils.py:348(__iter__)
     6237    0.006    0.000    0.201    0.000 visitors.py:478(__call__)
     6237    0.006    0.000    0.208    0.000 visitors.py:500(_vargs_inline)
    31185    0.006    0.000    0.006    0.000 {built-in method builtins.setattr}
       99    0.006    0.000    3.866    0.039 Workbook.py:284(transfer_cells)
     4950    0.006    0.000    0.031    0.000 earley_forest.py:85(children)
     4950    0.006    0.000    0.024    0.000 earley_common.py:25(advance)
     2475    0.006    0.000    0.015    0.000 earley_forest.py:631(visit_packed_node_in)
     2475    0.006    0.000    0.248    0.000 load_grammar.py:674(nr_deepcopy_tree)
      297    0.006    0.000    0.009    0.000 tree_matcher.py:28(_best_from_group)
       99    0.006    0.000    3.872    0.039 Workbook.py:432(copy_cells)
     4455    0.006    0.000    0.015    0.000 {built-in method builtins.max}
     1980    0.005    0.000    0.015    0.000 earley_forest.py:581(transform_symbol_node)
       99    0.005    0.000    0.015    0.000 load_grammar.py:793(<setcomp>)
     2079    0.005    0.000    0.005    0.000 earley.py:58(<listcomp>)
     4653    0.005    0.000    0.005    0.000 lexer.py:41(__init__)
     3168    0.005    0.000    0.017    0.000 tree_matcher.py:48(_match)
    12177    0.005    0.000    0.009    0.000 load_grammar.py:537(<genexpr>)
    24750    0.005    0.000    0.005    0.000 {built-in method builtins.iter}
      297    0.005    0.000    0.139    0.000 earley.py:171(_parse)
     2475    0.005    0.000    0.049    0.000 earley_forest.py:638(visit_packed_node_out)
      792    0.005    0.000    0.007    0.000 utils.py:179(convert_location_to_idx)
    10395    0.005    0.000    0.009    0.000 load_grammar.py:759(<genexpr>)
      990    0.005    0.000    0.008    0.000 reconstruct.py:33(__default__)
     2475    0.005    0.000    0.025    0.000 earley_forest.py:422(visit_symbol_node_in)
     7326    0.004    0.000    0.006    0.000 {method 'setdefault' of 'dict' objects}
     2475    0.004    0.000    0.041    0.000 earley_forest.py:625(visit_symbol_node_in)
     4059    0.004    0.000    0.052    0.000 ast.py:30(parse)
     2475    0.004    0.000    0.009    0.000 earley_forest.py:427(visit_packed_node_in)
     4059    0.004    0.000    0.018    0.000 load_grammar.py:536(_rfind)
      297    0.004    0.000    0.696    0.002 Workbook.py:649(recompute_cell_and_parents)
      297    0.004    0.000    0.717    0.002 Workbook.py:738(set_cell_contents)
     4249    0.004    0.000    0.006    0.000 re.py:289(_compile)
     1980    0.004    0.000    0.013    0.000 earley_forest.py:565(_call_rule_func)
    27423    0.004    0.000    0.004    0.000 {method 'append' of 'collections.deque' objects}
     3659    0.004    0.000    0.014    0.000 re.py:188(match)
     3465    0.004    0.000    0.011    0.000 load_grammar.py:798(<lambda>)
     8118    0.004    0.000    0.004    0.000 {method 'rfind' of 'str' objects}
     1485    0.004    0.000    0.015    0.000 utils.py:190(<listcomp>)
     5445    0.004    0.000    0.004    0.000 grammar.py:69(__init__)
       99    0.004    0.000    0.499    0.005 xearley.py:39(_parse)
     4950    0.004    0.000    0.005    0.000 earley_forest.py:145(sort_key)
      198    0.004    0.000    0.010    0.000 grammar_analysis.py:82(<setcomp>)
      297    0.003    0.000    0.005    0.000 Graph.py:330(tarjans)
    22176    0.003    0.000    0.003    0.000 {method 'pop' of 'collections.deque' objects}
     5346    0.003    0.000    0.005    0.000 lexer.py:50(__hash__)
     4554    0.003    0.000    0.007    0.000 parser_frontends.py:184(match)
     1980    0.003    0.000    0.006    0.000 earley_forest.py:556(_collapse_ambig)
     1980    0.003    0.000    0.021    0.000 load_grammar.py:631(expansions)
      590    0.003    0.000    0.013    0.000 Parser.py:253(cell)
     1774    0.003    0.000    0.005    0.000 Sheet.py:93(get_cell_value)
     2178    0.003    0.000    0.012    0.000 tree_matcher.py:65(parse_rulename)
     6635    0.003    0.000    0.003    0.000 {method 'update' of 'dict' objects}
      990    0.003    0.000    0.011    0.000 load_grammar.py:346(expr)
    12177    0.003    0.000    0.003    0.000 {method 'values' of 'collections.OrderedDict' objects}
    14243    0.003    0.000    0.003    0.000 {method 'get' of 'dict' objects}
     2572    0.003    0.000    0.011    0.000 {method 'join' of 'str' objects}
      891    0.003    0.000    0.004    0.000 utils.py:194(convert_idx_to_location)
     2475    0.003    0.000    0.003    0.000 earley_forest.py:499(__init__)
  495/396    0.003    0.000    0.027    0.000 copy.py:258(_reconstruct)
       99    0.003    0.000    0.413    0.004 load_grammar.py:710(<listcomp>)
      198    0.003    0.000    0.005    0.000 earley.py:52(<setcomp>)
    11187    0.003    0.000    0.003    0.000 {method 'replace' of 'str' objects}
     6534    0.003    0.000    0.003    0.000 grammar.py:42(__init__)
      792    0.003    0.000    0.009    0.000 {method 'sort' of 'list' objects}
     1485    0.003    0.000    0.004    0.000 lexer.py:213(_future_new)
      592    0.003    0.000    0.006    0.000 Cell.py:81(set_cell_value)
      295    0.003    0.000    0.674    0.002 Workbook.py:555(get_formula_value)
      792    0.003    0.000    0.006    0.000 tree_matcher.py:21(__call__)
      198    0.003    0.000    0.003    0.000 tree_matcher.py:178(<dictcomp>)
     4059    0.003    0.000    0.004    0.000 {built-in method builtins.all}
     2475    0.003    0.000    0.006    0.000 typing.py:255(inner)
     1980    0.003    0.000    0.005    0.000 load_grammar.py:637(<lambda>)
     1485    0.003    0.000    0.017    0.000 utils.py:184(dedup_list)
      198    0.003    0.000    0.014    0.000 utils.py:271(<listcomp>)
     4554    0.002    0.000    0.003    0.000 load_grammar.py:668(value)
       99    0.002    0.000    0.003    0.000 load_grammar.py:806(<setcomp>)
      198    0.002    0.000    0.004    0.000 earley.py:53(<setcomp>)
     2475    0.002    0.000    0.004    0.000 earley_forest.py:155(children)
     2475    0.002    0.000    0.003    0.000 typing.py:720(__hash__)
       99    0.002    0.000    0.007    0.000 tree_matcher.py:115(<setcomp>)
  495/297    0.002    0.000    0.021    0.000 copy.py:226(_deepcopy_dict)
     6732    0.002    0.000    0.002    0.000 grammar.py:15(__init__)
     2475    0.002    0.000    0.004    0.000 earley_forest.py:70(load_paths)
      295    0.002    0.000    0.002    0.000 Parser.py:211(mul_expr)
     7821    0.002    0.000    0.002    0.000 tree_matcher.py:12(is_discarded_terminal)
     4851    0.002    0.000    0.002    0.000 tree_matcher.py:17(__init__)
    11484    0.002    0.000    0.002    0.000 tree.py:175(<lambda>)
     1980    0.002    0.000    0.007    0.000 lexer.py:81(to_regexp)
      392    0.002    0.000    0.027    0.000 Workbook.py:593(recompute_cell_value)
     2277    0.002    0.000    0.002    0.000 {built-in method _abc._abc_instancecheck}
     2475    0.002    0.000    0.044    0.000 earley_forest.py:450(visit_packed_node_out)
     7425    0.002    0.000    0.002    0.000 {method 'remove' of 'set' objects}
     1980    0.002    0.000    0.002    0.000 {method 'translate' of 'str' objects}
     4950    0.002    0.000    0.002    0.000 {method 'startswith' of 'str' objects}
     2079    0.002    0.000    0.007    0.000 lexer.py:125(__init__)
       99    0.002    0.000    0.005    0.000 tree_matcher.py:108(<setcomp>)
     4950    0.002    0.000    0.003    0.000 utils.py:357(__len__)
     1485    0.002    0.000    0.006    0.000 lexer.py:202(__new__)
     1881    0.002    0.000    0.003    0.000 copy.py:242(_keep_alive)
     9900    0.002    0.000    0.002    0.000 {method 'popleft' of 'collections.deque' objects}
     3465    0.002    0.000    0.002    0.000 load_grammar.py:621(expansion)
     3465    0.002    0.000    0.007    0.000 grammar.py:22(__ne__)
     1386    0.002    0.000    0.010    0.000 tree_matcher.py:61(make_recons_rule_to_term)
     8875    0.002    0.000    0.002    0.000 {method 'lower' of 'str' objects}
      590    0.002    0.000    0.007    0.000 Workbook.py:817(get_cell_value)
  885/295    0.002    0.000    0.027    0.000 visitors.py:421(_visit_tree)
  792/396    0.002    0.000    1.199    0.003 reconstruct.py:85(_reconstruct)
     4950    0.002    0.000    0.002    0.000 earley_forest.py:141(is_empty)
     1485    0.002    0.000    0.030    0.000 tree.py:169(find_pred)
     2561    0.002    0.000    0.002    0.000 utils.py:78(get_hidden_name)
     4059    0.002    0.000    0.002    0.000 ast.py:76(_convert)
       99    0.002    0.000    0.121    0.001 load_grammar.py:693(<listcomp>)
     9801    0.002    0.000    0.002    0.000 visitors.py:178(__default_token__)
     1481    0.002    0.000    0.008    0.000 utils.py:131(check_valid_cell_location)
      396    0.002    0.000    0.003    0.000 earley_forest.py:523(__init__)
  885/295    0.002    0.000    0.025    0.000 visitors.py:444(inner)
     1980    0.002    0.000    0.023    0.000 earley_forest.py:444(visit_symbol_node_out)
      891    0.002    0.000    0.002    0.000 earley_forest.py:432(visit_token_node)
  885/295    0.002    0.000    0.021    0.000 visitors.py:430(<listcomp>)
     6039    0.002    0.000    0.002    0.000 grammar_analysis.py:149(<lambda>)
      297    0.001    0.000    0.009    0.000 Sheet.py:60(set_cell_contents)
       99    0.001    0.000    0.640    0.006 parser_frontends.py:100(parse)
     1980    0.001    0.000    0.004    0.000 re.py:270(escape)
      885    0.001    0.000    0.018    0.000 Parser.py:40(fix_formula)
     2277    0.001    0.000    0.003    0.000 abc.py:96(__instancecheck__)
      396    0.001    0.000    0.233    0.001 earley_forest.py:535(visit)
      495    0.001    0.000    0.001    0.000 {method '__reduce_ex__' of 'object' objects}
     2475    0.001    0.000    0.008    0.000 load_grammar.py:639(<genexpr>)
     1089    0.001    0.000    0.002    0.000 earley_forest.py:193(__init__)
      295    0.001    0.000    0.001    0.000 Parser.py:97(__init__)
     2079    0.001    0.000    0.001    0.000 lexer.py:70(_get_flags)
       99    0.001    0.000    0.002    0.000 tree_matcher.py:116(<setcomp>)
     1485    0.001    0.000    0.001    0.000 lexer.py:53(__eq__)
     2970    0.001    0.000    0.001    0.000 visitors.py:108(__init__)
     4950    0.001    0.000    0.001    0.000 earley_forest.py:548(_check_cycle)
      394    0.001    0.000    0.002    0.000 Workbook.py:698(_get_sheet_name_location)
      396    0.001    0.000    0.235    0.001 earley_forest.py:397(transform)
      495    0.001    0.000    0.002    0.000 earley_forest.py:591(transform_intermediate_node)
      297    0.001    0.000    0.003    0.000 Workbook.py:725(clean_children_cells)
     2475    0.001    0.000    0.001    0.000 earley_forest.py:158(<listcomp>)
      396    0.001    0.000    0.004    0.000 earley.py:284(<listcomp>)
     1980    0.001    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
   297/99    0.001    0.000    0.009    0.000 tree.py:206(__deepcopy__)
     4455    0.001    0.000    0.001    0.000 earley_forest.py:101(__hash__)
     1485    0.001    0.000    0.031    0.000 tree.py:173(find_data)
     3465    0.001    0.000    0.001    0.000 {built-in method builtins.any}
       99    0.001    0.000    0.004    0.000 load_grammar.py:246(_add_recurse_rule)
     6039    0.001    0.000    0.001    0.000 grammar_analysis.py:172(<lambda>)
       99    0.001    0.000    0.130    0.001 load_grammar.py:694(<listcomp>)
      396    0.001    0.000    0.001    0.000 earley_forest.py:390(__init__)
     4851    0.001    0.000    0.001    0.000 load_grammar.py:572(<genexpr>)
  396/198    0.001    0.000    0.008    0.000 copy.py:200(_deepcopy_list)
  885/295    0.001    0.000    0.021    0.000 visitors.py:429(visit_children)
      297    0.001    0.000    0.002    0.000 earley.py:245(<setcomp>)
     4950    0.001    0.000    0.001    0.000 earley_forest.py:169(__hash__)
     3366    0.001    0.000    0.001    0.000 tree_matcher.py:44(<lambda>)
      689    0.001    0.000    0.002    0.000 Workbook.py:586(get_cell_from_location)
      198    0.001    0.000    0.005    0.000 Parser.py:389(CELLREF_NO_ABS)
     6435    0.001    0.000    0.001    0.000 typing.py:1149(cast)
      198    0.001    0.000    0.022    0.000 grammar_analysis.py:175(<dictcomp>)
       99    0.001    0.000    1.891    0.019 reconstruct.py:80(__init__)
      198    0.001    0.000    0.003    0.000 Parser.py:382(cell)
     1287    0.001    0.000    0.057    0.000 visitors.py:159(transform)
     2178    0.001    0.000    0.001    0.000 tree.py:32(__init__)
      198    0.001    0.000    0.003    0.000 grammar_analysis.py:145(<dictcomp>)
       99    0.001    0.000    0.003    0.000 copy.py:66(copy)
       99    0.001    0.000    0.002    0.000 load_grammar.py:446(<dictcomp>)
      297    0.001    0.000    0.013    0.000 tree_matcher.py:42(_best_rules_from_group)
      594    0.001    0.000    0.002    0.000 load_grammar.py:411(alias)
      990    0.001    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
      297    0.001    0.000    0.718    0.002 Workbook.py:37(run_func)
      590    0.001    0.000    0.003    0.000 re.py:203(sub)
      394    0.001    0.000    0.002    0.000 utils.py:207(remove_exponent)
     2079    0.001    0.000    0.001    0.000 load_grammar.py:809(<lambda>)
      198    0.001    0.000    0.001    0.000 grammar_analysis.py:60(__init__)
       99    0.001    0.000    0.007    0.000 load_grammar.py:375(maybe)
     3465    0.001    0.000    0.001    0.000 load_grammar.py:431(expansion)
      297    0.001    0.000    0.003    0.000 Cell.py:65(set_contents)
      590    0.001    0.000    0.001    0.000 {method 'sub' of 're.Pattern' objects}
     1283    0.001    0.000    0.001    0.000 Sheet.py:120(get_cell)
     2970    0.001    0.000    0.001    0.000 load_grammar.py:663(value)
     1980    0.001    0.000    0.001    0.000 lexer.py:88(max_width)
      885    0.001    0.000    0.001    0.000 utils.py:295(get_highest_precedence_error)
     2178    0.001    0.000    0.001    0.000 {method 'groups' of 're.Match' objects}
      396    0.001    0.000    0.002    0.000 grammar.py:124(__eq__)
      198    0.001    0.000    0.002    0.000 grammar_analysis.py:166(<dictcomp>)
      792    0.001    0.000    0.001    0.000 reconstruct.py:15(is_iter_empty)
     2377    0.001    0.000    0.001    0.000 {built-in method builtins.hasattr}
      297    0.001    0.000    0.001    0.000 Sheet.py:124(update_extent)
     2970    0.001    0.000    0.001    0.000 load_grammar.py:617(pattern)
     1980    0.001    0.000    0.001    0.000 lexer.py:84(min_width)
      295    0.001    0.000    0.004    0.000 Sheet.py:104(set_cell_value)
     1089    0.001    0.000    0.001    0.000 utils.py:354(__bool__)
       99    0.001    0.000    0.001    0.000 load_grammar.py:642(expr)
       99    0.001    0.000    0.001    0.000 parser_frontends.py:96(_make_lexer_thread)
       99    0.001    0.000    1.200    0.012 reconstruct.py:96(reconstruct)
      495    0.001    0.000    0.001    0.000 load_grammar.py:640(<setcomp>)
      198    0.001    0.000    0.001    0.000 grammar_analysis.py:163(<dictcomp>)
      198    0.001    0.000    0.023    0.000 grammar_analysis.py:160(<dictcomp>)
      297    0.001    0.000    0.002    0.000 lexer.py:262(__deepcopy__)
       99    0.001    0.000    0.002    0.000 Workbook.py:711(add_children_cells)
      495    0.001    0.000    0.001    0.000 load_grammar.py:613(_make_joined_pattern)
      689    0.001    0.000    0.001    0.000 utils.py:212(is_formula)
      891    0.001    0.000    0.001    0.000 load_grammar.py:210(_args_as_int)
       99    0.001    0.000    0.001    0.000 utils.py:307(error_matcher)
     1771    0.001    0.000    0.001    0.000 Cell.py:125(get_value)
      198    0.001    0.000    0.001    0.000 visitors.py:163(__mul__)
     1881    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      784    0.000    0.000    0.000    0.000 Graph.py:137(get_parents_from_cell)
     3564    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
      792    0.000    0.000    0.002    0.000 copy.py:263(<genexpr>)
       99    0.000    0.000    0.003    0.000 load_grammar.py:443(__init__)
       99    0.000    0.000    0.000    0.000 load_grammar.py:235(_name_rule)
       99    0.000    0.000    0.000    0.000 reconstruct.py:83(<dictcomp>)
     2871    0.000    0.000    0.000    0.000 copy.py:182(_deepcopy_atomic)
      394    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
      495    0.000    0.000    0.004    0.000 earley_forest.py:447(visit_intermediate_node_out)
      199    0.000    0.000    0.001    0.000 Workbook.py:551(get_sheet_name_from_hidden)
     1083    0.000    0.000    0.000    0.000 Cell.py:128(get_contents)
      396    0.000    0.000    0.001    0.000 copyreg.py:90(__newobj__)
      196    0.000    0.000    0.001    0.000 Graph.py:96(update_child)
       99    0.000    0.000    0.001    0.000 load_grammar.py:763(<listcomp>)
     1189    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
      792    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
      594    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      295    0.000    0.000    0.027    0.000 visitors.py:415(visit)
      198    0.000    0.000    0.001    0.000 visitors.py:263(__mul__)
     1089    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
      198    0.000    0.000    0.000    0.000 common.py:83(__init__)
       99    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
      891    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
      297    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      394    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      394    0.000    0.000    0.000    0.000 {method 'normalize' of 'decimal.Decimal' objects}
      198    0.000    0.000    0.001    0.000 load_grammar.py:201(_will_not_get_removed)
       99    0.000    0.000    0.001    0.000 load_grammar.py:516(__init__)
     1876    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
     1586    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       99    0.000    0.000    0.641    0.006 lark.py:640(parse)
      198    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      594    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
      198    0.000    0.000    0.014    0.000 utils.py:269(classify_bool)
       99    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
      891    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
     1287    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
      198    0.000    0.000    0.001    0.000 load_grammar.py:219(expansion)
      396    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
       99    0.000    0.000    0.001    0.000 load_grammar.py:240(_add_rule)
      594    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
       99    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
      198    0.000    0.000    0.001    0.000 {built-in method builtins.sum}
      495    0.000    0.000    0.000    0.000 {method 'clear' of 'set' objects}
       99    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
      693    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
     1089    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
      495    0.000    0.000    0.000    0.000 earley.py:254(<setcomp>)
      590    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
      211    0.000    0.000    0.000    0.000 {built-in method builtins.min}
      297    0.000    0.000    0.000    0.000 tree_matcher.py:74(__init__)
      396    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
      891    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
       99    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
       99    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
       99    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
      198    0.000    0.000    0.001    0.000 load_grammar.py:222(expansions)
      295    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
      490    0.000    0.000    0.000    0.000 Cell.py:135(get_children)
       99    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
      199    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
      594    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      4/1    0.000    0.000    0.000    0.000 sre_parse.py:493(_parse)
      394    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
      297    0.000    0.000    0.000    0.000 tree_matcher.py:77(lex)
       99    0.000    0.000    0.000    0.000 Parser.py:378(__init__)
      295    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
      196    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
       99    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
       99    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
       99    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
      6/1    0.000    0.000    0.000    0.000 sre_compile.py:71(_compile)
      4/1    0.000    0.000    0.000    0.000 sre_parse.py:435(_parse_sub)
       99    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
      198    0.000    0.000    0.000    0.000 {method '__deepcopy__' of 'decimal.Decimal' objects}
      8/3    0.000    0.000    0.000    0.000 sre_parse.py:174(getwidth)
       34    0.000    0.000    0.000    0.000 sre_parse.py:164(__getitem__)
       17    0.000    0.000    0.000    0.000 sre_parse.py:233(__next)
        1    0.000    0.000    0.001    0.001 sre_compile.py:759(compile)
        1    0.000    0.000    0.000    0.000 sre_compile.py:276(_optimize_charset)
        3    0.000    0.000    0.000    0.000 Cell.py:46(__init__)
      2/1    0.000    0.000    0.000    0.000 sre_compile.py:461(_get_literal_prefix)
        1    0.000    0.000    0.000    0.000 sre_compile.py:536(_compile_info)
        1    0.000    0.000    0.000    0.000 sre_parse.py:937(parse)
       11    0.000    0.000    0.000    0.000 sre_parse.py:286(tell)
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 enum.py:938(__and__)
       15    0.000    0.000    0.000    0.000 sre_parse.py:249(match)
       11    0.000    0.000    0.000    0.000 sre_parse.py:254(get)
        7    0.000    0.000    0.000    0.000 sre_parse.py:111(__init__)
       13    0.000    0.000    0.000    0.000 sre_parse.py:160(__len__)
        1    0.000    0.000    0.000    0.000 sre_compile.py:249(_compile_charset)
        2    0.000    0.000    0.000    0.000 sre_parse.py:84(opengroup)
        7    0.000    0.000    0.000    0.000 sre_parse.py:172(append)
        2    0.000    0.000    0.000    0.000 enum.py:313(__call__)
        1    0.000    0.000    0.000    0.000 sre_compile.py:598(_code)
        3    0.000    0.000    0.000    0.000 sre_compile.py:423(_simple)
        6    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
        4    0.000    0.000    0.000    0.000 sre_compile.py:65(_combine_flags)
        1    0.000    0.000    0.000    0.000 sre_compile.py:492(_get_charset_prefix)
        6    0.000    0.000    0.000    0.000 sre_parse.py:81(groups)
        1    0.000    0.000    0.000    0.000 sre_parse.py:224(__init__)
        1    0.000    0.000    0.000    0.000 copyreg.py:99(_slotnames)
        1    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
        1    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
        2    0.000    0.000    0.000    0.000 enum.py:631(__new__)
        2    0.000    0.000    0.000    0.000 sre_parse.py:96(closegroup)
        1    0.000    0.000    0.000    0.000 sre_parse.py:921(fix_flags)
        2    0.000    0.000    0.000    0.000 sre_compile.py:595(isstring)
        1    0.000    0.000    0.000    0.000 sre_parse.py:76(__init__)
        3    0.000    0.000    0.000    0.000 sre_parse.py:168(__setitem__)
        1    0.000    0.000    0.000    0.000 sre_parse.py:355(_escape)
        3    0.000    0.000    0.000    0.000 sre_compile.py:453(_get_iscased)
        1    0.000    0.000    0.000    0.000 sre_parse.py:288(seek)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'get' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}



##################Running pro_copy_cells2... #######################
for test <function pro_copy_cells2 at 0x000002B4D81EA5E0> total time: 160.0010863999999
Total Logs
         23815268 function calls (23572565 primitive calls) in 14.553 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
    23661    2.316    0.000    7.919    0.000 earley.py:78(predict_and_complete)
  1006929    1.285    0.000    1.962    0.000 earley_common.py:9(__init__)
     5148    0.956    0.000    3.403    0.001 earley_forest.py:283(visit)
2626628/2509952    0.699    0.000    0.910    0.000 {built-in method builtins.hash}
   853677    0.548    0.000    0.870    0.000 utils.py:345(add)
   648497    0.464    0.000    0.844    0.000 grammar.py:18(__eq__)
  1420051    0.400    0.000    0.581    0.000 grammar.py:25(__hash__)
   277668    0.363    0.000    0.432    0.000 typing.py:868(__new__)
    75141    0.296    0.000    0.874    0.000 earley_forest.py:50(__init__)
  2136144    0.291    0.000    0.291    0.000 {built-in method builtins.isinstance}
   766260    0.288    0.000    0.291    0.000 earley_common.py:28(__eq__)
   550983    0.272    0.000    0.344    0.000 lexer.py:265(__eq__)
   216117    0.263    0.000    0.297    0.000 {built-in method fromkeys}
    43659    0.235    0.000    0.827    0.000 earley.py:135(<listcomp>)
    89892    0.215    0.000    0.950    0.000 earley_forest.py:437(_visit_node_out_helper)
     8910    0.207    0.000    0.639    0.000 xearley.py:41(scan)
   310167    0.200    0.000    0.330    0.000 utils.py:342(__contains__)
    45738    0.188    0.000    0.478    0.000 earley_forest.py:603(transform_packed_node)
   811222    0.181    0.000    0.181    0.000 {built-in method builtins.next}
    88308    0.168    0.000    0.334    0.000 {built-in method builtins.sorted}
  1213740    0.163    0.000    0.163    0.000 earley_common.py:31(__hash__)
  1090580    0.161    0.000    0.161    0.000 grammar.py:121(__hash__)
  1254226    0.159    0.000    0.159    0.000 {method 'append' of 'list' objects}
     9603    0.152    0.000    0.820    0.000 earley.py:188(scan)
  1124745    0.146    0.000    0.146    0.000 {built-in method builtins.id}
  1305839    0.134    0.000    0.134    0.000 {built-in method builtins.len}
     5148    0.128    0.000   13.330    0.003 earley.py:262(parse)
   216117    0.121    0.000    0.418    0.000 utils.py:339(__init__)
    77220    0.109    0.000    0.334    0.000 earley_forest.py:64(add_family)
    44847    0.105    0.000    0.210    0.000 reconstruct.py:33(__default__)
   256608    0.095    0.000    0.143    0.000 utils.py:348(__iter__)
    77220    0.095    0.000    0.162    0.000 earley_forest.py:131(__init__)
   135733    0.092    0.000    0.092    0.000 {method 'match' of 're.Pattern' objects}
50904/50900    0.090    0.000    0.395    0.000 visitors.py:111(_call_userfunc)
    45738    0.088    0.000    0.257    0.000 earley_forest.py:631(visit_packed_node_in)
192350/191909    0.086    0.000    0.088    0.000 {built-in method builtins.getattr}
    88308    0.085    0.000    0.482    0.000 earley_forest.py:85(children)
     5114    0.081    0.000    0.734    0.000 visitors.py:278(transform)
130441/116047    0.081    0.000    0.524    0.000 visitors.py:143(_transform_children)
   291430    0.077    0.000    0.077    0.000 {built-in method __new__ of type object at 0x00007FFB3714DCB0}
    77220    0.077    0.000    0.325    0.000 earley_common.py:25(advance)
     5169    0.075    0.000    0.128    0.000 tree.py:137(iter_subtrees)
    33066    0.074    0.000    0.183    0.000 earley_forest.py:581(transform_symbol_node)
    45738    0.072    0.000    0.731    0.000 earley_forest.py:638(visit_packed_node_out)
     5049    0.071    0.000    3.562    0.001 earley.py:171(_parse)
    58905    0.065    0.000    0.273    0.000 tree_matcher.py:48(_match)
    44154    0.065    0.000    0.393    0.000 earley_forest.py:422(visit_symbol_node_in)
    45738    0.065    0.000    0.157    0.000 earley_forest.py:427(visit_packed_node_in)
   362975    0.064    0.000    0.064    0.000 {built-in method builtins.iter}
    44154    0.062    0.000    0.626    0.000 earley_forest.py:625(visit_symbol_node_in)
    58212    0.059    0.000    0.210    0.000 tree_matcher.py:65(parse_rulename)
   119295    0.057    0.000    0.081    0.000 {method 'setdefault' of 'dict' objects}
    91476    0.056    0.000    0.083    0.000 earley_forest.py:145(sort_key)
18315/198    0.053    0.000    0.165    0.001 copy.py:128(deepcopy)
   391743    0.049    0.000    0.049    0.000 {method 'pop' of 'collections.deque' objects}
    33066    0.046    0.000    0.196    0.000 earley_forest.py:565(_call_rule_func)
    18018    0.046    0.000    0.115    0.000 tree_matcher.py:21(__call__)
    86621    0.046    0.000    0.061    0.000 tree.py:66(meta)
   227088    0.046    0.000    0.047    0.000 {method 'add' of 'set' objects}
    45738    0.043    0.000    0.073    0.000 earley_forest.py:155(children)
    58612    0.043    0.000    0.140    0.000 re.py:188(match)
   364295    0.042    0.000    0.042    0.000 {method 'append' of 'collections.deque' objects}
    34248    0.041    0.000    0.072    0.000 visitors.py:130(_call_userfunc_token)
    77121    0.041    0.000    0.087    0.000 parser_frontends.py:184(match)
    44154    0.041    0.000    0.042    0.000 earley_forest.py:499(__init__)
    33066    0.041    0.000    0.069    0.000 earley_forest.py:556(_collapse_ambig)
       99    0.037    0.000    5.966    0.060 xearley.py:39(_parse)
    58711    0.037    0.000    0.052    0.000 re.py:289(_compile)
    44154    0.034    0.000    0.062    0.000 earley_forest.py:70(load_paths)
     5049    0.033    0.000    5.909    0.001 tree_matcher.py:148(match_tree)
    45702    0.033    0.000    0.046    0.000 tree.py:147(<listcomp>)
    45738    0.032    0.000    0.646    0.000 earley_forest.py:450(visit_packed_node_out)
    61312    0.031    0.000    0.031    0.000 tree.py:61(__init__)
44055/6633    0.031    0.000    6.659    0.001 reconstruct.py:85(_reconstruct)
   134046    0.030    0.000    0.030    0.000 {method 'remove' of 'set' objects}
    45738    0.030    0.000    0.030    0.000 earley_forest.py:158(<listcomp>)
    91476    0.028    0.000    0.028    0.000 earley_forest.py:141(is_empty)
    88308    0.027    0.000    0.041    0.000 utils.py:357(__len__)
    45438    0.023    0.000    0.383    0.000 visitors.py:275(_transform_tree)
    33066    0.023    0.000    0.299    0.000 earley_forest.py:444(visit_symbol_node_out)
    13464    0.021    0.000    0.030    0.000 lexer.py:213(_future_new)
    16236    0.021    0.000    0.026    0.000 earley_forest.py:432(visit_token_node)
    11088    0.020    0.000    0.028    0.000 earley_forest.py:591(transform_intermediate_node)
26968/5079    0.018    0.000    0.030    0.000 tree.py:134(__hash__)
    89892    0.017    0.000    0.017    0.000 earley_forest.py:548(_check_cycle)
    18711    0.017    0.000    0.052    0.000 earley_forest.py:193(__init__)
    90375    0.017    0.000    0.017    0.000 {method 'pop' of 'list' objects}
    73656    0.016    0.000    0.016    0.000 earley_forest.py:101(__hash__)
    33066    0.016    0.000    0.020    0.000 earley_forest.py:571(_call_ambig_func)
 5148/198    0.016    0.000    0.143    0.001 copy.py:200(_deepcopy_list)
  5049/99    0.015    0.000    0.143    0.001 tree.py:206(__deepcopy__)
     5148    0.015    0.000    3.418    0.001 earley_forest.py:535(visit)
    44957    0.015    0.000    0.015    0.000 tree.py:32(__init__)
    13464    0.014    0.000    0.044    0.000 lexer.py:202(__new__)
     5148    0.014    0.000    0.026    0.000 earley_forest.py:523(__init__)
    77220    0.014    0.000    0.014    0.000 earley_forest.py:169(__hash__)
    15642    0.013    0.000    0.019    0.000 copy.py:242(_keep_alive)
     5049    0.013    0.000    0.024    0.000 earley.py:245(<setcomp>)
    58212    0.013    0.000    0.013    0.000 {method 'groups' of 're.Match' objects}
       99    0.013    0.000    7.542    0.076 parser_frontends.py:100(parse)
     5148    0.013    0.000    3.432    0.001 earley_forest.py:397(transform)
    18018    0.011    0.000    0.016    0.000 reconstruct.py:15(is_iter_empty)
        7    0.011    0.002    0.022    0.003 grammar_analysis.py:78(calculate_sets)
     5148    0.011    0.000    0.029    0.000 earley.py:284(<listcomp>)
 5107/111    0.010    0.000    0.066    0.001 visitors.py:155(_transform_tree)
     5148    0.010    0.000    0.012    0.000 earley_forest.py:390(__init__)
    43859    0.009    0.000    0.009    0.000 {method 'get' of 'dict' objects}
    18513    0.009    0.000    0.009    0.000 utils.py:354(__bool__)
    11385    0.008    0.000    0.013    0.000 parse_tree_builder.py:20(__call__)
    33365    0.007    0.000    0.007    0.000 {built-in method builtins.hasattr}
    11088    0.007    0.000    0.067    0.000 earley_forest.py:447(visit_intermediate_node_out)
     4653    0.007    0.000    0.023    0.000 lexer.py:262(__deepcopy__)
        1    0.006    0.006   14.551   14.551 Workbook.py:284(transfer_cells)
    24522    0.006    0.000    0.006    0.000 tree_matcher.py:12(is_discarded_terminal)
     5675    0.006    0.000    0.017    0.000 visitors.py:171(__default__)
  4752/99    0.006    0.000    0.053    0.001 visitors.py:421(_visit_tree)
  4455/99    0.005    0.000    0.052    0.001 visitors.py:444(inner)
  4455/99    0.005    0.000    0.051    0.001 visitors.py:430(<listcomp>)
    34149    0.005    0.000    0.005    0.000 visitors.py:178(__default_token__)
    10450    0.005    0.000    0.005    0.000 grammar.py:42(__init__)
       99    0.004    0.000    6.664    0.067 reconstruct.py:96(reconstruct)
    18711    0.004    0.000    0.004    0.000 earley_forest.py:207(__hash__)
     1287    0.004    0.000    0.007    0.000 parse_tree_builder.py:145(__call__)
     4455    0.004    0.000    0.021    0.000 Parser.py:40(fix_formula)
  4455/99    0.003    0.000    0.051    0.001 visitors.py:429(visit_children)
     8514    0.003    0.000    0.003    0.000 {method 'group' of 're.Match' objects}
     9603    0.003    0.000    0.003    0.000 earley.py:254(<setcomp>)
    10180    0.003    0.000    0.003    0.000 grammar.py:15(__init__)
     9603    0.003    0.000    0.003    0.000 {method 'clear' of 'set' objects}
  496/199    0.003    0.000    0.163    0.001 copy.py:258(_reconstruct)
      792    0.003    0.000    0.003    0.000 Parser.py:169(add_expr)
      695    0.003    0.000    0.008    0.000 grammar_analysis.py:187(_expand_rule)
    16236    0.003    0.000    0.003    0.000 earley_forest.py:418(transform_token_node)
     4455    0.003    0.000    0.004    0.000 utils.py:295(get_highest_precedence_error)
      198    0.002    0.000    7.604    0.038 Workbook.py:649(recompute_cell_and_parents)
     5148    0.002    0.000    0.002    0.000 earley_forest.py:232(__init__)
        1    0.002    0.002   14.553   14.553 Workbook.py:432(copy_cells)
  396/198    0.002    0.000    0.159    0.001 copy.py:226(_deepcopy_dict)
      198    0.002    0.000    7.616    0.038 Workbook.py:738(set_cell_contents)
     5049    0.002    0.000    0.002    0.000 tree_matcher.py:74(__init__)
      891    0.002    0.000    0.003    0.000 Parser.py:211(mul_expr)
      300    0.002    0.000    0.003    0.000 utils.py:179(convert_location_to_idx)
     1782    0.002    0.000    0.002    0.000 Parser.py:243(number)
       40    0.002    0.000    0.005    0.000 visitors.py:293(transform)
     2156    0.002    0.000    0.002    0.000 grammar_analysis.py:70(update_set)
    10198    0.002    0.000    0.002    0.000 {built-in method builtins.issubclass}
      198    0.002    0.000    0.007    0.000 Sheet.py:60(set_cell_contents)
     8514    0.002    0.000    0.002    0.000 {method 'end' of 're.Match' objects}
     5169    0.002    0.000    0.002    0.000 {method 'values' of 'collections.OrderedDict' objects}
      496    0.002    0.000    0.002    0.000 utils.py:194(convert_idx_to_location)
       99    0.002    0.000    7.598    0.077 Workbook.py:555(get_formula_value)
      450    0.001    0.000    0.010    0.000 utils.py:275(bfs)
      297    0.001    0.000    0.027    0.000 Parser.py:299(function)
     5049    0.001    0.000    0.001    0.000 tree_matcher.py:77(lex)
      803    0.001    0.000    0.001    0.000 {method 'join' of 'str' objects}
      693    0.001    0.000    0.002    0.000 Sheet.py:93(get_cell_value)
     1169    0.001    0.000    0.001    0.000 grammar_analysis.py:17(__init__)
       99    0.001    0.000    0.004    0.000 Parser.py:253(cell)
       14    0.001    0.000    0.002    0.000 utils.py:23(classify)
      198    0.001    0.000    0.023    0.000 Functions.py:188(func)
      297    0.001    0.000    0.001    0.000 Cell.py:81(set_cell_value)
      792    0.001    0.000    0.001    0.000 utils.py:78(get_hidden_name)
     1169    0.001    0.000    0.002    0.000 grammar_analysis.py:45(__hash__)
        7    0.001    0.000    0.037    0.005 earley.py:32(__init__)
     2678    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
      990    0.001    0.000    0.003    0.000 copy.py:263(<genexpr>)
      198    0.001    0.000    0.002    0.000 Cell.py:46(__init__)
   594/99    0.001    0.000    0.053    0.001 visitors.py:415(visit)
       99    0.001    0.000    0.002    0.000 Parser.py:389(CELLREF_NO_ABS)
       41    0.001    0.000    0.001    0.000 {built-in method builtins.compile}
      400    0.001    0.000    0.002    0.000 utils.py:131(check_valid_cell_location)
       89    0.001    0.000    0.011    0.000 grammar_analysis.py:180(expand_rule)
        1    0.001    0.001    0.029    0.029 load_grammar.py:690(compile)
      198    0.001    0.000    7.617    0.038 Workbook.py:37(run_func)
       99    0.001    0.000    0.001    0.000 parser_frontends.py:96(_make_lexer_thread)
       99    0.001    0.000    0.002    0.000 Workbook.py:817(get_cell_value)
      397    0.001    0.000    0.001    0.000 {method '__reduce_ex__' of 'object' objects}
        7    0.001    0.000    0.027    0.004 grammar_analysis.py:141(__init__)
      201    0.001    0.000    0.001    0.000 tree.py:179(expand_kids_by_data)
       99    0.001    0.000    0.001    0.000 Parser.py:97(__init__)
       99    0.000    0.000    0.001    0.000 Parser.py:382(cell)
      198    0.000    0.000    0.001    0.000 Sheet.py:124(update_extent)
       99    0.000    0.000    7.542    0.076 lark.py:640(parse)
   105/45    0.000    0.000    0.002    0.000 load_grammar.py:389(expansion)
       41    0.000    0.000    0.002    0.000 load_grammar.py:566(_literal_to_pattern)
     1155    0.000    0.000    0.000    0.000 grammar_analysis.py:28(next)
       99    0.000    0.000    0.001    0.000 Workbook.py:711(add_children_cells)
       99    0.000    0.000    0.001    0.000 Workbook.py:698(_get_sheet_name_location)
      198    0.000    0.000    0.001    0.000 Cell.py:65(set_contents)
      198    0.000    0.000    0.001    0.000 Functions.py:185(__init__)
      495    0.000    0.000    0.023    0.000 Functions.py:68(eval_arg)
      396    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
      198    0.000    0.000    0.001    0.000 utils.py:289(get_error_precedence)
      594    0.000    0.000    0.001    0.000 Sheet.py:120(get_cell)
       63    0.000    0.000    0.001    0.000 functools.py:34(update_wrapper)
      198    0.000    0.000    0.001    0.000 Workbook.py:586(get_cell_from_location)
     2574    0.000    0.000    0.000    0.000 copy.py:182(_deepcopy_atomic)
      198    0.000    0.000    0.001    0.000 Workbook.py:551(get_sheet_name_from_hidden)
       99    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
     1192    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      297    0.000    0.000    0.000    0.000 Parser.py:289(boolean)
      297    0.000    0.000    0.025    0.000 Functions.py:71(__call__)
       41    0.000    0.000    0.001    0.000 load_grammar.py:540(eval_escaping)
      298    0.000    0.000    0.000    0.000 copyreg.py:90(__newobj__)
       99    0.000    0.000    0.001    0.000 Sheet.py:104(set_cell_value)
      198    0.000    0.000    0.001    0.000 Workbook.py:725(clean_children_cells)
      198    0.000    0.000    0.000    0.000 utils.py:26(convert_to)
       28    0.000    0.000    0.001    0.000 tree_matcher.py:106(_build_recons_rules)
      362    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
       99    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
       99    0.000    0.000    0.001    0.000 Functions.py:214(func)
   146/84    0.000    0.000    0.003    0.000 visitors.py:342(_call_userfunc)
       75    0.000    0.000    0.000    0.000 earley.py:58(<listcomp>)
      297    0.000    0.000    0.000    0.000 Functions.py:64(__init__)
       98    0.000    0.000    0.001    0.000 grammar.py:103(__init__)
      198    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
       99    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
       41    0.000    0.000    0.001    0.000 ast.py:51(literal_eval)
      496    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
      396    0.000    0.000    0.000    0.000 Cell.py:128(get_contents)
      496    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
       99    0.000    0.000    0.001    0.000 re.py:203(sub)
      101    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      155    0.000    0.000    0.001    0.000 load_grammar.py:384(_flatten)
      198    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
      198    0.000    0.000    0.000    0.000 enum.py:735(__hash__)
       63    0.000    0.000    0.001    0.000 visitors.py:481(__get__)
    40/11    0.000    0.000    0.003    0.000 visitors.py:362(visit)
       99    0.000    0.000    0.000    0.000 enum.py:313(__call__)
      111    0.000    0.000    0.066    0.001 visitors.py:159(transform)
       99    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      495    0.000    0.000    0.000    0.000 Cell.py:125(get_value)
        7    0.000    0.000    0.000    0.000 grammar_analysis.py:82(<setcomp>)
       63    0.000    0.000    0.003    0.000 visitors.py:500(_vargs_inline)
      600    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       35    0.000    0.000    0.001    0.000 load_grammar.py:420(expansions)
    15/13    0.000    0.000    0.002    0.000 load_grammar.py:405(<listcomp>)
       99    0.000    0.000    0.000    0.000 Functions.py:211(__init__)
       11    0.000    0.000    0.000    0.000 load_grammar.py:450(pattern)
       41    0.000    0.000    0.003    0.000 load_grammar.py:601(literal)
       99    0.000    0.000    0.000    0.000 enum.py:631(__new__)
      594    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
       63    0.000    0.000    0.001    0.000 visitors.py:470(__init__)
      396    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
       35    0.000    0.000    0.000    0.000 tree_matcher.py:121(<listcomp>)
      418    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
       63    0.000    0.000    0.003    0.000 visitors.py:478(__call__)
       25    0.000    0.000    0.017    0.001 visitors.py:258(transform)
       49    0.000    0.000    0.000    0.000 tree_matcher.py:57(make_recons_rule)
       99    0.000    0.000    0.000    0.000 CellError.py:11(__init__)
       89    0.000    0.000    0.000    0.000 typing.py:255(inner)
        7    0.000    0.000    0.000    0.000 earley.py:52(<setcomp>)
      198    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
       47    0.000    0.000    0.000    0.000 lexer.py:41(__init__)
        1    0.000    0.000    0.030    0.030 tree_matcher.py:89(__init__)
        7    0.000    0.000    0.000    0.000 tree_matcher.py:178(<dictcomp>)
       89    0.000    0.000    0.000    0.000 typing.py:720(__hash__)
      315    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
       54    0.000    0.000    0.000    0.000 lexer.py:50(__hash__)
        7    0.000    0.000    0.000    0.000 earley.py:53(<setcomp>)
      396    0.000    0.000    0.000    0.000 Parser.py:111(parens)
       45    0.000    0.000    0.000    0.000 {built-in method builtins.max}
        8    0.000    0.000    0.000    0.000 tree_matcher.py:28(_best_from_group)
      123    0.000    0.000    0.000    0.000 load_grammar.py:537(<genexpr>)
       99    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
       99    0.000    0.000    0.000    0.000 enum.py:738(__reduce_ex__)
      396    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
       41    0.000    0.000    0.001    0.000 ast.py:30(parse)
       25    0.000    0.000    0.004    0.000 load_grammar.py:674(nr_deepcopy_tree)
       99    0.000    0.000    0.000    0.000 Parser.py:378(__init__)
      361    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
      198    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
       41    0.000    0.000    0.000    0.000 load_grammar.py:536(_rfind)
       65    0.000    0.000    0.000    0.000 grammar.py:69(__init__)
       99    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
       82    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
        1    0.000    0.000    0.000    0.000 load_grammar.py:793(<setcomp>)
      198    0.000    0.000    0.000    0.000 CellError.py:21(get_type)
      105    0.000    0.000    0.000    0.000 load_grammar.py:759(<genexpr>)
       20    0.000    0.000    0.000    0.000 load_grammar.py:631(expansions)
      198    0.000    0.000    0.000    0.000 grammar_analysis.py:149(<lambda>)
       99    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
       15    0.000    0.000    0.000    0.000 utils.py:190(<listcomp>)
        1    0.000    0.000    0.008    0.008 load_grammar.py:710(<listcomp>)
      113    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
      198    0.000    0.000    0.000    0.000 grammar_analysis.py:172(<lambda>)
       13    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
        7    0.000    0.000    0.001    0.000 grammar_analysis.py:175(<dictcomp>)
       20    0.000    0.000    0.000    0.000 load_grammar.py:637(<lambda>)
       10    0.000    0.000    0.000    0.000 load_grammar.py:346(expr)
       35    0.000    0.000    0.000    0.000 load_grammar.py:798(<lambda>)
       41    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        7    0.000    0.000    0.000    0.000 grammar_analysis.py:145(<dictcomp>)
       20    0.000    0.000    0.000    0.000 lexer.py:81(to_regexp)
        7    0.000    0.000    0.000    0.000 grammar_analysis.py:60(__init__)
       46    0.000    0.000    0.000    0.000 load_grammar.py:668(value)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:108(<setcomp>)
       21    0.000    0.000    0.000    0.000 lexer.py:125(__init__)
      116    0.000    0.000    0.000    0.000 tree.py:175(<lambda>)
       35    0.000    0.000    0.000    0.000 load_grammar.py:621(expansion)
       49    0.000    0.000    0.000    0.000 tree_matcher.py:17(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:446(<dictcomp>)
       20    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
       41    0.000    0.000    0.000    0.000 ast.py:76(_convert)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:115(<setcomp>)
        2    0.000    0.000    0.000    0.000 utils.py:271(<listcomp>)
        7    0.000    0.000    0.000    0.000 grammar_analysis.py:166(<dictcomp>)
        8    0.000    0.000    0.000    0.000 tree_matcher.py:42(_best_rules_from_group)
        1    0.000    0.000    0.000    0.000 load_grammar.py:806(<setcomp>)
       21    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        7    0.000    0.000    0.000    0.000 grammar_analysis.py:163(<dictcomp>)
       20    0.000    0.000    0.000    0.000 re.py:270(escape)
       15    0.000    0.000    0.000    0.000 tree.py:169(find_pred)
       15    0.000    0.000    0.000    0.000 utils.py:184(dedup_list)
       50    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
        1    0.000    0.000    0.002    0.002 load_grammar.py:693(<listcomp>)
       14    0.000    0.000    0.000    0.000 tree_matcher.py:61(make_recons_rule_to_term)
       25    0.000    0.000    0.000    0.000 load_grammar.py:639(<genexpr>)
        7    0.000    0.000    0.001    0.000 grammar_analysis.py:160(<dictcomp>)
       35    0.000    0.000    0.000    0.000 grammar.py:22(__ne__)
       21    0.000    0.000    0.000    0.000 lexer.py:70(_get_flags)
       30    0.000    0.000    0.000    0.000 visitors.py:108(__init__)
       21    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
       41    0.000    0.000    0.000    0.000 tree_matcher.py:44(<lambda>)
       15    0.000    0.000    0.000    0.000 lexer.py:53(__eq__)
       49    0.000    0.000    0.000    0.000 load_grammar.py:572(<genexpr>)
       15    0.000    0.000    0.000    0.000 tree.py:173(find_data)
       65    0.000    0.000    0.000    0.000 typing.py:1149(cast)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:116(<setcomp>)
       35    0.000    0.000    0.000    0.000 {built-in method builtins.any}
        1    0.000    0.000    0.000    0.000 load_grammar.py:246(_add_recurse_rule)
        1    0.000    0.000    0.002    0.002 load_grammar.py:694(<listcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:443(__init__)
        1    0.000    0.000    0.030    0.030 reconstruct.py:80(__init__)
        7    0.000    0.000    0.000    0.000 common.py:83(__init__)
       20    0.000    0.000    0.000    0.000 lexer.py:88(max_width)
       20    0.000    0.000    0.000    0.000 lexer.py:84(min_width)
       30    0.000    0.000    0.000    0.000 load_grammar.py:663(value)
        1    0.000    0.000    0.000    0.000 load_grammar.py:642(expr)
       30    0.000    0.000    0.000    0.000 load_grammar.py:617(pattern)
        5    0.000    0.000    0.000    0.000 load_grammar.py:640(<setcomp>)
        6    0.000    0.000    0.000    0.000 load_grammar.py:411(alias)
        1    0.000    0.000    0.000    0.000 load_grammar.py:375(maybe)
        1    0.000    0.000    0.000    0.000 copy.py:66(copy)
        1    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
       35    0.000    0.000    0.000    0.000 load_grammar.py:431(expansion)
       43    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
        5    0.000    0.000    0.000    0.000 load_grammar.py:613(_make_joined_pattern)
        2    0.000    0.000    0.000    0.000 visitors.py:163(__mul__)
       21    0.000    0.000    0.000    0.000 load_grammar.py:809(<lambda>)
       22    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 visitors.py:263(__mul__)
        9    0.000    0.000    0.000    0.000 load_grammar.py:210(_args_as_int)
        4    0.000    0.000    0.000    0.000 grammar.py:124(__eq__)
        2    0.000    0.000    0.000    0.000 load_grammar.py:201(_will_not_get_removed)
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:235(_name_rule)
        2    0.000    0.000    0.000    0.000 load_grammar.py:219(expansion)
        1    0.000    0.000    0.000    0.000 reconstruct.py:83(<dictcomp>)
        8    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
        1    0.000    0.000    0.000    0.000 copyreg.py:99(_slotnames)
        1    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:763(<listcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:240(_add_rule)
        1    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
        4    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        2    0.000    0.000    0.000    0.000 utils.py:269(classify_bool)
       11    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
        2    0.000    0.000    0.000    0.000 load_grammar.py:222(expansions)
        1    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
        1    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
        1    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        1    0.000    0.000    0.000    0.000 {method 'get' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}



##################Running pro_move_cells... #######################
for test <function pro_move_cells at 0x000002B4D81EA700> total time: 16.199420300000007
Total Logs
         2695063 function calls (2574192 primitive calls) in 1.670 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
100813/100413    0.145    0.000    0.663    0.000 visitors.py:111(_call_userfunc)
    12003    0.118    0.000    0.202    0.000 tree.py:137(iter_subtrees)
     4000    0.100    0.000    0.293    0.000 visitors.py:293(transform)
    86564    0.090    0.000    0.108    0.000 typing.py:868(__new__)
     6503    0.082    0.000    0.844    0.000 visitors.py:278(transform)
164230/150426    0.082    0.000    0.618    0.000 visitors.py:143(_transform_children)
197411/153311    0.082    0.000    0.128    0.000 {built-in method builtins.getattr}
    72501    0.068    0.000    0.181    0.000 visitors.py:171(__default__)
   522932    0.061    0.000    0.064    0.000 {built-in method builtins.isinstance}
    85510    0.051    0.000    0.072    0.000 tree.py:147(<listcomp>)
     4100    0.036    0.000    0.036    0.000 {built-in method builtins.compile}
      100    0.034    0.000    1.502    0.015 load_grammar.py:690(compile)
    82319    0.031    0.000    0.031    0.000 tree.py:61(__init__)
    20100    0.030    0.000    0.037    0.000 tree.py:179(expand_kids_by_data)
    59110    0.028    0.000    0.520    0.000 visitors.py:275(_transform_tree)
99293/57726    0.025    0.000    0.037    0.000 {built-in method builtins.hash}
     4100    0.022    0.000    0.118    0.000 load_grammar.py:566(_literal_to_pattern)
     6300    0.021    0.000    0.036    0.000 functools.py:34(update_wrapper)
    70559    0.019    0.000    0.028    0.000 grammar.py:25(__hash__)
    28897    0.018    0.000    0.032    0.000 grammar.py:18(__eq__)
    86682    0.018    0.000    0.018    0.000 {built-in method __new__ of type object at 0x00007FFB3714DCB0}
    78827    0.018    0.000    0.018    0.000 tree.py:66(meta)
   159954    0.018    0.000    0.018    0.000 {built-in method builtins.id}
10500/4500    0.016    0.000    0.112    0.000 load_grammar.py:389(expansion)
     2800    0.016    0.000    0.079    0.000 tree_matcher.py:106(_build_recons_rules)
     4100    0.016    0.000    0.071    0.000 load_grammar.py:540(eval_escaping)
14600/8400    0.014    0.000    0.160    0.000 visitors.py:342(_call_userfunc)
   108263    0.013    0.000    0.013    0.000 {method 'append' of 'list' objects}
     9308    0.011    0.000    0.018    0.000 visitors.py:130(_call_userfunc_token)
5803/1201    0.011    0.000    0.038    0.000 visitors.py:155(_transform_tree)
    15500    0.010    0.000    0.047    0.000 load_grammar.py:384(_flatten)
4000/1100    0.010    0.000    0.187    0.000 visitors.py:362(visit)
     4100    0.010    0.000    0.053    0.000 ast.py:51(literal_eval)
     8404    0.010    0.000    0.027    0.000 grammar.py:103(__init__)
    88454    0.010    0.000    0.010    0.000 {built-in method builtins.len}
     6300    0.010    0.000    0.054    0.000 visitors.py:481(__get__)
    17244    0.009    0.000    0.011    0.000 lexer.py:265(__eq__)
     3500    0.009    0.000    0.039    0.000 load_grammar.py:420(expansions)
13902/12902    0.008    0.000    0.024    0.000 tree.py:134(__hash__)
1500/1300    0.008    0.000    0.078    0.000 load_grammar.py:405(<listcomp>)
    49556    0.008    0.000    0.008    0.000 {method 'pop' of 'list' objects}
     1100    0.008    0.000    0.014    0.000 load_grammar.py:450(pattern)
      100    0.007    0.000    1.596    0.016 tree_matcher.py:89(__init__)
     4100    0.007    0.000    0.134    0.000 load_grammar.py:601(literal)
     6300    0.007    0.000    0.045    0.000 visitors.py:470(__init__)
     3500    0.007    0.000    0.015    0.000 tree_matcher.py:121(<listcomp>)
     4900    0.007    0.000    0.024    0.000 tree_matcher.py:57(make_recons_rule)
     2500    0.007    0.000    0.839    0.000 visitors.py:258(transform)
     6300    0.006    0.000    0.167    0.000 visitors.py:478(__call__)
     6300    0.006    0.000    0.173    0.000 visitors.py:500(_vargs_inline)
    31500    0.005    0.000    0.005    0.000 {built-in method builtins.setattr}
     4500    0.005    0.000    0.013    0.000 {built-in method builtins.max}
     4700    0.005    0.000    0.005    0.000 lexer.py:41(__init__)
     2500    0.005    0.000    0.212    0.000 load_grammar.py:674(nr_deepcopy_tree)
    12300    0.005    0.000    0.008    0.000 load_grammar.py:537(<genexpr>)
        2    0.004    0.002    0.009    0.005 grammar_analysis.py:78(calculate_sets)
      100    0.004    0.000    0.012    0.000 load_grammar.py:793(<setcomp>)
    10500    0.004    0.000    0.008    0.000 load_grammar.py:759(<genexpr>)
     4100    0.004    0.000    0.040    0.000 ast.py:30(parse)
     4100    0.003    0.000    0.016    0.000 load_grammar.py:536(_rfind)
      100    0.003    0.000    1.669    0.017 Workbook.py:284(transfer_cells)
      600    0.003    0.000    0.035    0.000 Workbook.py:738(set_cell_contents)
      600    0.003    0.000    0.004    0.000 Graph.py:330(tarjans)
     8200    0.003    0.000    0.003    0.000 {method 'rfind' of 'str' objects}
      600    0.003    0.000    0.021    0.000 Workbook.py:649(recompute_cell_and_parents)
      102    0.003    0.000    0.006    0.000 tree_matcher.py:28(_best_from_group)
     5400    0.003    0.000    0.004    0.000 lexer.py:50(__hash__)
     3500    0.003    0.000    0.009    0.000 load_grammar.py:798(<lambda>)
     1500    0.003    0.000    0.012    0.000 utils.py:190(<listcomp>)
      902    0.003    0.000    0.004    0.000 utils.py:179(convert_location_to_idx)
     2000    0.003    0.000    0.019    0.000 load_grammar.py:631(expansions)
     5104    0.003    0.000    0.003    0.000 grammar.py:69(__init__)
      100    0.003    0.000    1.671    0.017 Workbook.py:380(move_cells)
       15    0.003    0.000    0.009    0.001 earley.py:78(predict_and_complete)
      100    0.003    0.000    0.363    0.004 load_grammar.py:710(<listcomp>)
    12003    0.002    0.000    0.002    0.000 {method 'values' of 'collections.OrderedDict' objects}
    11300    0.002    0.000    0.002    0.000 {method 'replace' of 'str' objects}
     6405    0.002    0.000    0.002    0.000 {method 'update' of 'dict' objects}
     1000    0.002    0.000    0.008    0.000 load_grammar.py:346(expr)
     2000    0.002    0.000    0.004    0.000 load_grammar.py:637(<lambda>)
     4100    0.002    0.000    0.003    0.000 {built-in method builtins.all}
     4552    0.002    0.000    0.007    0.000 {method 'add' of 'set' objects}
     2311    0.002    0.000    0.010    0.000 {method 'join' of 'str' objects}
     2000    0.002    0.000    0.006    0.000 lexer.py:81(to_regexp)
      200    0.002    0.000    0.011    0.000 utils.py:271(<listcomp>)
      602    0.002    0.000    0.007    0.000 {method 'sort' of 'list' objects}
     4600    0.002    0.000    0.003    0.000 load_grammar.py:668(value)
      100    0.002    0.000    0.003    0.000 load_grammar.py:806(<setcomp>)
      100    0.002    0.000    0.006    0.000 tree_matcher.py:115(<setcomp>)
    11600    0.002    0.000    0.002    0.000 tree.py:175(<lambda>)
     4900    0.002    0.000    0.002    0.000 tree_matcher.py:17(__init__)
     2100    0.002    0.000    0.006    0.000 lexer.py:125(__init__)
     4818    0.002    0.000    0.002    0.000 grammar.py:42(__init__)
     3500    0.002    0.000    0.002    0.000 load_grammar.py:621(expansion)
      702    0.002    0.000    0.002    0.000 utils.py:194(convert_idx_to_location)
     2000    0.002    0.000    0.002    0.000 {method 'translate' of 'str' objects}
     5000    0.002    0.000    0.002    0.000 {method 'startswith' of 'str' objects}
     1500    0.002    0.000    0.014    0.000 utils.py:184(dedup_list)
     1400    0.002    0.000    0.008    0.000 tree_matcher.py:61(make_recons_rule_to_term)
     3500    0.002    0.000    0.006    0.000 grammar.py:22(__ne__)
      100    0.002    0.000    0.004    0.000 tree_matcher.py:108(<setcomp>)
     4100    0.002    0.000    0.002    0.000 ast.py:76(_convert)
     1500    0.002    0.000    0.026    0.000 tree.py:169(find_pred)
     6910    0.001    0.000    0.001    0.000 tree_matcher.py:12(is_discarded_terminal)
      547    0.001    0.000    0.002    0.000 earley_common.py:9(__init__)
    10050    0.001    0.000    0.001    0.000 grammar.py:121(__hash__)
     2106    0.001    0.000    0.001    0.000 {built-in method _abc._abc_instancecheck}
     2000    0.001    0.000    0.003    0.000 re.py:270(escape)
     9306    0.001    0.000    0.001    0.000 visitors.py:178(__default_token__)
     1080    0.001    0.000    0.001    0.000 {method 'match' of 're.Pattern' objects}
     5414    0.001    0.000    0.001    0.000 grammar.py:15(__init__)
      100    0.001    0.000    0.104    0.001 load_grammar.py:693(<listcomp>)
     2500    0.001    0.000    0.008    0.000 load_grammar.py:639(<genexpr>)
        4    0.001    0.000    0.004    0.001 earley_forest.py:283(visit)
      202    0.001    0.000    0.003    0.000 grammar_analysis.py:187(_expand_rule)
     2100    0.001    0.000    0.001    0.000 lexer.py:70(_get_flags)
     1034    0.001    0.000    0.004    0.000 re.py:188(match)
     1500    0.001    0.000    0.001    0.000 lexer.py:53(__eq__)
     1220    0.001    0.000    0.002    0.000 Sheet.py:93(get_cell_value)
     3000    0.001    0.000    0.001    0.000 visitors.py:108(__init__)
       49    0.001    0.000    0.002    0.000 earley_forest.py:50(__init__)
      600    0.001    0.000    0.005    0.000 Sheet.py:60(set_cell_contents)
      100    0.001    0.000    0.002    0.000 tree_matcher.py:116(<setcomp>)
     4900    0.001    0.000    0.001    0.000 load_grammar.py:572(<genexpr>)
     2106    0.001    0.000    0.002    0.000 abc.py:96(__instancecheck__)
     1012    0.001    0.000    0.004    0.000 utils.py:131(check_valid_cell_location)
     1500    0.001    0.000    0.027    0.000 tree.py:173(find_data)
      600    0.001    0.000    0.036    0.000 Workbook.py:37(run_func)
     1731    0.001    0.000    0.001    0.000 utils.py:78(get_hidden_name)
     1044    0.001    0.000    0.001    0.000 re.py:289(_compile)
     3500    0.001    0.000    0.001    0.000 {built-in method builtins.any}
     4029    0.001    0.000    0.001    0.000 {method 'get' of 'dict' objects}
     6500    0.001    0.000    0.001    0.000 typing.py:1149(cast)
  347/300    0.001    0.000    0.001    0.000 copy.py:128(deepcopy)
     1902    0.001    0.000    0.001    0.000 Sheet.py:120(get_cell)
      100    0.001    0.000    0.003    0.000 load_grammar.py:246(_add_recurse_rule)
      100    0.001    0.000    1.597    0.016 reconstruct.py:80(__init__)
      100    0.001    0.000    0.111    0.001 load_grammar.py:694(<listcomp>)
      702    0.001    0.000    0.002    0.000 Workbook.py:586(get_cell_from_location)
      100    0.001    0.000    0.002    0.000 load_grammar.py:446(<dictcomp>)
     4309    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
     1201    0.001    0.000    0.039    0.000 visitors.py:159(transform)
     4103    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
      402    0.001    0.000    0.003    0.000 Workbook.py:593(recompute_cell_value)
      649    0.001    0.000    0.001    0.000 grammar_analysis.py:70(update_set)
      600    0.001    0.000    0.001    0.000 load_grammar.py:411(alias)
      100    0.001    0.000    0.002    0.000 copy.py:66(copy)
     2000    0.001    0.000    0.001    0.000 lexer.py:88(max_width)
      465    0.001    0.000    0.001    0.000 utils.py:345(add)
     2100    0.001    0.000    0.001    0.000 load_grammar.py:809(<lambda>)
     3500    0.001    0.000    0.001    0.000 load_grammar.py:431(expansion)
     3000    0.001    0.000    0.001    0.000 load_grammar.py:663(value)
     2000    0.001    0.000    0.001    0.000 lexer.py:84(min_width)
     2509    0.001    0.000    0.001    0.000 tree_matcher.py:44(<lambda>)
     3000    0.001    0.000    0.001    0.000 load_grammar.py:617(pattern)
      100    0.001    0.000    0.006    0.000 load_grammar.py:375(maybe)
      125    0.001    0.000    0.004    0.000 utils.py:275(bfs)
      500    0.001    0.000    0.001    0.000 load_grammar.py:640(<setcomp>)
     2046    0.001    0.000    0.001    0.000 {built-in method builtins.next}
      900    0.001    0.000    0.001    0.000 load_grammar.py:210(_args_as_int)
      100    0.001    0.000    0.001    0.000 load_grammar.py:642(expr)
      400    0.001    0.000    0.001    0.000 grammar.py:124(__eq__)
      346    0.000    0.000    0.001    0.000 grammar_analysis.py:17(__init__)
      804    0.000    0.000    0.000    0.000 Graph.py:137(get_parents_from_cell)
      600    0.000    0.000    0.001    0.000 Workbook.py:725(clean_children_cells)
      600    0.000    0.000    0.001    0.000 Sheet.py:124(update_extent)
      500    0.000    0.000    0.001    0.000 load_grammar.py:613(_make_joined_pattern)
      104    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
      100    0.000    0.000    0.003    0.000 load_grammar.py:443(__init__)
        6    0.000    0.000    0.001    0.000 xearley.py:41(scan)
  104/103    0.000    0.000    0.001    0.000 copy.py:258(_reconstruct)
     1111    0.000    0.000    0.000    0.000 tree.py:32(__init__)
        4    0.000    0.000    0.001    0.000 utils.py:23(classify)
      200    0.000    0.000    0.001    0.000 visitors.py:163(__mul__)
      100    0.000    0.000    0.000    0.000 reconstruct.py:83(<dictcomp>)
      401    0.000    0.000    0.000    0.000 earley_common.py:28(__eq__)
     1606    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      100    0.000    0.000    0.000    0.000 load_grammar.py:235(_name_rule)
       27    0.000    0.000    0.001    0.000 earley.py:135(<listcomp>)
      800    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
      662    0.000    0.000    0.000    0.000 earley_common.py:31(__hash__)
     2709    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
      200    0.000    0.000    0.001    0.000 visitors.py:263(__mul__)
      702    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
        2    0.000    0.000    0.016    0.008 earley.py:32(__init__)
      100    0.000    0.000    0.001    0.000 load_grammar.py:763(<listcomp>)
      100    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
        2    0.000    0.000    0.012    0.006 grammar_analysis.py:141(__init__)
      102    0.000    0.000    0.007    0.000 tree_matcher.py:42(_best_rules_from_group)
     1804    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       25    0.000    0.000    0.001    0.000 earley_forest.py:603(transform_packed_node)
      346    0.000    0.000    0.001    0.000 grammar_analysis.py:45(__hash__)
      200    0.000    0.000    0.000    0.000 load_grammar.py:201(_will_not_get_removed)
      100    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
      100    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
      175    0.000    0.000    0.001    0.000 utils.py:342(__contains__)
        4    0.000    0.000    0.017    0.004 earley.py:262(parse)
      100    0.000    0.000    0.001    0.000 load_grammar.py:240(_add_rule)
       25    0.000    0.000    0.004    0.000 grammar_analysis.py:180(expand_rule)
       50    0.000    0.000    0.001    0.000 earley_forest.py:437(_visit_node_out_helper)
      200    0.000    0.000    0.012    0.000 utils.py:269(classify_bool)
        5    0.000    0.000    0.001    0.000 earley.py:188(scan)
      702    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
      200    0.000    0.000    0.001    0.000 load_grammar.py:222(expansions)
      200    0.000    0.000    0.001    0.000 load_grammar.py:219(expansion)
      200    0.000    0.000    0.001    0.000 {built-in method builtins.sum}
       50    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
      342    0.000    0.000    0.000    0.000 grammar_analysis.py:28(next)
     1100    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
      139    0.000    0.000    0.000    0.000 {built-in method fromkeys}
      139    0.000    0.000    0.000    0.000 utils.py:339(__init__)
      201    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      151    0.000    0.000    0.000    0.000 utils.py:348(__iter__)
       50    0.000    0.000    0.000    0.000 earley_forest.py:64(add_family)
      200    0.000    0.000    0.000    0.000 {built-in method builtins.min}
      400    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
        3    0.000    0.000    0.023    0.008 tree_matcher.py:148(match_tree)
      604    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
       25    0.000    0.000    0.000    0.000 earley_forest.py:631(visit_packed_node_in)
      100    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
       10    0.000    0.000    0.000    0.000 reconstruct.py:33(__default__)
       50    0.000    0.000    0.000    0.000 earley_forest.py:131(__init__)
      100    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
        3    0.000    0.000    0.003    0.001 earley.py:171(_parse)
      103    0.000    0.000    0.000    0.000 copyreg.py:90(__newobj__)
       15    0.000    0.000    0.000    0.000 lexer.py:213(_future_new)
       50    0.000    0.000    0.001    0.000 earley_forest.py:85(children)
      100    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
       32    0.000    0.000    0.000    0.000 tree_matcher.py:48(_match)
       50    0.000    0.000    0.000    0.000 earley_forest.py:141(is_empty)
       50    0.000    0.000    0.000    0.000 earley_common.py:25(advance)
       20    0.000    0.000    0.000    0.000 earley_forest.py:581(transform_symbol_node)
       21    0.000    0.000    0.000    0.000 earley.py:58(<listcomp>)
      100    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
       25    0.000    0.000    0.000    0.000 earley_forest.py:427(visit_packed_node_in)
       25    0.000    0.000    0.001    0.000 earley_forest.py:638(visit_packed_node_out)
      100    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
       25    0.000    0.000    0.000    0.000 earley_forest.py:422(visit_symbol_node_in)
      100    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
       25    0.000    0.000    0.001    0.000 earley_forest.py:625(visit_symbol_node_in)
       22    0.000    0.000    0.000    0.000 tree_matcher.py:65(parse_rulename)
        1    0.000    0.000    0.009    0.009 xearley.py:39(_parse)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:82(<setcomp>)
       74    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
      326    0.000    0.000    0.000    0.000 copy.py:182(_deepcopy_atomic)
       50    0.000    0.000    0.000    0.000 earley_forest.py:145(sort_key)
       10    0.000    0.000    0.000    0.000 Parser.py:253(cell)
        8    0.000    0.000    0.000    0.000 tree_matcher.py:21(__call__)
      277    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
        8    0.000    0.000    0.000    0.000 Cell.py:81(set_cell_value)
       46    0.000    0.000    0.000    0.000 parser_frontends.py:184(match)
       20    0.000    0.000    0.000    0.000 earley_forest.py:565(_call_rule_func)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:145(<dictcomp>)
      111    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
      224    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.deque' objects}
        5    0.000    0.000    0.011    0.002 Workbook.py:555(get_formula_value)
       20    0.000    0.000    0.000    0.000 earley_forest.py:556(_collapse_ambig)
        2    0.000    0.000    0.000    0.000 earley.py:52(<setcomp>)
       25    0.000    0.000    0.000    0.000 earley_forest.py:499(__init__)
       25    0.000    0.000    0.000    0.000 typing.py:255(inner)
       25    0.000    0.000    0.000    0.000 earley_forest.py:155(children)
        2    0.000    0.000    0.000    0.000 tree_matcher.py:178(<dictcomp>)
       25    0.000    0.000    0.000    0.000 earley_forest.py:70(load_paths)
       25    0.000    0.000    0.000    0.000 typing.py:720(__hash__)
      123    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
        2    0.000    0.000    0.000    0.000 earley.py:53(<setcomp>)
       61    0.000    0.000    0.000    0.000 grammar_analysis.py:149(<lambda>)
       25    0.000    0.000    0.001    0.000 earley_forest.py:450(visit_packed_node_out)
       15    0.000    0.000    0.000    0.000 lexer.py:202(__new__)
      8/4    0.000    0.000    0.024    0.006 reconstruct.py:85(_reconstruct)
      100    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
     15/5    0.000    0.000    0.001    0.000 visitors.py:421(_visit_tree)
     15/5    0.000    0.000    0.000    0.000 visitors.py:444(inner)
      5/3    0.000    0.000    0.000    0.000 copy.py:226(_deepcopy_dict)
       10    0.000    0.000    0.000    0.000 Workbook.py:817(get_cell_value)
       75    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       19    0.000    0.000    0.000    0.000 copy.py:242(_keep_alive)
        4    0.000    0.000    0.000    0.000 earley_forest.py:523(__init__)
        9    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
        5    0.000    0.000    0.000    0.000 Parser.py:211(mul_expr)
      100    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
       50    0.000    0.000    0.000    0.000 utils.py:357(__len__)
      112    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
      106    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
       15    0.000    0.000    0.000    0.000 Parser.py:40(fix_formula)
     15/5    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
        5    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
       20    0.000    0.000    0.000    0.000 earley_forest.py:444(visit_symbol_node_out)
        6    0.000    0.000    0.000    0.000 Workbook.py:698(_get_sheet_name_location)
        4    0.000    0.000    0.004    0.001 earley_forest.py:535(visit)
        6    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        2    0.000    0.000    0.001    0.000 grammar_analysis.py:175(<dictcomp>)
       11    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
        6    0.000    0.000    0.000    0.000 Sheet.py:111(_shrink_sheet)
       11    0.000    0.000    0.000    0.000 Workbook.py:551(get_sheet_name_from_hidden)
     15/5    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
       25    0.000    0.000    0.000    0.000 earley_forest.py:158(<listcomp>)
        4    0.000    0.000    0.004    0.001 earley_forest.py:397(transform)
       61    0.000    0.000    0.000    0.000 grammar_analysis.py:172(<lambda>)
       20    0.000    0.000    0.000    0.000 earley_forest.py:571(_call_ambig_func)
        2    0.000    0.000    0.000    0.000 Parser.py:382(cell)
        8    0.000    0.000    0.000    0.000 reconstruct.py:15(is_iter_empty)
        9    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        2    0.000    0.000    0.000    0.000 Parser.py:389(CELLREF_NO_ABS)
        3    0.000    0.000    0.000    0.000 earley.py:245(<setcomp>)
        4    0.000    0.000    0.000    0.000 earley.py:284(<listcomp>)
       50    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
        4    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
        5    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
       22    0.000    0.000    0.000    0.000 {method 'groups' of 're.Match' objects}
        1    0.000    0.000    0.010    0.010 parser_frontends.py:100(parse)
       10    0.000    0.000    0.000    0.000 re.py:203(sub)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:60(__init__)
      3/1    0.000    0.000    0.000    0.000 tree.py:206(__deepcopy__)
      4/2    0.000    0.000    0.000    0.000 copy.py:200(_deepcopy_list)
       50    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
       45    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
       15    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
        5    0.000    0.000    0.000    0.000 Sheet.py:104(set_cell_value)
       11    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
       10    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:166(<dictcomp>)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:160(<dictcomp>)
        2    0.000    0.000    0.000    0.000 grammar_analysis.py:163(<dictcomp>)
        1    0.000    0.000    0.024    0.024 reconstruct.py:96(reconstruct)
        3    0.000    0.000    0.000    0.000 Cell.py:46(__init__)
       10    0.000    0.000    0.000    0.000 parse_tree_builder.py:20(__call__)
       23    0.000    0.000    0.000    0.000 Cell.py:125(get_value)
       16    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        4    0.000    0.000    0.000    0.000 Graph.py:96(update_child)
        6    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        3    0.000    0.000    0.000    0.000 lexer.py:262(__deepcopy__)
        8    0.000    0.000    0.000    0.000 copy.py:263(<genexpr>)
        5    0.000    0.000    0.000    0.000 earley_forest.py:447(visit_intermediate_node_out)
        2    0.000    0.000    0.000    0.000 common.py:83(__init__)
        6    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 Workbook.py:711(add_children_cells)
        5    0.000    0.000    0.001    0.000 visitors.py:415(visit)
        1    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
       13    0.000    0.000    0.000    0.000 Cell.py:128(get_contents)
        1    0.000    0.000    0.000    0.000 utils.py:307(error_matcher)
       11    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
        4    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
        2    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
       12    0.000    0.000    0.000    0.000 {built-in method _heapq.heapify}
        6    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
       18    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        5    0.000    0.000    0.000    0.000 earley.py:254(<setcomp>)
       10    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
        5    0.000    0.000    0.000    0.000 {method 'clear' of 'set' objects}
       11    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
        1    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
        4    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.010    0.010 lark.py:640(parse)
        6    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
        2    0.000    0.000    0.000    0.000 {method 'normalize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        3    0.000    0.000    0.000    0.000 tree_matcher.py:74(__init__)
       10    0.000    0.000    0.000    0.000 Cell.py:135(get_children)
        9    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
        6    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
        6    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        3    0.000    0.000    0.000    0.000 tree_matcher.py:77(lex)
        5    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
        6    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        5    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        1    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
        1    0.000    0.000    0.000    0.000 Parser.py:378(__init__)
        6    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
        2    0.000    0.000    0.000    0.000 {method '__deepcopy__' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_move_cells2... #######################
for test <function pro_move_cells2 at 0x000002B4D81EA820> total time: 6.702177900000001
Total Logs
         805776 function calls (799317 primitive calls) in 0.596 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      594    0.093    0.000    0.335    0.001 earley.py:78(predict_and_complete)
    37719    0.057    0.000    0.086    0.000 earley_common.py:9(__init__)
94555/91858    0.028    0.000    0.036    0.000 {built-in method builtins.hash}
      198    0.028    0.000    0.097    0.000 earley_forest.py:283(visit)
    28116    0.024    0.000    0.037    0.000 utils.py:345(add)
    24481    0.021    0.000    0.040    0.000 grammar.py:18(__eq__)
    51719    0.017    0.000    0.025    0.000 grammar.py:25(__hash__)
    31383    0.014    0.000    0.015    0.000 earley_common.py:28(__eq__)
    22362    0.013    0.000    0.017    0.000 lexer.py:265(__eq__)
    69441    0.011    0.000    0.011    0.000 {built-in method builtins.isinstance}
    14256    0.011    0.000    0.019    0.000 utils.py:342(__contains__)
     7299    0.011    0.000    0.013    0.000 typing.py:868(__new__)
     1089    0.010    0.000    0.037    0.000 earley.py:135(<listcomp>)
     2079    0.010    0.000    0.024    0.000 earley_forest.py:50(__init__)
      297    0.007    0.000    0.024    0.000 xearley.py:41(scan)
    40770    0.007    0.000    0.007    0.000 grammar.py:121(__hash__)
    42372    0.007    0.000    0.007    0.000 earley_common.py:31(__hash__)
     2079    0.007    0.000    0.027    0.000 earley_forest.py:437(_visit_node_out_helper)
    45055    0.007    0.000    0.007    0.000 {method 'append' of 'list' objects}
 2970/198    0.006    0.000    0.015    0.000 copy.py:128(deepcopy)
    50087    0.006    0.000    0.006    0.000 {built-in method builtins.len}
     7961    0.006    0.000    0.006    0.000 {built-in method builtins.iter}
      198    0.005    0.000    0.487    0.002 earley.py:262(parse)
     1089    0.005    0.000    0.012    0.000 earley_forest.py:603(transform_packed_node)
    17440    0.005    0.000    0.005    0.000 {built-in method builtins.next}
     5742    0.005    0.000    0.005    0.000 {built-in method fromkeys}
    29508    0.005    0.000    0.005    0.000 {built-in method builtins.id}
     1980    0.004    0.000    0.009    0.000 {built-in method builtins.sorted}
     5742    0.004    0.000    0.009    0.000 utils.py:339(__init__)
     2178    0.004    0.000    0.011    0.000 earley_forest.py:64(add_family)
      396    0.003    0.000    0.462    0.001 Workbook.py:649(recompute_cell_and_parents)
1206/1202    0.003    0.000    0.015    0.000 visitors.py:111(_call_userfunc)
     2178    0.003    0.000    0.005    0.000 earley_forest.py:131(__init__)
      396    0.003    0.000    0.483    0.001 Workbook.py:738(set_cell_contents)
5438/4997    0.003    0.000    0.004    0.000 {built-in method builtins.getattr}
        1    0.003    0.003    0.596    0.596 Workbook.py:284(transfer_cells)
      498    0.003    0.000    0.004    0.000 utils.py:179(convert_location_to_idx)
     8191    0.003    0.000    0.003    0.000 {built-in method __new__ of type object at 0x00007FFB3714DCB0}
     1089    0.003    0.000    0.007    0.000 earley_forest.py:631(visit_packed_node_in)
     2677    0.003    0.000    0.003    0.000 {method 'match' of 're.Pattern' objects}
      891    0.003    0.000    0.007    0.000 earley_forest.py:581(transform_symbol_node)
     2178    0.003    0.000    0.011    0.000 earley_common.py:25(advance)
     5841    0.003    0.000    0.008    0.000 utils.py:348(__iter__)
      219    0.002    0.000    0.004    0.000 tree.py:137(iter_subtrees)
     1980    0.002    0.000    0.014    0.000 earley_forest.py:85(children)
     1089    0.002    0.000    0.020    0.000 earley_forest.py:638(visit_packed_node_out)
      396    0.002    0.000    0.011    0.000 Sheet.py:60(set_cell_contents)
       99    0.002    0.000    0.350    0.004 xearley.py:39(_parse)
       99    0.002    0.000    0.009    0.000 earley.py:188(scan)
        1    0.002    0.002    0.004    0.004 grammar_analysis.py:78(calculate_sets)
     1089    0.002    0.000    0.004    0.000 earley_forest.py:427(visit_packed_node_in)
     3069    0.002    0.000    0.003    0.000 {method 'setdefault' of 'dict' objects}
2038/1900    0.002    0.000    0.013    0.000 visitors.py:143(_transform_children)
      990    0.002    0.000    0.011    0.000 earley_forest.py:422(visit_symbol_node_in)
     9111    0.002    0.000    0.002    0.000 {method 'get' of 'dict' objects}
       40    0.002    0.000    0.005    0.000 visitors.py:293(transform)
     1386    0.002    0.000    0.003    0.000 Sheet.py:93(get_cell_value)
      164    0.002    0.000    0.017    0.000 visitors.py:278(transform)
     5692    0.002    0.000    0.002    0.000 {method 'add' of 'set' objects}
      990    0.002    0.000    0.018    0.000 earley_forest.py:625(visit_symbol_node_in)
      396    0.002    0.000    0.002    0.000 {built-in method _heapq.heapify}
     2178    0.002    0.000    0.002    0.000 earley_forest.py:145(sort_key)
     9702    0.002    0.000    0.002    0.000 {method 'pop' of 'collections.deque' objects}
      891    0.002    0.000    0.004    0.000 earley_forest.py:565(_call_rule_func)
      396    0.002    0.000    0.002    0.000 Cell.py:81(set_cell_value)
      891    0.001    0.000    0.003    0.000 earley_forest.py:556(_collapse_ambig)
      990    0.001    0.000    0.002    0.000 earley_forest.py:70(load_paths)
      496    0.001    0.000    0.002    0.000 utils.py:194(convert_idx_to_location)
  297/198    0.001    0.000    0.010    0.000 copy.py:226(_deepcopy_dict)
  298/199    0.001    0.000    0.013    0.000 copy.py:258(_reconstruct)
     8947    0.001    0.000    0.001    0.000 {method 'append' of 'collections.deque' objects}
      198    0.001    0.000    0.451    0.002 Workbook.py:555(get_formula_value)
     1881    0.001    0.000    0.003    0.000 parser_frontends.py:184(match)
      693    0.001    0.000    0.002    0.000 lexer.py:213(_future_new)
     1089    0.001    0.000    0.002    0.000 earley_forest.py:155(children)
       99    0.001    0.000    0.022    0.000 earley.py:171(_parse)
      990    0.001    0.000    0.001    0.000 earley_forest.py:499(__init__)
     1298    0.001    0.000    0.001    0.000 {method 'join' of 'str' objects}
      594    0.001    0.000    0.002    0.000 tree_matcher.py:48(_match)
       99    0.001    0.000    0.443    0.004 parser_frontends.py:100(parse)
      725    0.001    0.000    0.003    0.000 visitors.py:171(__default__)
     4561    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
     1685    0.001    0.000    0.001    0.000 utils.py:78(get_hidden_name)
      994    0.001    0.000    0.001    0.000 re.py:289(_compile)
      198    0.001    0.000    0.004    0.000 Parser.py:253(cell)
      990    0.001    0.000    0.001    0.000 copy.py:242(_keep_alive)
     1089    0.001    0.000    0.017    0.000 earley_forest.py:450(visit_packed_node_out)
      954    0.001    0.000    0.001    0.000 tree.py:147(<listcomp>)
      693    0.001    0.000    0.003    0.000 lexer.py:202(__new__)
       99    0.001    0.000    0.055    0.001 tree_matcher.py:148(match_tree)
      796    0.001    0.000    0.003    0.000 re.py:188(match)
     3069    0.001    0.000    0.001    0.000 {method 'remove' of 'set' objects}
      198    0.001    0.000    0.003    0.000 earley.py:284(<listcomp>)
     1980    0.001    0.000    0.001    0.000 utils.py:357(__len__)
      891    0.001    0.000    0.011    0.000 earley_forest.py:444(visit_symbol_node_out)
     2178    0.001    0.000    0.001    0.000 earley_forest.py:141(is_empty)
     1219    0.001    0.000    0.001    0.000 tree.py:61(__init__)
      396    0.001    0.000    0.484    0.001 Workbook.py:37(run_func)
      697    0.001    0.000    0.003    0.000 utils.py:131(check_valid_cell_location)
      396    0.001    0.000    0.001    0.000 Sheet.py:124(update_extent)
      198    0.001    0.000    0.001    0.000 earley_forest.py:523(__init__)
      198    0.001    0.000    0.098    0.000 earley_forest.py:535(visit)
      198    0.001    0.000    0.001    0.000 Workbook.py:698(_get_sheet_name_location)
      396    0.001    0.000    0.002    0.000 Workbook.py:725(clean_children_cells)
      396    0.001    0.000    0.001    0.000 Graph.py:330(tarjans)
      495    0.001    0.000    0.001    0.000 Workbook.py:551(get_sheet_name_from_hidden)
     2862    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
      495    0.001    0.000    0.001    0.000 {method 'remove' of 'list' objects}
      198    0.001    0.000    0.098    0.000 earley_forest.py:397(transform)
      396    0.001    0.000    0.001    0.000 Cell.py:65(set_contents)
        1    0.001    0.001    0.024    0.024 load_grammar.py:690(compile)
       99    0.001    0.000    0.002    0.000 Parser.py:382(cell)
  157/111    0.001    0.000    0.006    0.000 visitors.py:155(_transform_tree)
       99    0.001    0.000    0.003    0.000 Parser.py:389(CELLREF_NO_ABS)
     1090    0.001    0.000    0.001    0.000 Sheet.py:120(get_cell)
       99    0.001    0.000    0.001    0.000 reconstruct.py:33(__default__)
      291    0.001    0.000    0.003    0.000 visitors.py:130(_call_userfunc_token)
     1089    0.001    0.000    0.001    0.000 earley_forest.py:158(<listcomp>)
      297    0.001    0.000    0.001    0.000 earley_forest.py:432(visit_token_node)
     2079    0.001    0.000    0.001    0.000 earley_forest.py:548(_check_cycle)
      891    0.001    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
      690    0.001    0.000    0.010    0.000 visitors.py:275(_transform_tree)
      198    0.000    0.000    0.002    0.000 Workbook.py:817(get_cell_value)
      201    0.000    0.000    0.001    0.000 tree.py:179(expand_kids_by_data)
     1881    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
     1085    0.000    0.000    0.001    0.000 tree.py:66(meta)
      396    0.000    0.000    0.001    0.000 earley_forest.py:193(__init__)
      198    0.000    0.000    0.001    0.000 earley_forest.py:390(__init__)
     2178    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
      198    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
      100    0.000    0.000    0.004    0.000 Workbook.py:593(recompute_cell_value)
       99    0.000    0.000    0.001    0.000 parser_frontends.py:96(_make_lexer_thread)
      101    0.000    0.000    0.001    0.000 grammar_analysis.py:187(_expand_rule)
       63    0.000    0.000    0.001    0.000 functools.py:34(update_wrapper)
      198    0.000    0.000    0.003    0.000 Sheet.py:111(_shrink_sheet)
      693    0.000    0.000    0.000    0.000 parse_tree_builder.py:20(__call__)
       41    0.000    0.000    0.000    0.000 {built-in method builtins.compile}
       99    0.000    0.000    0.001    0.000 tree_matcher.py:21(__call__)
      198    0.000    0.000    0.001    0.000 Cell.py:46(__init__)
       99    0.000    0.000    0.059    0.001 reconstruct.py:96(reconstruct)
      198    0.000    0.000    0.002    0.000 copy.py:200(_deepcopy_list)
      198    0.000    0.000    0.004    0.000 Parser.py:40(fix_formula)
      198    0.000    0.000    0.001    0.000 utils.py:207(remove_exponent)
       41    0.000    0.000    0.002    0.000 load_grammar.py:566(_literal_to_pattern)
       99    0.000    0.000    0.002    0.000 tree.py:206(__deepcopy__)
       99    0.000    0.000    0.001    0.000 earley.py:245(<setcomp>)
      742    0.000    0.000    0.000    0.000 grammar.py:42(__init__)
      198    0.000    0.000    0.002    0.000 Sheet.py:104(set_cell_value)
      382    0.000    0.000    0.000    0.000 grammar_analysis.py:70(update_set)
      198    0.000    0.000    0.005    0.000 visitors.py:444(inner)
      298    0.000    0.000    0.001    0.000 Workbook.py:586(get_cell_from_location)
       99    0.000    0.000    0.001    0.000 Workbook.py:711(add_children_cells)
      198    0.000    0.000    0.059    0.000 reconstruct.py:85(_reconstruct)
      198    0.000    0.000    0.006    0.000 visitors.py:421(_visit_tree)
     1090    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      594    0.000    0.000    0.002    0.000 copy.py:263(<genexpr>)
      298    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
       99    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
       28    0.000    0.000    0.001    0.000 tree_matcher.py:106(_build_recons_rules)
     1093    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
   105/45    0.000    0.000    0.002    0.000 load_grammar.py:389(expansion)
      396    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
      495    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
      198    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
     1881    0.000    0.000    0.000    0.000 copy.py:182(_deepcopy_atomic)
   146/84    0.000    0.000    0.003    0.000 visitors.py:342(_call_userfunc)
      396    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
       41    0.000    0.000    0.001    0.000 load_grammar.py:540(eval_escaping)
      198    0.000    0.000    0.001    0.000 re.py:203(sub)
       63    0.000    0.000    0.002    0.000 utils.py:275(bfs)
      891    0.000    0.000    0.000    0.000 Cell.py:125(get_value)
       99    0.000    0.000    0.443    0.004 lark.py:640(parse)
      219    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
       99    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
       99    0.000    0.000    0.001    0.000 tree_matcher.py:65(parse_rulename)
       99    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      198    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
      297    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      594    0.000    0.000    0.000    0.000 Cell.py:128(get_contents)
       99    0.000    0.000    0.000    0.000 Graph.py:96(update_child)
       86    0.000    0.000    0.000    0.000 grammar.py:103(__init__)
      996    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       99    0.000    0.000    0.001    0.000 lexer.py:262(__deepcopy__)
      198    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      155    0.000    0.000    0.001    0.000 load_grammar.py:384(_flatten)
    40/11    0.000    0.000    0.003    0.000 visitors.py:362(visit)
      198    0.000    0.000    0.006    0.000 visitors.py:415(visit)
      496    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
      172    0.000    0.000    0.000    0.000 grammar_analysis.py:17(__init__)
       41    0.000    0.000    0.001    0.000 ast.py:51(literal_eval)
      263    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
      199    0.000    0.000    0.000    0.000 copyreg.py:90(__newobj__)
       99    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
        2    0.000    0.000    0.000    0.000 utils.py:23(classify)
      219    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
      495    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
       35    0.000    0.000    0.001    0.000 load_grammar.py:420(expansions)
       63    0.000    0.000    0.001    0.000 visitors.py:481(__get__)
  139/129    0.000    0.000    0.000    0.000 tree.py:134(__hash__)
      693    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
      198    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
    15/13    0.000    0.000    0.001    0.000 load_grammar.py:405(<listcomp>)
        1    0.000    0.000    0.026    0.026 tree_matcher.py:89(__init__)
        1    0.000    0.000    0.596    0.596 Workbook.py:380(move_cells)
      396    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
      111    0.000    0.000    0.007    0.000 visitors.py:159(transform)
       35    0.000    0.000    0.000    0.000 tree_matcher.py:121(<listcomp>)
      198    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
      496    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
      101    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      595    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
        1    0.000    0.000    0.007    0.007 earley.py:32(__init__)
      198    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
      198    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
       49    0.000    0.000    0.000    0.000 tree_matcher.py:57(make_recons_rule)
      172    0.000    0.000    0.000    0.000 grammar_analysis.py:45(__hash__)
       41    0.000    0.000    0.002    0.000 load_grammar.py:601(literal)
      256    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      396    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
       63    0.000    0.000    0.001    0.000 visitors.py:470(__init__)
       99    0.000    0.000    0.000    0.000 reconstruct.py:15(is_iter_empty)
       11    0.000    0.000    0.000    0.000 load_grammar.py:450(pattern)
       25    0.000    0.000    0.013    0.001 visitors.py:258(transform)
      396    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
        1    0.000    0.000    0.005    0.005 grammar_analysis.py:141(__init__)
       99    0.000    0.000    0.001    0.000 earley_forest.py:447(visit_intermediate_node_out)
       13    0.000    0.000    0.002    0.000 grammar_analysis.py:180(expand_rule)
      198    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
       63    0.000    0.000    0.002    0.000 visitors.py:500(_vargs_inline)
      219    0.000    0.000    0.000    0.000 {method 'values' of 'collections.OrderedDict' objects}
      315    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
       63    0.000    0.000    0.002    0.000 visitors.py:478(__call__)
      396    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      168    0.000    0.000    0.000    0.000 tree_matcher.py:12(is_discarded_terminal)
       45    0.000    0.000    0.000    0.000 {built-in method builtins.max}
       99    0.000    0.000    0.000    0.000 Parser.py:378(__init__)
       25    0.000    0.000    0.004    0.000 load_grammar.py:674(nr_deepcopy_tree)
      198    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
      123    0.000    0.000    0.000    0.000 load_grammar.py:537(<genexpr>)
       47    0.000    0.000    0.000    0.000 lexer.py:41(__init__)
      170    0.000    0.000    0.000    0.000 grammar_analysis.py:28(next)
      297    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 load_grammar.py:793(<setcomp>)
      301    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
      105    0.000    0.000    0.000    0.000 load_grammar.py:759(<genexpr>)
        2    0.000    0.000    0.000    0.000 tree_matcher.py:28(_best_from_group)
       41    0.000    0.000    0.000    0.000 load_grammar.py:536(_rfind)
       99    0.000    0.000    0.000    0.000 tree_matcher.py:77(lex)
       99    0.000    0.000    0.000    0.000 {method 'groups' of 're.Match' objects}
      297    0.000    0.000    0.000    0.000 Cell.py:135(get_children)
      297    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
       41    0.000    0.000    0.000    0.000 ast.py:30(parse)
      110    0.000    0.000    0.000    0.000 tree.py:32(__init__)
       99    0.000    0.000    0.000    0.000 {method 'clear' of 'set' objects}
       99    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
       99    0.000    0.000    0.000    0.000 tree_matcher.py:74(__init__)
       15    0.000    0.000    0.000    0.000 utils.py:190(<listcomp>)
       35    0.000    0.000    0.000    0.000 load_grammar.py:798(<lambda>)
      198    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
       53    0.000    0.000    0.000    0.000 grammar.py:69(__init__)
       82    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
       20    0.000    0.000    0.000    0.000 load_grammar.py:631(expansions)
      192    0.000    0.000    0.000    0.000 visitors.py:178(__default_token__)
       54    0.000    0.000    0.000    0.000 lexer.py:50(__hash__)
      200    0.000    0.000    0.000    0.000 Graph.py:137(get_parents_from_cell)
        1    0.000    0.000    0.006    0.006 load_grammar.py:710(<listcomp>)
       11    0.000    0.000    0.000    0.000 earley.py:58(<listcomp>)
       99    0.000    0.000    0.000    0.000 earley.py:254(<setcomp>)
      113    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
       20    0.000    0.000    0.000    0.000 load_grammar.py:637(<lambda>)
        7    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
        2    0.000    0.000    0.000    0.000 utils.py:271(<listcomp>)
       41    0.000    0.000    0.000    0.000 {built-in method builtins.all}
       10    0.000    0.000    0.000    0.000 load_grammar.py:346(expr)
      198    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 tree_matcher.py:115(<setcomp>)
      116    0.000    0.000    0.000    0.000 tree.py:175(<lambda>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:806(<setcomp>)
       49    0.000    0.000    0.000    0.000 tree_matcher.py:17(__init__)
       20    0.000    0.000    0.000    0.000 lexer.py:81(to_regexp)
       46    0.000    0.000    0.000    0.000 load_grammar.py:668(value)
       35    0.000    0.000    0.000    0.000 load_grammar.py:621(expansion)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:108(<setcomp>)
       15    0.000    0.000    0.000    0.000 tree.py:169(find_pred)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:82(<setcomp>)
       21    0.000    0.000    0.000    0.000 lexer.py:125(__init__)
       20    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
        1    0.000    0.000    0.002    0.002 load_grammar.py:693(<listcomp>)
       41    0.000    0.000    0.000    0.000 ast.py:76(_convert)
       35    0.000    0.000    0.000    0.000 grammar.py:22(__ne__)
       50    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
       15    0.000    0.000    0.000    0.000 utils.py:184(dedup_list)
       20    0.000    0.000    0.000    0.000 re.py:270(escape)
       14    0.000    0.000    0.000    0.000 tree_matcher.py:61(make_recons_rule_to_term)
        1    0.000    0.000    0.000    0.000 earley.py:52(<setcomp>)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:178(<dictcomp>)
       25    0.000    0.000    0.000    0.000 load_grammar.py:639(<genexpr>)
       13    0.000    0.000    0.000    0.000 typing.py:720(__hash__)
        2    0.000    0.000    0.000    0.000 tree_matcher.py:42(_best_rules_from_group)
        1    0.000    0.000    0.000    0.000 earley.py:53(<setcomp>)
       13    0.000    0.000    0.000    0.000 typing.py:255(inner)
       30    0.000    0.000    0.000    0.000 visitors.py:108(__init__)
        1    0.000    0.000    0.000    0.000 tree_matcher.py:116(<setcomp>)
       21    0.000    0.000    0.000    0.000 lexer.py:70(_get_flags)
       15    0.000    0.000    0.000    0.000 tree.py:173(find_data)
        1    0.000    0.000    0.002    0.002 load_grammar.py:694(<listcomp>)
       35    0.000    0.000    0.000    0.000 {built-in method builtins.any}
       99    0.000    0.000    0.000    0.000 {method '__deepcopy__' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 copy.py:66(copy)
       49    0.000    0.000    0.000    0.000 load_grammar.py:572(<genexpr>)
        1    0.000    0.000    0.026    0.026 reconstruct.py:80(__init__)
       15    0.000    0.000    0.000    0.000 lexer.py:53(__eq__)
       65    0.000    0.000    0.000    0.000 typing.py:1149(cast)
       33    0.000    0.000    0.000    0.000 tree_matcher.py:44(<lambda>)
        6    0.000    0.000    0.000    0.000 load_grammar.py:411(alias)
       21    0.000    0.000    0.000    0.000 load_grammar.py:809(<lambda>)
       50    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
       35    0.000    0.000    0.000    0.000 load_grammar.py:431(expansion)
        1    0.000    0.000    0.000    0.000 load_grammar.py:246(_add_recurse_rule)
        1    0.000    0.000    0.000    0.000 load_grammar.py:446(<dictcomp>)
       20    0.000    0.000    0.000    0.000 lexer.py:88(max_width)
       30    0.000    0.000    0.000    0.000 load_grammar.py:663(value)
       30    0.000    0.000    0.000    0.000 load_grammar.py:617(pattern)
        1    0.000    0.000    0.000    0.000 load_grammar.py:642(expr)
       34    0.000    0.000    0.000    0.000 grammar_analysis.py:149(<lambda>)
        4    0.000    0.000    0.000    0.000 grammar.py:124(__eq__)
        5    0.000    0.000    0.000    0.000 load_grammar.py:640(<setcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:375(maybe)
       20    0.000    0.000    0.000    0.000 lexer.py:84(min_width)
       34    0.000    0.000    0.000    0.000 grammar_analysis.py:172(<lambda>)
        5    0.000    0.000    0.000    0.000 load_grammar.py:613(_make_joined_pattern)
        2    0.000    0.000    0.000    0.000 visitors.py:163(__mul__)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:175(<dictcomp>)
        9    0.000    0.000    0.000    0.000 load_grammar.py:210(_args_as_int)
       35    0.000    0.000    0.000    0.000 tree_matcher.py:43(<lambda>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:443(__init__)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:60(__init__)
        1    0.000    0.000    0.000    0.000 reconstruct.py:83(<dictcomp>)
        2    0.000    0.000    0.000    0.000 load_grammar.py:201(_will_not_get_removed)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:145(<dictcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:763(<listcomp>)
        2    0.000    0.000    0.000    0.000 load_grammar.py:219(expansion)
        8    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
        2    0.000    0.000    0.000    0.000 visitors.py:263(__mul__)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:163(<dictcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:235(_name_rule)
        2    0.000    0.000    0.000    0.000 utils.py:269(classify_bool)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:166(<dictcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
        1    0.000    0.000    0.000    0.000 grammar_analysis.py:160(<dictcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
        1    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
       11    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 load_grammar.py:240(_add_rule)
        1    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
        1    0.000    0.000    0.000    0.000 common.py:83(__init__)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        1    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
        1    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
        4    0.000    0.000    0.000    0.000 visitors.py:255(__init__)
        2    0.000    0.000    0.000    0.000 load_grammar.py:222(expansions)
        4    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
        1    0.000    0.000    0.000    0.000 reconstruct.py:29(__init__)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        1    0.000    0.000    0.000    0.000 load_grammar.py:198(__init__)
        1    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_create_sheets... #######################
for test <function pro_create_sheets at 0x000002B4D81EA940> total time: 0.0357956
Total Logs
         36857 function calls in 0.009 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     5000    0.002    0.000    0.005    0.000 random.py:285(choice)
     5000    0.002    0.000    0.003    0.000 random.py:250(_randbelow_with_getrandbits)
     5100    0.002    0.000    0.007    0.000 profiler.py:46(<genexpr>)
      100    0.001    0.000    0.001    0.000 utils.py:96(check_new_name)
      100    0.001    0.000    0.007    0.000 {method 'join' of 'str' objects}
     5155    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
     5100    0.000    0.000    0.000    0.000 {built-in method builtins.len}
      100    0.000    0.000    0.002    0.000 Workbook.py:879(new_sheet)
     5000    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
     5000    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
      100    0.000    0.000    0.007    0.000 profiler.py:43(generate_random_string)
      100    0.000    0.000    0.002    0.000 Workbook.py:37(run_func)
      100    0.000    0.000    0.000    0.000 Sheet.py:25(__init__)
      100    0.000    0.000    0.000    0.000 Graph.py:128(get_sheet_parents)
      100    0.000    0.000    0.000    0.000 Workbook.py:868(recompute_sheet_parents)
      100    0.000    0.000    0.000    0.000 Workbook.py:516(num_sheets)
      100    0.000    0.000    0.000    0.000 Graph.py:121(has_sheet)
      100    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
      100    0.000    0.000    0.000    0.000 Graph.py:124(add_sheet)
      100    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
      100    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_set_cell_contents... #######################
for test <function pro_set_cell_contents at 0x000002B4D81EAA60> total time: 39.66962359999999
Total Logs
         30967735 function calls in 9.659 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  4999500    2.529    0.000    6.185    0.000 random.py:285(choice)
  4999500    2.352    0.000    3.253    0.000 random.py:250(_randbelow_with_getrandbits)
  5009499    2.035    0.000    8.220    0.000 profiler.py:46(<genexpr>)
    29997    0.800    0.000    9.020    0.000 {method 'join' of 'str' objects}
  5160314    0.532    0.000    0.532    0.000 {method 'getrandbits' of '_random.Random' objects}
  5069493    0.411    0.000    0.411    0.000 {built-in method builtins.len}
  4999500    0.369    0.000    0.369    0.000 {method 'bit_length' of 'int' objects}
     9999    0.073    0.000    0.594    0.000 Workbook.py:738(set_cell_contents)
     9999    0.062    0.000    0.159    0.000 Cell.py:81(set_cell_value)
   189981    0.060    0.000    0.060    0.000 {method 'lower' of 'str' objects}
     9999    0.045    0.000    0.326    0.000 Sheet.py:60(set_cell_contents)
     9999    0.040    0.000    0.088    0.000 utils.py:307(error_matcher)
     9999    0.040    0.000    0.065    0.000 Workbook.py:649(recompute_cell_and_parents)
     9999    0.037    0.000    0.060    0.000 utils.py:179(convert_location_to_idx)
     9999    0.024    0.000    9.026    0.001 profiler.py:43(generate_random_string)
    19998    0.021    0.000    0.035    0.000 Sheet.py:93(get_cell_value)
     9999    0.018    0.000    0.023    0.000 profiler.py:25(convert_to_excel_coordinates)
     9999    0.016    0.000    0.610    0.000 Workbook.py:37(run_func)
     9999    0.016    0.000    0.019    0.000 Sheet.py:124(update_extent)
     9999    0.015    0.000    0.177    0.000 Cell.py:65(set_contents)
     9999    0.014    0.000    0.191    0.000 Cell.py:46(__init__)
     9999    0.013    0.000    0.013    0.000 {method 'match' of 're.Pattern' objects}
    39996    0.012    0.000    0.012    0.000 {method 'get' of 'dict' objects}
     9999    0.011    0.000    0.017    0.000 re.py:289(_compile)
     9999    0.011    0.000    0.019    0.000 Workbook.py:551(get_sheet_name_from_hidden)
    19998    0.011    0.000    0.014    0.000 utils.py:78(get_hidden_name)
    19998    0.010    0.000    0.010    0.000 {built-in method _heapq.heappush}
     9999    0.010    0.000    0.040    0.000 re.py:188(match)
    79992    0.009    0.000    0.009    0.000 {method 'strip' of 'str' objects}
     9999    0.009    0.000    0.049    0.000 utils.py:131(check_valid_cell_location)
    19998    0.009    0.000    0.012    0.000 Sheet.py:120(get_cell)
    19998    0.007    0.000    0.007    0.000 {built-in method builtins.isinstance}
     9999    0.007    0.000    0.014    0.000 Workbook.py:725(clean_children_cells)
     9999    0.007    0.000    0.007    0.000 Graph.py:330(tarjans)
     9999    0.006    0.000    0.008    0.000 utils.py:212(is_formula)
     9999    0.003    0.000    0.003    0.000 {method 'lstrip' of 'str' objects}
     9999    0.002    0.000    0.002    0.000 {built-in method builtins.divmod}
    19998    0.002    0.000    0.002    0.000 {built-in method builtins.ord}
     9999    0.002    0.000    0.002    0.000 {method 'upper' of 'str' objects}
     9999    0.002    0.000    0.002    0.000 Cell.py:125(get_value)
     9999    0.002    0.000    0.002    0.000 Sheet.py:54(get_sheet_name)
     9999    0.002    0.000    0.002    0.000 {method 'rstrip' of 'str' objects}
     9999    0.002    0.000    0.002    0.000 {built-in method builtins.chr}
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_update_formula_chain... #######################
for test <function pro_update_formula_chain at 0x000002B4D81EACA0> total time: 35.84912800000003
Total Logs
         900012 function calls in 8.394 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    7.687    7.687    7.718    7.718 Graph.py:330(tarjans)
    10000    0.078    0.000    0.651    0.000 Workbook.py:593(recompute_cell_value)
     9999    0.046    0.000    0.375    0.000 Workbook.py:555(get_formula_value)
     9999    0.040    0.000    0.165    0.000 Parser.py:253(cell)
    29999    0.038    0.000    0.059    0.000 Sheet.py:93(get_cell_value)
    10000    0.037    0.000    0.067    0.000 Cell.py:81(set_cell_value)
     9999    0.023    0.000    0.090    0.000 Workbook.py:817(get_cell_value)
    40000    0.021    0.000    0.028    0.000 utils.py:78(get_hidden_name)
    20000    0.020    0.000    0.020    0.000 Graph.py:137(get_parents_from_cell)
    19998    0.019    0.000    0.029    0.000 {built-in method builtins.getattr}
        1    0.019    0.019    8.391    8.391 Workbook.py:649(recompute_cell_and_parents)
   100011    0.019    0.000    0.019    0.000 {method 'lower' of 'str' objects}
     9999    0.018    0.000    0.018    0.000 Parser.py:97(__init__)
     9999    0.018    0.000    0.269    0.000 visitors.py:421(_visit_tree)
     9999    0.018    0.000    0.021    0.000 typing.py:868(__new__)
     9999    0.017    0.000    0.088    0.000 Sheet.py:104(set_cell_value)
    69995    0.016    0.000    0.016    0.000 {built-in method builtins.isinstance}
    19999    0.015    0.000    0.021    0.000 re.py:289(_compile)
     9999    0.015    0.000    0.222    0.000 visitors.py:444(inner)
    50000    0.014    0.000    0.014    0.000 {method 'get' of 'dict' objects}
    10000    0.014    0.000    0.021    0.000 utils.py:207(remove_exponent)
     9999    0.013    0.000    0.023    0.000 visitors.py:429(visit_children)
    10000    0.013    0.000    0.029    0.000 Workbook.py:586(get_cell_from_location)
     9999    0.012    0.000    0.184    0.000 Parser.py:40(fix_formula)
    10000    0.011    0.000    0.021    0.000 Workbook.py:551(get_sheet_name_from_hidden)
     9999    0.010    0.000    0.029    0.000 re.py:203(sub)
    10000    0.010    0.000    0.029    0.000 re.py:188(match)
    10000    0.009    0.000    0.038    0.000 utils.py:131(check_valid_cell_location)
    10000    0.009    0.000    0.009    0.000 {method 'match' of 're.Pattern' objects}
     9999    0.008    0.000    0.278    0.000 visitors.py:415(visit)
     9999    0.008    0.000    0.010    0.000 visitors.py:430(<listcomp>)
    29999    0.008    0.000    0.008    0.000 Cell.py:125(get_value)
     9999    0.008    0.000    0.010    0.000 lexer.py:265(__eq__)
     9999    0.008    0.000    0.008    0.000 {method 'sub' of 're.Pattern' objects}
    10001    0.007    0.000    0.009    0.000 utils.py:212(is_formula)
    40004    0.006    0.000    0.006    0.000 {built-in method builtins.len}
     9999    0.006    0.000    0.008    0.000 utils.py:295(get_highest_precedence_error)
    19998    0.006    0.000    0.006    0.000 Cell.py:62(get_cached_formula)
    19999    0.006    0.000    0.006    0.000 Cell.py:128(get_contents)
    50000    0.005    0.000    0.005    0.000 {method 'append' of 'list' objects}
    30000    0.005    0.000    0.005    0.000 {method 'pop' of 'list' objects}
    10002    0.005    0.000    0.010    0.000 Sheet.py:120(get_cell)
    10000    0.004    0.000    0.004    0.000 {method 'quantize' of 'decimal.Decimal' objects}
     9999    0.004    0.000    0.004    0.000 Cell.py:131(set_children)
    10000    0.003    0.000    0.003    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
     9999    0.003    0.000    0.003    0.000 {built-in method __new__ of type object at 0x00007FFB3714DCB0}
     9999    0.002    0.000    0.002    0.000 {method 'add' of 'set' objects}
     9999    0.002    0.000    0.002    0.000 Parser.py:108(get_cell_refs)
    10000    0.002    0.000    0.002    0.000 Cell.py:135(get_children)
    10000    0.002    0.000    0.002    0.000 Sheet.py:54(get_sheet_name)
    10008    0.002    0.000    0.002    0.000 {method 'strip' of 'str' objects}
        1    0.002    0.002    8.393    8.393 Workbook.py:738(set_cell_contents)
    10000    0.001    0.000    0.001    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.001    0.001    8.394    8.394 Workbook.py:37(run_func)
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
        1    0.000    0.000    0.000    0.000 utils.py:179(convert_location_to_idx)
        1    0.000    0.000    0.000    0.000 Sheet.py:60(set_cell_contents)
        1    0.000    0.000    0.000    0.000 utils.py:307(error_matcher)
        1    0.000    0.000    0.000    0.000 Workbook.py:725(clean_children_cells)
        2    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}



##################Running pro_write_formula_chain... #######################
for test <function pro_write_formula_chain at 0x000002B4D81EAC10> total time: 1116.9792319999995
Total Logs
         178804367 function calls (177984449 primitive calls) in 107.403 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
   158874   20.986    0.000   72.907    0.000 earley.py:78(predict_and_complete)
  9029097   11.529    0.000   17.448    0.000 earley_common.py:9(__init__)
     9999    5.977    0.001   20.860    0.002 earley_forest.py:283(visit)
22497750/21877812    5.847    0.000    7.468    0.000 {built-in method builtins.hash}
  7289271    4.769    0.000    7.583    0.000 utils.py:345(add)
  5629437    4.200    0.000    7.906    0.000 grammar.py:18(__eq__)
 12198780    3.412    0.000    4.955    0.000 grammar.py:25(__hash__)
   148875    3.138    0.000    9.807    0.000 xearley.py:41(scan)
  7359264    2.818    0.000    2.851    0.000 earley_common.py:28(__eq__)
  5269473    2.538    0.000    3.238    0.000 lexer.py:265(__eq__)
   299970    2.329    0.000    8.458    0.000 earley.py:135(<listcomp>)
   579942    2.292    0.000    6.013    0.000 earley_forest.py:50(__init__)
  3429657    2.231    0.000    3.744    0.000 utils.py:342(__contains__)
  1696500    2.145    0.000    2.565    0.000 typing.py:868(__new__)
 14698530    1.983    0.000    1.983    0.000 {built-in method builtins.isinstance}
 11288871    1.511    0.000    1.511    0.000 earley_common.py:31(__hash__)
  1626507    1.419    0.000    1.645    0.000 {built-in method fromkeys}
  9759024    1.393    0.000    1.393    0.000 grammar.py:121(__hash__)
   559944    1.356    0.000    5.586    0.000 earley_forest.py:437(_visit_node_out_helper)
 10516728    1.331    0.000    1.331    0.000 {method 'append' of 'list' objects}
   279972    1.221    0.000    2.550    0.000 earley_forest.py:603(transform_packed_node)
 11108889    1.129    0.000    1.129    0.000 {built-in method builtins.len}
  4779522    1.080    0.000    1.080    0.000 {built-in method builtins.next}
   599940    0.965    0.000    2.883    0.000 earley_common.py:25(advance)
   559944    0.955    0.000    2.004    0.000 {built-in method builtins.sorted}
  1626507    0.904    0.000    2.549    0.000 utils.py:339(__init__)
  6229377    0.869    0.000    0.869    0.000 {built-in method builtins.id}
   599940    0.852    0.000    2.614    0.000 earley_forest.py:64(add_family)
  1338756    0.792    0.000    0.792    0.000 {method 'match' of 're.Pattern' objects}
   599940    0.754    0.000    1.269    0.000 earley_forest.py:131(__init__)
  1318758    0.675    0.000    1.435    0.000 parser_frontends.py:184(match)
  1666503    0.603    0.000    0.907    0.000 utils.py:348(__iter__)
     9999    0.589    0.000   83.304    0.008 xearley.py:39(_parse)
   559944    0.555    0.000    2.927    0.000 earley_forest.py:85(children)
   279972    0.554    0.000    1.545    0.000 earley_forest.py:631(visit_packed_node_in)
  1786491    0.493    0.000    0.493    0.000 {built-in method __new__ of type object at 0x00007FFB3714DCB0}
   209979    0.474    0.000    1.190    0.000 earley_forest.py:581(transform_symbol_node)
   279972    0.458    0.000    4.145    0.000 earley_forest.py:638(visit_packed_node_out)
   859914    0.449    0.000    0.619    0.000 {method 'setdefault' of 'dict' objects}
   279972    0.430    0.000    2.355    0.000 earley_forest.py:422(visit_symbol_node_in)
   279972    0.420    0.000    0.904    0.000 earley_forest.py:427(visit_packed_node_in)
   279972    0.410    0.000    3.884    0.000 earley_forest.py:625(visit_symbol_node_in)
  2226447    0.400    0.000    0.400    0.000 {built-in method builtins.iter}
   559944    0.352    0.000    0.516    0.000 earley_forest.py:145(sort_key)
  2579742    0.340    0.000    0.340    0.000 {method 'pop' of 'collections.deque' objects}
  1409859    0.310    0.000    0.310    0.000 {method 'add' of 'set' objects}
   209979    0.302    0.000    0.714    0.000 earley_forest.py:565(_call_rule_func)
  2489751    0.300    0.000    0.300    0.000 {method 'append' of 'collections.deque' objects}
   279972    0.266    0.000    0.274    0.000 earley_forest.py:499(__init__)
   209979    0.262    0.000    0.453    0.000 earley_forest.py:556(_collapse_ambig)
   279972    0.241    0.000    0.362    0.000 earley_forest.py:155(children)
   279972    0.202    0.000    0.368    0.000 earley_forest.py:70(load_paths)
   839916    0.200    0.000    0.200    0.000 {method 'remove' of 'set' objects}
   279972    0.196    0.000    3.602    0.000 earley_forest.py:450(visit_packed_node_out)
     9999    0.183    0.000  104.819    0.010 earley.py:262(parse)
   559944    0.182    0.000    0.268    0.000 utils.py:357(__len__)
     9999    0.180    0.000  105.070    0.011 parser_frontends.py:100(parse)
     9999    0.169    0.000  106.870    0.011 Workbook.py:649(recompute_cell_and_parents)
   559944    0.164    0.000    0.164    0.000 earley_forest.py:141(is_empty)
   209979    0.147    0.000    1.923    0.000 earley_forest.py:444(visit_symbol_node_out)
    89991    0.146    0.000    0.218    0.000 lexer.py:213(_future_new)
    69993    0.139    0.000    0.194    0.000 earley_forest.py:591(transform_intermediate_node)
   599940    0.133    0.000    0.133    0.000 earley_forest.py:101(__hash__)
   199980    0.128    0.000    0.152    0.000 {built-in method builtins.getattr}
   279972    0.122    0.000    0.122    0.000 earley_forest.py:158(<listcomp>)
   169983    0.119    0.000    0.190    0.000 parse_tree_builder.py:20(__call__)
   559944    0.113    0.000    0.113    0.000 earley_forest.py:548(_check_cycle)
    89991    0.111    0.000    0.329    0.000 lexer.py:202(__new__)
   599940    0.110    0.000    0.110    0.000 earley_forest.py:169(__hash__)
    79992    0.107    0.000    0.134    0.000 earley_forest.py:432(visit_token_node)
   209979    0.102    0.000    0.130    0.000 earley_forest.py:571(_call_ambig_func)
59994/9999    0.094    0.000    1.037    0.000 visitors.py:421(_visit_tree)
    89991    0.094    0.000    0.111    0.000 earley_forest.py:193(__init__)
     9999    0.094    0.000  106.315    0.011 Workbook.py:555(get_formula_value)
59994/9999    0.093    0.000    0.973    0.000 visitors.py:444(inner)
   559944    0.092    0.000    0.092    0.000 {method 'pop' of 'list' objects}
   178872    0.079    0.000    0.079    0.000 utils.py:354(__bool__)
59994/9999    0.077    0.000    0.870    0.000 visitors.py:430(<listcomp>)
    59994    0.074    0.000    0.571    0.000 Parser.py:40(fix_formula)
     9999    0.073    0.000  107.338    0.011 Workbook.py:738(set_cell_contents)
    49995    0.071    0.000    0.117    0.000 Sheet.py:93(get_cell_value)
     9999    0.066    0.000    0.287    0.000 Parser.py:253(cell)
    19998    0.066    0.000    0.117    0.000 Cell.py:81(set_cell_value)
     9999    0.063    0.000    0.105    0.000 utils.py:179(convert_location_to_idx)
    29997    0.061    0.000    0.165    0.000 xearley.py:88(<listcomp>)
     9999    0.061    0.000    0.278    0.000 Sheet.py:60(set_cell_contents)
59994/9999    0.057    0.000    0.882    0.000 visitors.py:429(visit_children)
    19998    0.057    0.000    0.057    0.000 Parser.py:243(number)
     9999    0.052    0.000   20.912    0.002 earley_forest.py:535(visit)
    29997    0.050    0.000    0.050    0.000 xearley.py:85(<listcomp>)
    69993    0.050    0.000    0.454    0.000 earley_forest.py:447(visit_intermediate_node_out)
   209979    0.050    0.000    0.050    0.000 {built-in method builtins.hasattr}
    19998    0.049    0.000    0.082    0.000 parse_tree_builder.py:145(__call__)
     9999    0.044    0.000    0.148    0.000 earley.py:284(<listcomp>)
     9999    0.044    0.000    0.052    0.000 Parser.py:211(mul_expr)
     9999    0.041    0.000    0.055    0.000 parser_frontends.py:96(_make_lexer_thread)
    89991    0.041    0.000    0.041    0.000 {method 'group' of 're.Match' objects}
    59994    0.040    0.000    0.058    0.000 utils.py:295(get_highest_precedence_error)
    59994    0.039    0.000    0.039    0.000 tree.py:61(__init__)
     9999    0.039    0.000    0.147    0.000 Workbook.py:817(get_cell_value)
     9999    0.038    0.000    0.070    0.000 earley_forest.py:523(__init__)
    29997    0.037    0.000    0.037    0.000 {method 'join' of 'str' objects}
    29997    0.037    0.000    0.053    0.000 re.py:289(_compile)
     9999    0.036    0.000    0.061    0.000 Workbook.py:698(_get_sheet_name_location)
    89991    0.035    0.000    0.035    0.000 {method 'get' of 'dict' objects}
     9999    0.035    0.000    0.035    0.000 Parser.py:97(__init__)
   159984    0.035    0.000    0.035    0.000 {method 'lower' of 'str' objects}
     9999    0.033    0.000    0.129    0.000 Workbook.py:711(add_children_cells)
     9999    0.033    0.000    0.040    0.000 profiler.py:25(convert_to_excel_coordinates)
     9999    0.032    0.000    0.041    0.000 Parser.py:169(add_expr)
     9999    0.030    0.000   20.945    0.002 earley_forest.py:397(transform)
   149985    0.030    0.000    0.030    0.000 {method 'end' of 're.Match' objects}
    39996    0.029    0.000    0.037    0.000 utils.py:78(get_hidden_name)
     9999    0.026    0.000    0.032    0.000 earley_forest.py:390(__init__)
    19998    0.025    0.000    0.105    0.000 utils.py:131(check_valid_cell_location)
     9999    0.025    0.000    0.035    0.000 Graph.py:68(add_connection)
     9999    0.024    0.000  107.362    0.011 Workbook.py:37(run_func)
     9999    0.022    0.000    0.026    0.000 Sheet.py:124(update_extent)
    19998    0.022    0.000    0.022    0.000 {built-in method _heapq.heappush}
     9999    0.022    0.000    0.125    0.000 Sheet.py:104(set_cell_value)
    89991    0.022    0.000    0.022    0.000 earley_forest.py:207(__hash__)
     9999    0.022    0.000  105.091    0.011 lark.py:640(parse)
     9999    0.021    0.000    0.021    0.000 {method 'sub' of 're.Pattern' objects}
    19998    0.021    0.000    0.080    0.000 re.py:188(match)
     9999    0.020    0.000    0.063    0.000 Cell.py:46(__init__)
     9999    0.019    0.000    0.035    0.000 utils.py:207(remove_exponent)
     9999    0.018    0.000    0.043    0.000 Cell.py:65(set_contents)
     9999    0.017    0.000    0.029    0.000 Workbook.py:551(get_sheet_name_from_hidden)
    59994    0.017    0.000    0.017    0.000 {method 'extend' of 'list' objects}
     9999    0.016    0.000    0.063    0.000 re.py:203(sub)
     9999    0.016    0.000    0.016    0.000 {built-in method _abc._abc_instancecheck}
     9999    0.014    0.000    0.016    0.000 parser_frontends.py:86(_verify_start)
    79992    0.014    0.000    0.014    0.000 earley_forest.py:418(transform_token_node)
     9999    0.012    0.000    0.012    0.000 Graph.py:330(tarjans)
     9999    0.011    0.000    0.011    0.000 lark.py:220(__getattr__)
     9999    0.011    0.000    0.011    0.000 {method 'split' of 'str' objects}
     9999    0.011    0.000    1.048    0.000 visitors.py:415(visit)
    19998    0.011    0.000    0.015    0.000 Sheet.py:120(get_cell)
     9999    0.010    0.000    0.010    0.000 {method 'update' of 'dict' objects}
     9999    0.010    0.000    0.018    0.000 Workbook.py:725(clean_children_cells)
    39996    0.010    0.000    0.010    0.000 Cell.py:125(get_value)
     9909    0.009    0.000    0.009    0.000 {method 'quantize' of 'decimal.Decimal' objects}
    19998    0.008    0.000    0.008    0.000 Cell.py:128(get_contents)
     9999    0.008    0.000    0.010    0.000 utils.py:212(is_formula)
     9999    0.008    0.000    0.024    0.000 abc.py:96(__instancecheck__)
    39996    0.008    0.000    0.008    0.000 {method 'strip' of 'str' objects}
     9999    0.008    0.000    0.008    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
     9999    0.007    0.000    0.007    0.000 earley_forest.py:232(__init__)
     9999    0.006    0.000    0.006    0.000 grammar.py:15(__init__)
     9999    0.005    0.000    0.005    0.000 Cell.py:131(set_children)
     9999    0.005    0.000    0.005    0.000 Cell.py:59(cache_formula)
     9999    0.005    0.000    0.005    0.000 {built-in method builtins.divmod}
    19998    0.004    0.000    0.004    0.000 {built-in method builtins.ord}
     9999    0.003    0.000    0.003    0.000 Parser.py:108(get_cell_refs)
     9999    0.003    0.000    0.003    0.000 {built-in method builtins.chr}
     9999    0.003    0.000    0.003    0.000 {method 'upper' of 'str' objects}
     9999    0.003    0.000    0.003    0.000 Sheet.py:54(get_sheet_name)
     9999    0.003    0.000    0.003    0.000 Parser.py:111(parens)
     9999    0.003    0.000    0.003    0.000 {method 'lstrip' of 'str' objects}
     9999    0.003    0.000    0.003    0.000 Cell.py:62(get_cached_formula)
     9999    0.002    0.000    0.002    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
     9999    0.002    0.000    0.002    0.000 {method 'rstrip' of 'str' objects}
       90    0.000    0.000    0.000    0.000 {method 'normalize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



##################Running pro_cyle_formula_chain... #######################
for test <function pro_cyle_formula_chain at 0x000002B4D81EADC0> total time: 29.710870100000008
Total Logs
         306631 function calls (306610 primitive calls) in 7.384 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    7.215    7.215    7.256    7.256 Graph.py:330(tarjans)
    10000    0.037    0.000    0.037    0.000 CellError.py:11(__init__)
        1    0.031    0.031    0.119    0.119 Workbook.py:627(_set_cycle_detected)
    20000    0.018    0.000    0.018    0.000 Graph.py:137(get_parents_from_cell)
    30001    0.016    0.000    0.016    0.000 {built-in method builtins.min}
    10002    0.011    0.000    0.015    0.000 Cell.py:81(set_cell_value)
    10000    0.007    0.000    0.018    0.000 Workbook.py:586(get_cell_from_location)
    10002    0.006    0.000    0.012    0.000 Workbook.py:551(get_sheet_name_from_hidden)
    20005    0.006    0.000    0.008    0.000 utils.py:78(get_hidden_name)
    30019    0.004    0.000    0.004    0.000 {method 'pop' of 'list' objects}
    30017    0.003    0.000    0.003    0.000 {method 'lower' of 'str' objects}
    10005    0.003    0.000    0.003    0.000 Cell.py:125(get_value)
    10002    0.003    0.000    0.006    0.000 Sheet.py:120(get_cell)
    10009    0.003    0.000    0.003    0.000 {method 'get' of 'dict' objects}
    30544    0.003    0.000    0.003    0.000 {built-in method builtins.isinstance}
    40407    0.003    0.000    0.003    0.000 {method 'append' of 'list' objects}
    10002    0.002    0.000    0.002    0.000 Cell.py:128(get_contents)
        1    0.002    0.002    7.381    7.381 Workbook.py:649(recompute_cell_and_parents)
        1    0.002    0.002    7.384    7.384 Workbook.py:37(run_func)
    10002    0.001    0.000    0.001    0.000 Sheet.py:54(get_sheet_name)
        1    0.001    0.001    7.382    7.382 Workbook.py:738(set_cell_contents)
    10005    0.001    0.000    0.001    0.000 {method 'strip' of 'str' objects}
        4    0.001    0.000    0.003    0.001 earley.py:78(predict_and_complete)
      362    0.001    0.000    0.001    0.000 earley_common.py:9(__init__)
        1    0.000    0.000    0.001    0.001 earley_forest.py:283(visit)
      215    0.000    0.000    0.000    0.000 grammar.py:18(__eq__)
  865/844    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
      264    0.000    0.000    0.000    0.000 utils.py:345(add)
      459    0.000    0.000    0.000    0.000 grammar.py:25(__hash__)
      309    0.000    0.000    0.000    0.000 earley_common.py:28(__eq__)
      203    0.000    0.000    0.000    0.000 lexer.py:265(__eq__)
       10    0.000    0.000    0.000    0.000 earley.py:135(<listcomp>)
      144    0.000    0.000    0.000    0.000 utils.py:342(__contains__)
       20    0.000    0.000    0.000    0.000 earley_forest.py:50(__init__)
       53    0.000    0.000    0.000    0.000 typing.py:868(__new__)
        9    0.000    0.000    0.000    0.000 earley_forest.py:625(visit_symbol_node_in)
        3    0.000    0.000    0.000    0.000 xearley.py:41(scan)
      389    0.000    0.000    0.000    0.000 grammar.py:121(__hash__)
      403    0.000    0.000    0.000    0.000 earley_common.py:31(__hash__)
      439    0.000    0.000    0.000    0.000 {built-in method builtins.len}
      156    0.000    0.000    0.000    0.000 {built-in method builtins.next}
       19    0.000    0.000    0.000    0.000 earley_forest.py:437(_visit_node_out_helper)
       10    0.000    0.000    0.000    0.000 earley_forest.py:603(transform_packed_node)
       18    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
       51    0.000    0.000    0.000    0.000 utils.py:339(__init__)
       21    0.000    0.000    0.000    0.000 earley_forest.py:131(__init__)
       21    0.000    0.000    0.000    0.000 earley_forest.py:64(add_family)
       51    0.000    0.000    0.000    0.000 {built-in method fromkeys}
       21    0.000    0.000    0.000    0.000 earley_common.py:25(advance)
      209    0.000    0.000    0.000    0.000 {built-in method builtins.id}
       18    0.000    0.000    0.000    0.000 earley_forest.py:85(children)
       10    0.000    0.000    0.000    0.000 earley_forest.py:631(visit_packed_node_in)
       48    0.000    0.000    0.000    0.000 utils.py:348(__iter__)
        1    0.000    0.000    0.004    0.004 xearley.py:39(_parse)
       29    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
       56    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x00007FFB3714DCB0}
        8    0.000    0.000    0.000    0.000 earley_forest.py:581(transform_symbol_node)
        9    0.000    0.000    0.000    0.000 earley_forest.py:422(visit_symbol_node_in)
        1    0.000    0.000    0.005    0.005 earley.py:262(parse)
       10    0.000    0.000    0.000    0.000 earley_forest.py:427(visit_packed_node_in)
       21    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
       10    0.000    0.000    0.000    0.000 earley_forest.py:638(visit_packed_node_out)
       20    0.000    0.000    0.000    0.000 earley_forest.py:145(sort_key)
        8    0.000    0.000    0.000    0.000 earley_forest.py:556(_collapse_ambig)
        8    0.000    0.000    0.000    0.000 earley_forest.py:565(_call_rule_func)
       66    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
       86    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.deque' objects}
       19    0.000    0.000    0.000    0.000 parser_frontends.py:184(match)
       10    0.000    0.000    0.000    0.000 earley_forest.py:155(children)
       49    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
       83    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        9    0.000    0.000    0.000    0.000 earley_forest.py:70(load_paths)
        1    0.000    0.000    0.000    0.000 earley.py:284(<listcomp>)
        9    0.000    0.000    0.000    0.000 earley_forest.py:499(__init__)
        1    0.000    0.000    0.005    0.005 Workbook.py:555(get_formula_value)
        1    0.000    0.000    0.005    0.005 parser_frontends.py:100(parse)
        5    0.000    0.000    0.000    0.000 Sheet.py:93(get_cell_value)
       10    0.000    0.000    0.000    0.000 earley_forest.py:450(visit_packed_node_out)
       28    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       18    0.000    0.000    0.000    0.000 utils.py:357(__len__)
       20    0.000    0.000    0.000    0.000 earley_forest.py:141(is_empty)
       19    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
        1    0.000    0.000    0.000    0.000 Parser.py:253(cell)
        1    0.000    0.000    0.000    0.000 utils.py:179(convert_location_to_idx)
        8    0.000    0.000    0.000    0.000 earley_forest.py:444(visit_symbol_node_out)
        3    0.000    0.000    0.000    0.000 lexer.py:213(_future_new)
       10    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
       21    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
        3    0.000    0.000    0.000    0.000 re.py:289(_compile)
       10    0.000    0.000    0.000    0.000 earley_forest.py:158(<listcomp>)
        8    0.000    0.000    0.000    0.000 earley_forest.py:571(_call_ambig_func)
        1    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        1    0.000    0.000    0.000    0.000 Workbook.py:698(_get_sheet_name_location)
        1    0.000    0.000    0.000    0.000 earley_forest.py:523(__init__)
       19    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
        1    0.000    0.000    0.001    0.001 earley_forest.py:535(visit)
        1    0.000    0.000    0.000    0.000 Sheet.py:60(set_cell_contents)
        3    0.000    0.000    0.000    0.000 lexer.py:202(__new__)
        2    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
        1    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
        7    0.000    0.000    0.000    0.000 parse_tree_builder.py:20(__call__)
        2    0.000    0.000    0.000    0.000 re.py:188(match)
        3    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
        1    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
        1    0.000    0.000    0.000    0.000 Workbook.py:711(add_children_cells)
        1    0.000    0.000    0.000    0.000 Workbook.py:817(get_cell_value)
        1    0.000    0.000    0.000    0.000 re.py:203(sub)
        1    0.000    0.000    0.001    0.001 earley_forest.py:397(transform)
        1    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
        1    0.000    0.000    0.000    0.000 visitors.py:421(_visit_tree)
        1    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
        2    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
        2    0.000    0.000    0.000    0.000 utils.py:131(check_valid_cell_location)
        1    0.000    0.000    0.000    0.000 visitors.py:444(inner)
        1    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
        8    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
        1    0.000    0.000    0.000    0.000 Sheet.py:104(set_cell_value)
        1    0.000    0.000    0.000    0.000 Parser.py:40(fix_formula)
        1    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
        3    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
        1    0.000    0.000    0.000    0.000 Workbook.py:725(clean_children_cells)
        1    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
        3    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        2    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        3    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.005    0.005 lark.py:640(parse)
        1    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
        1    0.000    0.000    0.000    0.000 visitors.py:415(visit)
        1    0.000    0.000    0.000    0.000 earley_forest.py:447(visit_intermediate_node_out)
        1    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        1    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
        3    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
        1    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
        1    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
        1    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
        1    0.000    0.000    0.000    0.000 tree.py:61(__init__)
        3    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
        1    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
        1    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
        1    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
        1    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        2    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
        1    0.000    0.000    0.000    0.000 Cell.py:135(get_children)
        1    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
        1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.ord}



##################Running pro_update_formula_pyramid... #######################
for test <function pro_update_formula_pyramid at 0x000002B4D81EAEE0> total time: 0.0017818999999999997
Total Logs
         233 function calls (221 primitive calls) in 0.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
        2    0.000    0.000    0.000    0.000 Cell.py:81(set_cell_value)
        1    0.000    0.000    0.000    0.000 Workbook.py:738(set_cell_contents)
        2    0.000    0.000    0.000    0.000 Workbook.py:593(recompute_cell_value)
      4/1    0.000    0.000    0.000    0.000 visitors.py:421(_visit_tree)
        1    0.000    0.000    0.000    0.000 Workbook.py:649(recompute_cell_and_parents)
        8    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
        1    0.000    0.000    0.000    0.000 utils.py:179(convert_location_to_idx)
        5    0.000    0.000    0.000    0.000 Sheet.py:93(get_cell_value)
        2    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        1    0.000    0.000    0.000    0.000 Parser.py:253(cell)
      4/1    0.000    0.000    0.000    0.000 visitors.py:444(inner)
        1    0.000    0.000    0.000    0.000 Workbook.py:555(get_formula_value)
        1    0.000    0.000    0.000    0.000 typing.py:868(__new__)
      4/1    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
        4    0.000    0.000    0.000    0.000 Parser.py:40(fix_formula)
        1    0.000    0.000    0.000    0.000 Parser.py:211(mul_expr)
      4/1    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
        3    0.000    0.000    0.000    0.000 re.py:289(_compile)
        1    0.000    0.000    0.000    0.000 Sheet.py:60(set_cell_contents)
       31    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        1    0.000    0.000    0.000    0.000 utils.py:307(error_matcher)
        8    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
       21    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
        2    0.000    0.000    0.000    0.000 re.py:188(match)
        4    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
        1    0.000    0.000    0.000    0.000 re.py:203(sub)
        1    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        2    0.000    0.000    0.000    0.000 Workbook.py:586(get_cell_from_location)
        1    0.000    0.000    0.000    0.000 Workbook.py:817(get_cell_value)
        3    0.000    0.000    0.000    0.000 lexer.py:265(__eq__)
       10    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 Workbook.py:551(get_sheet_name_from_hidden)
        1    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
        6    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
       10    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 Workbook.py:37(run_func)
        2    0.000    0.000    0.000    0.000 utils.py:131(check_valid_cell_location)
        4    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
        2    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 Sheet.py:104(set_cell_value)
        4    0.000    0.000    0.000    0.000 Graph.py:137(get_parents_from_cell)
        1    0.000    0.000    0.000    0.000 Workbook.py:725(clean_children_cells)
        1    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        1    0.000    0.000    0.000    0.000 Parser.py:243(number)
        3    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
        1    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
       10    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        2    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
       12    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        2    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        5    0.000    0.000    0.000    0.000 Cell.py:125(get_value)
        1    0.000    0.000    0.000    0.000 visitors.py:415(visit)
        2    0.000    0.000    0.000    0.000 Cell.py:135(get_children)
        2    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
        3    0.000    0.000    0.000    0.000 Cell.py:128(get_contents)
        2    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        1    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x00007FFB3714DCB0}
        2    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
        1    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
        1    0.000    0.000    0.000    0.000 Parser.py:111(parens)
        1    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.ord}



##################Running pro_write_formula_pyramid... #######################
for test <function pro_write_formula_pyramid at 0x000002B4D81B2040> total time: 4.303980599999999
Total Logs
         798561 function calls (798303 primitive calls) in 0.440 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      401    0.130    0.000    0.390    0.001 earley.py:78(predict_and_complete)
    68211    0.082    0.000    0.123    0.000 earley_common.py:9(__init__)
149508/149262    0.036    0.000    0.045    0.000 {built-in method builtins.hash}
    45585    0.030    0.000    0.050    0.000 utils.py:345(add)
    61023    0.023    0.000    0.023    0.000 earley_common.py:28(__eq__)
    79530    0.021    0.000    0.031    0.000 grammar.py:25(__hash__)
    26767    0.017    0.000    0.029    0.000 utils.py:342(__contains__)
    75516    0.010    0.000    0.010    0.000 earley_common.py:31(__hash__)
      400    0.010    0.000    0.032    0.000 xearley.py:41(scan)
    70326    0.009    0.000    0.009    0.000 grammar.py:121(__hash__)
    68615    0.008    0.000    0.008    0.000 {method 'append' of 'list' objects}
     9786    0.008    0.000    0.013    0.000 grammar.py:18(__eq__)
    70044    0.006    0.000    0.006    0.000 {built-in method builtins.len}
     2965    0.004    0.000    0.004    0.000 typing.py:868(__new__)
     5836    0.003    0.000    0.004    0.000 lexer.py:265(__eq__)
      732    0.003    0.000    0.007    0.000 earley_forest.py:50(__init__)
     4006    0.003    0.000    0.003    0.000 {method 'match' of 're.Pattern' objects}
    17294    0.003    0.000    0.003    0.000 {built-in method builtins.isinstance}
     2862    0.002    0.000    0.003    0.000 {built-in method fromkeys}
       99    0.002    0.000    0.424    0.004 xearley.py:39(_parse)
     3906    0.002    0.000    0.005    0.000 parser_frontends.py:184(match)
     2862    0.002    0.000    0.005    0.000 utils.py:339(__init__)
       99    0.001    0.000    0.435    0.004 Workbook.py:649(recompute_cell_and_parents)
       99    0.001    0.000    0.432    0.004 Workbook.py:555(get_formula_value)
      122    0.001    0.000    0.004    0.000 earley.py:135(<listcomp>)
      734    0.001    0.000    0.003    0.000 earley_forest.py:64(add_family)
       99    0.001    0.000    0.428    0.004 earley.py:262(parse)
     3266    0.001    0.000    0.001    0.000 {built-in method __new__ of type object at 0x00007FFB3714DCB0}
      734    0.001    0.000    0.002    0.000 earley_forest.py:131(__init__)
       99    0.001    0.000    0.440    0.004 Workbook.py:738(set_cell_contents)
      734    0.001    0.000    0.003    0.000 earley_common.py:25(advance)
     1784    0.001    0.000    0.001    0.000 utils.py:348(__iter__)
       98    0.001    0.000    0.002    0.000 exceptions.py:179(__init__)
      142    0.001    0.000    0.001    0.000 {built-in method builtins.sorted}
       98    0.001    0.000    0.001    0.000 exceptions.py:55(get_context)
       99    0.001    0.000    0.002    0.000 Sheet.py:60(set_cell_contents)
     1828    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
     3833    0.001    0.000    0.001    0.000 {method 'pop' of 'collections.deque' objects}
      397    0.001    0.000    0.001    0.000 Sheet.py:93(get_cell_value)
      301    0.001    0.000    0.001    0.000 lexer.py:213(_future_new)
       99    0.001    0.000    0.001    0.000 utils.py:179(convert_location_to_idx)
     3532    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      198    0.000    0.000    0.001    0.000 Cell.py:81(set_cell_value)
       99    0.000    0.000    0.429    0.004 parser_frontends.py:100(parse)
        1    0.000    0.000    0.001    0.001 earley_forest.py:283(visit)
      754    0.000    0.000    0.001    0.000 {method 'setdefault' of 'dict' objects}
      298    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
      301    0.000    0.000    0.001    0.000 lexer.py:202(__new__)
       99    0.000    0.000    0.001    0.000 parser_frontends.py:96(_make_lexer_thread)
       99    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
      301    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
       99    0.000    0.000    0.000    0.000 Workbook.py:725(clean_children_cells)
       99    0.000    0.000    0.000    0.000 profiler.py:25(convert_to_excel_coordinates)
      499    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
      793    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
       99    0.000    0.000    0.440    0.004 Workbook.py:37(run_func)
       99    0.000    0.000    0.001    0.000 Sheet.py:104(set_cell_value)
       99    0.000    0.000    0.429    0.004 lark.py:640(parse)
       99    0.000    0.000    0.000    0.000 Workbook.py:551(get_sheet_name_from_hidden)
       99    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
      898    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
       99    0.000    0.000    0.001    0.000 Cell.py:46(__init__)
       99    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
      100    0.000    0.000    0.001    0.000 utils.py:131(check_valid_cell_location)
      101    0.000    0.000    0.000    0.000 re.py:289(_compile)
      301    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      100    0.000    0.000    0.001    0.000 re.py:188(match)
      200    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
      198    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
      392    0.000    0.000    0.000    0.000 xearley.py:124(<lambda>)
      734    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
       98    0.000    0.000    0.000    0.000 xearley.py:125(<setcomp>)
      198    0.000    0.000    0.000    0.000 {built-in method _heapq.heappush}
       99    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
       98    0.000    0.000    0.000    0.000 {built-in method builtins.max}
       99    0.000    0.000    0.000    0.000 Graph.py:330(tarjans)
      490    0.000    0.000    0.000    0.000 xearley.py:126(<genexpr>)
      296    0.000    0.000    0.000    0.000 Cell.py:128(get_contents)
      439    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
       99    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
      396    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
       98    0.000    0.000    0.000    0.000 CellError.py:11(__init__)
       99    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
       98    0.000    0.000    0.000    0.000 {method 'rsplit' of 'str' objects}
       45    0.000    0.000    0.000    0.000 earley_forest.py:437(_visit_node_out_helper)
      303    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
      298    0.000    0.000    0.000    0.000 Cell.py:125(get_value)
       23    0.000    0.000    0.000    0.000 earley_forest.py:603(transform_packed_node)
      301    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
       99    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      380    0.000    0.000    0.000    0.000 {built-in method builtins.next}
      142    0.000    0.000    0.000    0.000 utils.py:357(__len__)
       99    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      499    0.000    0.000    0.000    0.000 {built-in method builtins.id}
       99    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
       98    0.000    0.000    0.000    0.000 {method 'expandtabs' of 'str' objects}
       99    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
       99    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
       23    0.000    0.000    0.000    0.000 earley_forest.py:631(visit_packed_node_in)
       44    0.000    0.000    0.000    0.000 earley_forest.py:85(children)
       99    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
       99    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
      198    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       23    0.000    0.000    0.000    0.000 earley_forest.py:427(visit_packed_node_in)
       23    0.000    0.000    0.000    0.000 earley_forest.py:638(visit_packed_node_out)
       99    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
       17    0.000    0.000    0.000    0.000 earley_forest.py:581(transform_symbol_node)
       99    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
       22    0.000    0.000    0.000    0.000 earley_forest.py:422(visit_symbol_node_in)
       22    0.000    0.000    0.000    0.000 earley_forest.py:625(visit_symbol_node_in)
      114    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
       46    0.000    0.000    0.000    0.000 earley_forest.py:145(sort_key)
       99    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
       17    0.000    0.000    0.000    0.000 earley_forest.py:565(_call_rule_func)
       17    0.000    0.000    0.000    0.000 earley_forest.py:556(_collapse_ambig)
       22    0.000    0.000    0.000    0.000 earley_forest.py:499(__init__)
       46    0.000    0.000    0.000    0.000 earley_forest.py:141(is_empty)
       23    0.000    0.000    0.000    0.000 earley_forest.py:155(children)
       23    0.000    0.000    0.000    0.000 earley_forest.py:450(visit_packed_node_out)
       67    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       22    0.000    0.000    0.000    0.000 earley_forest.py:70(load_paths)
       17    0.000    0.000    0.000    0.000 earley_forest.py:444(visit_symbol_node_out)
       16    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
        5    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
       23    0.000    0.000    0.000    0.000 earley_forest.py:158(<listcomp>)
       14    0.000    0.000    0.000    0.000 parse_tree_builder.py:20(__call__)
        6    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
       45    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
        1    0.000    0.000    0.000    0.000 Parser.py:253(cell)
       17    0.000    0.000    0.000    0.000 earley_forest.py:571(_call_ambig_func)
        1    0.000    0.000    0.000    0.000 Parser.py:211(mul_expr)
      4/1    0.000    0.000    0.000    0.000 visitors.py:421(_visit_tree)
      4/1    0.000    0.000    0.000    0.000 visitors.py:444(inner)
       45    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
        4    0.000    0.000    0.000    0.000 Parser.py:40(fix_formula)
        2    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
        1    0.000    0.000    0.001    0.001 earley_forest.py:535(visit)
        1    0.000    0.000    0.000    0.000 Parser.py:243(number)
      4/1    0.000    0.000    0.000    0.000 visitors.py:430(<listcomp>)
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 earley_forest.py:523(__init__)
        1    0.000    0.000    0.000    0.000 Workbook.py:817(get_cell_value)
        1    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        1    0.000    0.000    0.000    0.000 Workbook.py:698(_get_sheet_name_location)
        1    0.000    0.000    0.000    0.000 Workbook.py:711(add_children_cells)
        1    0.000    0.000    0.000    0.000 earley.py:284(<listcomp>)
        1    0.000    0.000    0.000    0.000 re.py:203(sub)
      4/1    0.000    0.000    0.000    0.000 visitors.py:429(visit_children)
        1    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
        5    0.000    0.000    0.000    0.000 earley_forest.py:447(visit_intermediate_node_out)
       17    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
        1    0.000    0.000    0.001    0.001 earley_forest.py:397(transform)
        4    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
        4    0.000    0.000    0.000    0.000 tree.py:61(__init__)
        1    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
        1    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 xearley.py:85(<listcomp>)
        1    0.000    0.000    0.000    0.000 visitors.py:415(visit)
        1    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
        6    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
        1    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        1    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 xearley.py:88(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
        1    0.000    0.000    0.000    0.000 Parser.py:111(parens)
        2    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}



##################Running pro_cycle_formula_pyramid... #######################
for test <function pro_cycle_formula_pyramid at 0x000002B4D81B2160> total time: 2.183938399999999
Total Logs
         368252 function calls (365814 primitive calls) in 0.240 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.051    0.051    0.057    0.057 Graph.py:330(tarjans)
      400    0.029    0.000    0.108    0.000 earley.py:78(predict_and_complete)
    12865    0.014    0.000    0.021    0.000 earley_common.py:9(__init__)
        1    0.014    0.014    0.049    0.049 earley_forest.py:283(visit)
35778/34144    0.008    0.000    0.011    0.000 {built-in method builtins.hash}
    12158    0.007    0.000    0.014    0.000 grammar.py:18(__eq__)
    12186    0.006    0.000    0.010    0.000 utils.py:345(add)
     1828    0.006    0.000    0.015    0.000 earley_forest.py:50(__init__)
      399    0.006    0.000    0.018    0.000 xearley.py:41(scan)
    20101    0.006    0.000    0.006    0.000 {built-in method builtins.min}
     5058    0.005    0.000    0.006    0.000 typing.py:868(__new__)
    11930    0.005    0.000    0.006    0.000 lexer.py:265(__eq__)
    18951    0.004    0.000    0.007    0.000 grammar.py:25(__hash__)
      816    0.004    0.000    0.016    0.000 earley.py:135(<listcomp>)
    34782    0.004    0.000    0.004    0.000 {built-in method builtins.isinstance}
     1430    0.003    0.000    0.014    0.000 earley_forest.py:437(_visit_node_out_helper)
      715    0.003    0.000    0.006    0.000 earley_forest.py:603(transform_packed_node)
     8674    0.003    0.000    0.003    0.000 earley_common.py:28(__eq__)
    12254    0.003    0.000    0.003    0.000 {built-in method builtins.next}
     4855    0.002    0.000    0.003    0.000 {built-in method fromkeys}
     4855    0.002    0.000    0.005    0.000 utils.py:339(__init__)
     3970    0.002    0.000    0.003    0.000 utils.py:342(__contains__)
     1430    0.002    0.000    0.005    0.000 {built-in method builtins.sorted}
     1830    0.002    0.000    0.006    0.000 earley_forest.py:64(add_family)
    16929    0.002    0.000    0.002    0.000 {method 'append' of 'list' objects}
    15933    0.002    0.000    0.002    0.000 {built-in method builtins.id}
     1830    0.002    0.000    0.003    0.000 earley_forest.py:131(__init__)
    16778    0.002    0.000    0.002    0.000 earley_common.py:31(__hash__)
    15595    0.002    0.000    0.002    0.000 grammar.py:121(__hash__)
    18279    0.002    0.000    0.002    0.000 {built-in method builtins.len}
     5592    0.002    0.000    0.002    0.000 {built-in method builtins.iter}
     4162    0.002    0.000    0.003    0.000 utils.py:348(__iter__)
     1830    0.001    0.000    0.006    0.000 earley_common.py:25(advance)
     2952    0.001    0.000    0.001    0.000 {method 'match' of 're.Pattern' objects}
     1430    0.001    0.000    0.008    0.000 earley_forest.py:85(children)
      512    0.001    0.000    0.003    0.000 earley_forest.py:581(transform_symbol_node)
     2851    0.001    0.000    0.002    0.000 parser_frontends.py:184(match)
      715    0.001    0.000    0.003    0.000 earley_forest.py:631(visit_packed_node_in)
     5362    0.001    0.000    0.001    0.000 {built-in method __new__ of type object at 0x00007FFB3714DCB0}
      715    0.001    0.000    0.010    0.000 earley_forest.py:638(visit_packed_node_out)
     2543    0.001    0.000    0.001    0.000 {method 'setdefault' of 'dict' objects}
        1    0.001    0.001    0.127    0.127 xearley.py:39(_parse)
      715    0.001    0.000    0.006    0.000 earley_forest.py:422(visit_symbol_node_in)
      715    0.001    0.000    0.010    0.000 earley_forest.py:625(visit_symbol_node_in)
      715    0.001    0.000    0.002    0.000 earley_forest.py:427(visit_packed_node_in)
     1430    0.001    0.000    0.001    0.000 earley_forest.py:145(sort_key)
     6244    0.001    0.000    0.001    0.000 {method 'pop' of 'collections.deque' objects}
     3675    0.001    0.000    0.001    0.000 {method 'add' of 'set' objects}
      512    0.001    0.000    0.001    0.000 earley_forest.py:556(_collapse_ambig)
      512    0.001    0.000    0.002    0.000 earley_forest.py:565(_call_rule_func)
      715    0.001    0.000    0.001    0.000 earley_forest.py:499(__init__)
     5940    0.001    0.000    0.001    0.000 {method 'append' of 'collections.deque' objects}
      715    0.001    0.000    0.001    0.000 earley_forest.py:70(load_paths)
      715    0.001    0.000    0.001    0.000 earley_forest.py:155(children)
        1    0.000    0.000    0.177    0.177 parser_frontends.py:100(parse)
      715    0.000    0.000    0.009    0.000 earley_forest.py:450(visit_packed_node_out)
     2145    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
     1430    0.000    0.000    0.000    0.000 earley_forest.py:141(is_empty)
     1430    0.000    0.000    0.001    0.000 utils.py:357(__len__)
      100    0.000    0.000    0.002    0.000 Parser.py:253(cell)
      203    0.000    0.000    0.000    0.000 earley_forest.py:591(transform_intermediate_node)
      304    0.000    0.000    0.000    0.000 lexer.py:213(_future_new)
        1    0.000    0.000    0.001    0.001 Workbook.py:627(_set_cycle_detected)
      412    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
     1829    0.000    0.000    0.000    0.000 earley_forest.py:101(__hash__)
      410    0.000    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
      512    0.000    0.000    0.005    0.000 earley_forest.py:444(visit_symbol_node_out)
      715    0.000    0.000    0.000    0.000 earley_forest.py:158(<listcomp>)
    202/1    0.000    0.000    0.004    0.004 visitors.py:430(<listcomp>)
    202/1    0.000    0.000    0.004    0.004 visitors.py:421(_visit_tree)
    202/1    0.000    0.000    0.004    0.004 visitors.py:444(inner)
     1730    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
     1830    0.000    0.000    0.000    0.000 earley_forest.py:169(__hash__)
     1430    0.000    0.000    0.000    0.000 earley_forest.py:548(_check_cycle)
      304    0.000    0.000    0.001    0.000 lexer.py:202(__new__)
      512    0.000    0.000    0.000    0.000 earley_forest.py:571(_call_ambig_func)
      204    0.000    0.000    0.000    0.000 earley_forest.py:432(visit_token_node)
      304    0.000    0.000    0.000    0.000 earley_forest.py:193(__init__)
    202/1    0.000    0.000    0.004    0.004 visitors.py:429(visit_children)
      100    0.000    0.000    0.000    0.000 Workbook.py:698(_get_sheet_name_location)
      100    0.000    0.000    0.001    0.000 Workbook.py:817(get_cell_value)
      202    0.000    0.000    0.002    0.000 Parser.py:40(fix_formula)
     1010    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
      403    0.000    0.000    0.000    0.000 utils.py:78(get_hidden_name)
       99    0.000    0.000    0.000    0.000 Parser.py:169(add_expr)
      104    0.000    0.000    0.000    0.000 Sheet.py:93(get_cell_value)
      400    0.000    0.000    0.000    0.000 utils.py:354(__bool__)
      102    0.000    0.000    0.000    0.000 Cell.py:81(set_cell_value)
      201    0.000    0.000    0.000    0.000 re.py:289(_compile)
      202    0.000    0.000    0.000    0.000 utils.py:295(get_highest_precedence_error)
      200    0.000    0.000    0.000    0.000 Graph.py:137(get_parents_from_cell)
      203    0.000    0.000    0.001    0.000 earley_forest.py:447(visit_intermediate_node_out)
      100    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      304    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      202    0.000    0.000    0.000    0.000 tree.py:61(__init__)
        1    0.000    0.000    0.001    0.001 Workbook.py:711(add_children_cells)
      512    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      100    0.000    0.000    0.000    0.000 Workbook.py:586(get_cell_from_location)
      101    0.000    0.000    0.000    0.000 re.py:188(match)
      100    0.000    0.000    0.000    0.000 re.py:203(sub)
      208    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      204    0.000    0.000    0.000    0.000 Cell.py:125(get_value)
      102    0.000    0.000    0.000    0.000 Workbook.py:551(get_sheet_name_from_hidden)
        1    0.000    0.000    0.240    0.240 Workbook.py:649(recompute_cell_and_parents)
      101    0.000    0.000    0.000    0.000 utils.py:131(check_valid_cell_location)
        1    0.000    0.000    0.049    0.049 earley_forest.py:535(visit)
      100    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
      304    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
      100    0.000    0.000    0.000    0.000 CellError.py:11(__init__)
      306    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
        1    0.000    0.000    0.177    0.177 earley.py:262(parse)
      102    0.000    0.000    0.000    0.000 Sheet.py:120(get_cell)
      100    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      204    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      102    0.000    0.000    0.000    0.000 Cell.py:128(get_contents)
      103    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.240    0.240 Workbook.py:738(set_cell_contents)
        1    0.000    0.000    0.181    0.181 Workbook.py:555(get_formula_value)
      105    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
      102    0.000    0.000    0.000    0.000 Sheet.py:54(get_sheet_name)
        2    0.000    0.000    0.000    0.000 parse_tree_builder.py:145(__call__)
        1    0.000    0.000    0.000    0.000 utils.py:179(convert_location_to_idx)
        1    0.000    0.000    0.240    0.240 Workbook.py:37(run_func)
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 Parser.py:211(mul_expr)
        1    0.000    0.000    0.000    0.000 Parser.py:243(number)
        1    0.000    0.000    0.000    0.000 Sheet.py:60(set_cell_contents)
        1    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
        1    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        1    0.000    0.000    0.000    0.000 earley_forest.py:523(__init__)
        1    0.000    0.000    0.000    0.000 Parser.py:97(__init__)
        1    0.000    0.000    0.049    0.049 earley_forest.py:397(transform)
        2    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000    0.177    0.177 lark.py:640(parse)
        1    0.000    0.000    0.000    0.000 earley.py:284(<listcomp>)
        2    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
        1    0.000    0.000    0.000    0.000 earley_forest.py:390(__init__)
        1    0.000    0.000    0.000    0.000 Sheet.py:104(set_cell_value)
        1    0.000    0.000    0.000    0.000 Sheet.py:124(update_extent)
        1    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
        1    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 Workbook.py:725(clean_children_cells)
        1    0.000    0.000    0.000    0.000 Cell.py:65(set_contents)
        1    0.000    0.000    0.004    0.004 visitors.py:415(visit)
        1    0.000    0.000    0.000    0.000 {method 'normalize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
        1    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
        1    0.000    0.000    0.000    0.000 xearley.py:85(<listcomp>)
        1    0.000    0.000    0.000    0.000 utils.py:212(is_formula)
        1    0.000    0.000    0.000    0.000 Cell.py:131(set_children)
        1    0.000    0.000    0.000    0.000 Parser.py:111(parens)
        1    0.000    0.000    0.000    0.000 xearley.py:88(<listcomp>)
        1    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
        1    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 Cell.py:62(get_cached_formula)
        1    0.000    0.000    0.000    0.000 Parser.py:108(get_cell_refs)
        2    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        1    0.000    0.000    0.000    0.000 Cell.py:135(get_children)
        1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}



##################Running pro_cycle_break_unbreak... #######################
for test <function pro_cycle_break_unbreak at 0x000002B4D81B2280> total time: 127.33335410000008
Total Logs
         13339464 function calls (13335700 primitive calls) in 24.596 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      198   15.259    0.077   15.788    0.080 Graph.py:330(tarjans)
    99000    0.797    0.000    6.393    0.000 Workbook.py:593(recompute_cell_value)
   198396    0.511    0.000    0.865    0.000 Cell.py:81(set_cell_value)
    99198    0.448    0.000    4.524    0.000 Workbook.py:555(get_formula_value)
       99    0.418    0.004    1.213    0.012 Workbook.py:627(_set_cycle_detected)
    99000    0.387    0.000    1.597    0.000 Parser.py:253(cell)
   297792    0.348    0.000    0.545    0.000 Sheet.py:93(get_cell_value)
   594693    0.290    0.000    0.388    0.000 utils.py:78(get_hidden_name)
   396000    0.267    0.000    0.267    0.000 Graph.py:137(get_parents_from_cell)
   198000    0.228    0.000    0.512    0.000 Workbook.py:586(get_cell_from_location)
    99000    0.225    0.000    0.867    0.000 Workbook.py:817(get_cell_value)
  1289475    0.223    0.000    0.223    0.000 {method 'lower' of 'str' objects}
      198    0.216    0.001   24.537    0.124 Workbook.py:649(recompute_cell_and_parents)
  1086921    0.212    0.000    0.212    0.000 {built-in method builtins.isinstance}
   199980    0.211    0.000    0.310    0.000 {built-in method builtins.getattr}
   198297    0.200    0.000    0.368    0.000 Workbook.py:551(get_sheet_name_from_hidden)
   108900    0.197    0.000    0.234    0.000 typing.py:868(__new__)
      990    0.185    0.000    0.622    0.001 earley.py:78(predict_and_complete)
    99198    0.185    0.000    0.185    0.000 Parser.py:97(__init__)
    99198    0.174    0.000    2.598    0.000 visitors.py:421(_visit_tree)
   595584    0.161    0.000    0.161    0.000 {method 'get' of 'dict' objects}
    99198    0.160    0.000    0.844    0.000 Sheet.py:104(set_cell_value)
   198198    0.149    0.000    0.210    0.000 re.py:289(_compile)
    99198    0.138    0.000    2.115    0.000 visitors.py:444(inner)
    99198    0.132    0.000    0.206    0.000 utils.py:207(remove_exponent)
   396792    0.109    0.000    0.109    0.000 Cell.py:125(get_value)
   971288    0.108    0.000    0.108    0.000 {method 'append' of 'list' objects}
    99198    0.107    0.000    1.777    0.000 Parser.py:40(fix_formula)
    71082    0.107    0.000    0.162    0.000 earley_common.py:9(__init__)
    99198    0.100    0.000    0.200    0.000 visitors.py:429(visit_children)
   134442    0.099    0.000    0.125    0.000 lexer.py:265(__eq__)
   103158    0.097    0.000    0.097    0.000 {method 'match' of 're.Pattern' objects}
   297099    0.097    0.000    0.097    0.000 {built-in method builtins.min}
    99000    0.095    0.000    0.095    0.000 CellError.py:11(__init__)
    99000    0.094    0.000    0.285    0.000 re.py:203(sub)
   198396    0.093    0.000    0.168    0.000 Sheet.py:120(get_cell)
    99198    0.091    0.000    0.284    0.000 re.py:188(match)
    99198    0.084    0.000    0.369    0.000 utils.py:131(check_valid_cell_location)
    99000    0.081    0.000    0.081    0.000 {method 'sub' of 're.Pattern' objects}
    99198    0.080    0.000    0.100    0.000 visitors.py:430(<listcomp>)
    99198    0.079    0.000    2.677    0.000 visitors.py:415(visit)
   297396    0.079    0.000    0.079    0.000 Cell.py:128(get_contents)
   480843    0.070    0.000    0.070    0.000 {built-in method builtins.len}
   597564    0.070    0.000    0.070    0.000 {method 'pop' of 'list' objects}
    99198    0.063    0.000    0.084    0.000 utils.py:212(is_formula)
   198198    0.057    0.000    0.057    0.000 Cell.py:62(get_cached_formula)
    99198    0.054    0.000    0.071    0.000 utils.py:295(get_highest_precedence_error)
168003/164241    0.052    0.000    0.066    0.000 {built-in method builtins.hash}
    99297    0.049    0.000    0.049    0.000 {built-in method _abc._abc_instancecheck}
      198    0.046    0.000    0.165    0.001 earley_forest.py:283(visit)
    99297    0.043    0.000    0.092    0.000 abc.py:96(__instancecheck__)
    99198    0.041    0.000    0.041    0.000 {method 'quantize' of 'decimal.Decimal' objects}
    51084    0.040    0.000    0.065    0.000 utils.py:345(add)
   198297    0.038    0.000    0.038    0.000 Sheet.py:54(get_sheet_name)
    99198    0.038    0.000    0.038    0.000 Cell.py:131(set_children)
   109395    0.038    0.000    0.038    0.000 {built-in method __new__ of type object at 0x00007FFB3714DCB0}
   198990    0.034    0.000    0.034    0.000 {method 'strip' of 'str' objects}
    38511    0.034    0.000    0.064    0.000 grammar.py:18(__eq__)
    99198    0.033    0.000    0.033    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
    89496    0.029    0.000    0.042    0.000 grammar.py:25(__hash__)
   108009    0.027    0.000    0.027    0.000 {method 'add' of 'set' objects}
    61182    0.027    0.000    0.027    0.000 earley_common.py:28(__eq__)
    99198    0.024    0.000    0.024    0.000 Parser.py:108(get_cell_refs)
      198    0.024    0.000   24.596    0.124 Workbook.py:37(run_func)
      198    0.022    0.000   24.573    0.124 Workbook.py:738(set_cell_contents)
    28413    0.021    0.000    0.036    0.000 utils.py:342(__contains__)
    99198    0.021    0.000    0.021    0.000 Cell.py:135(get_children)
      792    0.018    0.000    0.059    0.000 xearley.py:41(scan)
     1782    0.018    0.000    0.064    0.000 earley.py:135(<listcomp>)
     3366    0.017    0.000    0.040    0.000 earley_forest.py:50(__init__)
    99198    0.014    0.000    0.014    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
    75339    0.013    0.000    0.013    0.000 grammar.py:121(__hash__)
    79101    0.012    0.000    0.012    0.000 earley_common.py:31(__hash__)
     3564    0.010    0.000    0.047    0.000 earley_forest.py:437(_visit_node_out_helper)
     1881    0.009    0.000    0.024    0.000 earley_forest.py:603(transform_packed_node)
     3366    0.008    0.000    0.017    0.000 {built-in method builtins.sorted}
    29304    0.008    0.000    0.008    0.000 {built-in method builtins.next}
     9504    0.007    0.000    0.008    0.000 {built-in method fromkeys}
     9504    0.007    0.000    0.015    0.000 utils.py:339(__init__)
      198    0.006    0.000    0.872    0.004 earley.py:262(parse)
    39204    0.006    0.000    0.006    0.000 {built-in method builtins.id}
     3564    0.006    0.000    0.019    0.000 earley_forest.py:64(add_family)
     1683    0.006    0.000    0.006    0.000 earley_forest.py:499(__init__)
     3564    0.006    0.000    0.009    0.000 earley_forest.py:131(__init__)
      198    0.005    0.000    0.687    0.003 xearley.py:39(_parse)
     1881    0.004    0.000    0.012    0.000 earley_forest.py:631(visit_packed_node_in)
     3564    0.004    0.000    0.018    0.000 earley_common.py:25(advance)
     3366    0.004    0.000    0.024    0.000 earley_forest.py:85(children)
     9603    0.004    0.000    0.006    0.000 utils.py:348(__iter__)
     1485    0.004    0.000    0.010    0.000 earley_forest.py:581(transform_symbol_node)
     3762    0.004    0.000    0.005    0.000 earley_forest.py:145(sort_key)
     1881    0.004    0.000    0.036    0.000 earley_forest.py:638(visit_packed_node_out)
     3960    0.004    0.000    0.007    0.000 parser_frontends.py:184(match)
     1881    0.003    0.000    0.007    0.000 earley_forest.py:427(visit_packed_node_in)
     1485    0.003    0.000    0.007    0.000 earley_forest.py:565(_call_rule_func)
     1683    0.003    0.000    0.019    0.000 earley_forest.py:422(visit_symbol_node_in)
     1683    0.003    0.000    0.031    0.000 earley_forest.py:625(visit_symbol_node_in)
     5049    0.003    0.000    0.004    0.000 {method 'setdefault' of 'dict' objects}
      198    0.003    0.000    0.878    0.004 parser_frontends.py:100(parse)
    16236    0.002    0.000    0.002    0.000 {method 'pop' of 'collections.deque' objects}
    12969    0.002    0.000    0.002    0.000 {built-in method builtins.iter}
      198    0.002    0.000    0.004    0.000 utils.py:179(convert_location_to_idx)
    15741    0.002    0.000    0.002    0.000 {method 'append' of 'collections.deque' objects}
     1485    0.002    0.000    0.004    0.000 earley_forest.py:556(_collapse_ambig)
      198    0.002    0.000    0.002    0.000 Parser.py:243(number)
     1881    0.002    0.000    0.003    0.000 earley_forest.py:155(children)
      495    0.002    0.000    0.003    0.000 lexer.py:213(_future_new)
      198    0.002    0.000    0.002    0.000 parser_frontends.py:96(_make_lexer_thread)
     1881    0.002    0.000    0.032    0.000 earley_forest.py:450(visit_packed_node_out)
     1683    0.002    0.000    0.003    0.000 earley_forest.py:70(load_paths)
     5247    0.001    0.000    0.001    0.000 {method 'remove' of 'set' objects}
      198    0.001    0.000    0.004    0.000 earley.py:284(<listcomp>)
      198    0.001    0.000    0.007    0.000 Sheet.py:60(set_cell_contents)
      594    0.001    0.000    0.001    0.000 {method 'join' of 'str' objects}
     3366    0.001    0.000    0.002    0.000 utils.py:357(__len__)
      198    0.001    0.000    0.002    0.000 earley_forest.py:523(__init__)
     3762    0.001    0.000    0.001    0.000 earley_forest.py:141(is_empty)
     1485    0.001    0.000    0.016    0.000 earley_forest.py:444(visit_symbol_node_out)
      198    0.001    0.000    0.002    0.000 Workbook.py:698(_get_sheet_name_location)
      198    0.001    0.000    0.166    0.001 earley_forest.py:535(visit)
      495    0.001    0.000    0.004    0.000 lexer.py:202(__new__)
      495    0.001    0.000    0.001    0.000 earley_forest.py:193(__init__)
     1881    0.001    0.000    0.001    0.000 earley_forest.py:158(<listcomp>)
      396    0.001    0.000    0.001    0.000 earley_forest.py:432(visit_token_node)
      198    0.001    0.000    0.003    0.000 Workbook.py:725(clean_children_cells)
     1485    0.001    0.000    0.001    0.000 earley_forest.py:571(_call_ambig_func)
     1287    0.001    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
      198    0.001    0.000    0.879    0.004 lark.py:640(parse)
      198    0.001    0.000    0.001    0.000 Sheet.py:124(update_extent)
     3564    0.001    0.000    0.001    0.000 earley_forest.py:548(_check_cycle)
     3267    0.001    0.000    0.001    0.000 earley_forest.py:101(__hash__)
      198    0.001    0.000    0.167    0.001 earley_forest.py:397(transform)
     3564    0.001    0.000    0.001    0.000 earley_forest.py:169(__hash__)
      198    0.001    0.000    0.001    0.000 earley_forest.py:390(__init__)
      198    0.001    0.000    0.001    0.000 parse_tree_builder.py:145(__call__)
      198    0.001    0.000    0.001    0.000 earley_forest.py:591(transform_intermediate_node)
      198    0.001    0.000    0.001    0.000 parser_frontends.py:86(_verify_start)
      792    0.001    0.000    0.001    0.000 utils.py:354(__bool__)
      198    0.000    0.000    0.001    0.000 Cell.py:65(set_contents)
      198    0.000    0.000    0.000    0.000 lark.py:220(__getattr__)
     1485    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
       99    0.000    0.000    0.002    0.000 Workbook.py:711(add_children_cells)
      198    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      198    0.000    0.000    0.000    0.000 Cell.py:59(cache_formula)
       99    0.000    0.000    0.000    0.000 Graph.py:96(update_child)
      495    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
      198    0.000    0.000    0.000    0.000 tree.py:61(__init__)
      198    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
       99    0.000    0.000    0.000    0.000 Graph.py:68(add_connection)
      198    0.000    0.000    0.000    0.000 earley_forest.py:232(__init__)
      198    0.000    0.000    0.002    0.000 earley_forest.py:447(visit_intermediate_node_out)
      495    0.000    0.000    0.000    0.000 earley_forest.py:207(__hash__)
      495    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
      396    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       99    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
      198    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      396    0.000    0.000    0.000    0.000 earley_forest.py:418(transform_token_node)
      198    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      198    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
      2/1    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
      2/1    0.000    0.000    0.000    0.000 abc.py:100(__subclasscheck__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}



##################Running pro_copy_massive_sheet... #######################
for test <function pro_copy_massive_sheet at 0x000002B4D81B23A0> total time: 32.99080650000001
Total Logs
         7600051 function calls (7500050 primitive calls) in 5.969 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  1900006    0.796    0.000    0.796    0.000 {method 'lower' of 'str' objects}
   100000    0.767    0.000    1.958    0.000 Cell.py:81(set_cell_value)
   100000    0.613    0.000    5.702    0.000 Workbook.py:738(set_cell_contents)
   100000    0.422    0.000    1.042    0.000 utils.py:307(error_matcher)
   100000    0.385    0.000    3.356    0.000 Sheet.py:60(set_cell_contents)
   100000    0.360    0.000    0.593    0.000 Workbook.py:649(recompute_cell_and_parents)
   100000    0.296    0.000    0.483    0.000 utils.py:179(convert_location_to_idx)
   200000    0.194    0.000    0.336    0.000 Sheet.py:93(get_cell_value)
   200000    0.144    0.000    0.144    0.000 {method 'join' of 'str' objects}
   100000    0.141    0.000    2.127    0.000 Cell.py:65(set_contents)
   100000    0.128    0.000    0.161    0.000 Sheet.py:124(update_extent)
 100002/1    0.124    0.000    5.969    5.969 Workbook.py:37(run_func)
   100000    0.119    0.000    2.245    0.000 Cell.py:46(__init__)
   400000    0.118    0.000    0.118    0.000 {method 'get' of 'dict' objects}
        1    0.115    0.115    5.969    5.969 Workbook.py:1049(copy_sheet)
   200004    0.098    0.000    0.131    0.000 utils.py:78(get_hidden_name)
   100001    0.097    0.000    0.181    0.000 Workbook.py:551(get_sheet_name_from_hidden)
   800000    0.095    0.000    0.095    0.000 {method 'strip' of 'str' objects}
   100000    0.089    0.000    0.285    0.000 re.py:188(match)
   700002    0.088    0.000    0.088    0.000 {built-in method builtins.len}
   200000    0.086    0.000    0.124    0.000 Sheet.py:120(get_cell)
   100000    0.081    0.000    0.081    0.000 {method 'match' of 're.Pattern' objects}
   100000    0.080    0.000    0.115    0.000 re.py:289(_compile)
   100000    0.074    0.000    0.358    0.000 utils.py:131(check_valid_cell_location)
   100000    0.068    0.000    0.128    0.000 Workbook.py:725(clean_children_cells)
   200000    0.065    0.000    0.065    0.000 {built-in method _heapq.heappush}
   100000    0.057    0.000    0.074    0.000 utils.py:212(is_formula)
   100000    0.057    0.000    0.057    0.000 Graph.py:330(tarjans)
   200000    0.049    0.000    0.049    0.000 {built-in method builtins.isinstance}
   100000    0.028    0.000    0.028    0.000 {method 'rstrip' of 'str' objects}
   100000    0.027    0.000    0.027    0.000 Cell.py:128(get_contents)
   200000    0.024    0.000    0.024    0.000 {built-in method builtins.ord}
   100000    0.024    0.000    0.024    0.000 {method 'lstrip' of 'str' objects}
   100000    0.021    0.000    0.021    0.000 Cell.py:125(get_value)
   100000    0.020    0.000    0.020    0.000 {method 'upper' of 'str' objects}
   100001    0.019    0.000    0.019    0.000 Sheet.py:54(get_sheet_name)
        1    0.000    0.000    0.000    0.000 Workbook.py:879(new_sheet)
        1    0.000    0.000    0.000    0.000 utils.py:207(remove_exponent)
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        2    0.000    0.000    0.000    0.000 Workbook.py:516(num_sheets)
        1    0.000    0.000    0.000    0.000 utils.py:96(check_new_name)
        1    0.000    0.000    0.000    0.000 Graph.py:128(get_sheet_parents)
        1    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000    0.000    0.000 Graph.py:121(has_sheet)
        1    0.000    0.000    0.000    0.000 Workbook.py:868(recompute_sheet_parents)
        1    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
        1    0.000    0.000    0.000    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
        4    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 {method 'quantize' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 Sheet.py:25(__init__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 Graph.py:124(add_sheet)
       10    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
        1    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 Sheet.py:57(get_sheet_cells)
        1    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}



##################Running pro_pascals_triangle_speed... #######################
Total Logs
         2575114 function calls in 1.988 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     1275    0.193    0.000    0.249    0.000 Graph.py:330(tarjans)
    27448    0.187    0.000    1.602    0.000 Workbook.py:593(recompute_cell_value)
    26524    0.111    0.000    0.924    0.000 Workbook.py:555(get_formula_value)
    26524    0.101    0.000    0.401    0.000 Parser.py:253(cell)
    82122    0.100    0.000    0.153    0.000 Sheet.py:93(get_cell_value)
    27799    0.096    0.000    0.183    0.000 Cell.py:81(set_cell_value)
    26524    0.054    0.000    0.215    0.000 Workbook.py:817(get_cell_value)
   111644    0.052    0.000    0.071    0.000 utils.py:78(get_hidden_name)
     1275    0.051    0.000    1.911    0.001 Workbook.py:649(recompute_cell_and_parents)
   294913    0.049    0.000    0.049    0.000 {method 'lower' of 'str' objects}
    53048    0.048    0.000    0.073    0.000 {built-in method builtins.getattr}
   241266    0.046    0.000    0.046    0.000 {built-in method builtins.isinstance}
    26524    0.045    0.000    0.045    0.000 Parser.py:97(__init__)
    26524    0.043    0.000    0.668    0.000 visitors.py:421(_visit_tree)
    26524    0.043    0.000    0.051    0.000 typing.py:868(__new__)
    26524    0.041    0.000    0.216    0.000 Sheet.py:104(set_cell_value)
    54323    0.037    0.000    0.052    0.000 re.py:289(_compile)
    27799    0.035    0.000    0.055    0.000 utils.py:207(remove_exponent)
   138644    0.034    0.000    0.034    0.000 {method 'get' of 'dict' objects}
    26524    0.034    0.000    0.552    0.000 visitors.py:444(inner)
    27448    0.031    0.000    0.070    0.000 Workbook.py:586(get_cell_from_location)
    26524    0.029    0.000    0.038    0.000 visitors.py:430(<listcomp>)
    54896    0.029    0.000    0.029    0.000 Graph.py:137(get_parents_from_cell)
    27724    0.029    0.000    0.052    0.000 Workbook.py:551(get_sheet_name_from_hidden)
    26524    0.028    0.000    0.454    0.000 Parser.py:40(fix_formula)
    26524    0.026    0.000    0.064    0.000 visitors.py:429(visit_children)
    26524    0.025    0.000    0.070    0.000 re.py:203(sub)
    27799    0.024    0.000    0.072    0.000 re.py:188(match)
    27799    0.023    0.000    0.095    0.000 utils.py:131(check_valid_cell_location)
    27799    0.022    0.000    0.022    0.000 {method 'match' of 're.Pattern' objects}
    26524    0.020    0.000    0.025    0.000 lexer.py:265(__eq__)
    26524    0.020    0.000    0.688    0.000 visitors.py:415(visit)
    82122    0.020    0.000    0.020    0.000 Cell.py:125(get_value)
    26524    0.019    0.000    0.019    0.000 {method 'sub' of 're.Pattern' objects}
    26524    0.018    0.000    0.026    0.000 utils.py:295(get_highest_precedence_error)
    28723    0.018    0.000    0.023    0.000 utils.py:212(is_formula)
   115945    0.016    0.000    0.016    0.000 {built-in method builtins.len}
    53972    0.016    0.000    0.016    0.000 Cell.py:128(get_contents)
   137240    0.016    0.000    0.016    0.000 {method 'append' of 'list' objects}
    29998    0.014    0.000    0.025    0.000 Sheet.py:120(get_cell)
    53048    0.014    0.000    0.014    0.000 Cell.py:62(get_cached_formula)
    82344    0.011    0.000    0.011    0.000 {method 'pop' of 'list' objects}
     1275    0.011    0.000    1.984    0.002 Workbook.py:738(set_cell_contents)
    27799    0.010    0.000    0.010    0.000 {method 'quantize' of 'decimal.Decimal' objects}
    26524    0.010    0.000    0.010    0.000 Cell.py:131(set_children)
    27799    0.009    0.000    0.009    0.000 {method 'to_integral' of 'decimal.Decimal' objects}
    26524    0.008    0.000    0.008    0.000 {built-in method __new__ of type object at 0x00007FFB3714DCB0}
    37999    0.007    0.000    0.007    0.000 {method 'strip' of 'str' objects}
    26524    0.006    0.000    0.006    0.000 {method 'add' of 'set' objects}
    26524    0.006    0.000    0.006    0.000 Parser.py:108(get_cell_refs)
    27799    0.006    0.000    0.006    0.000 Cell.py:135(get_children)
     1275    0.006    0.000    0.009    0.000 utils.py:179(convert_location_to_idx)
    27724    0.005    0.000    0.005    0.000 Sheet.py:54(get_sheet_name)
     1275    0.005    0.000    0.008    0.000 utils.py:307(error_matcher)
     1275    0.004    0.000    1.988    0.002 Workbook.py:37(run_func)
     1275    0.004    0.000    0.036    0.000 Sheet.py:60(set_cell_contents)
     1275    0.004    0.000    0.013    0.000 Workbook.py:725(clean_children_cells)
    27799    0.004    0.000    0.004    0.000 {method 'is_finite' of 'decimal.Decimal' objects}
     1225    0.003    0.000    0.005    0.000 Workbook.py:698(_get_sheet_name_location)
     3775    0.003    0.000    0.003    0.000 {method 'join' of 'str' objects}
     1275    0.002    0.000    0.003    0.000 Sheet.py:124(update_extent)
     1275    0.002    0.000    0.019    0.000 Cell.py:65(set_contents)
     1225    0.002    0.000    0.003    0.000 Graph.py:96(update_child)
     1225    0.001    0.000    0.001    0.000 {method 'split' of 'str' objects}
     1225    0.001    0.000    0.001    0.000 {method 'remove' of 'list' objects}
     4725    0.001    0.000    0.001    0.000 {built-in method builtins.ord}
     1575    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
     1575    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
     1275    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
     1275    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 cProfile.py:134(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


